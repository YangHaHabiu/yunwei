// Code generated by goctl. DO NOT EDIT.
package types

type FilterList struct {
	Label    string        `json:"label,omitempty"`
	Value    string        `json:"value,omitempty"`
	Types    string        `json:"types,omitempty"`
	Children []*FilterList `json:"children,omitempty"`
}

type AddAssetReq struct {
	AssetData []*AssetDatas `json:"assetData"`
}

type AddAssetResp struct {
	Row *ListAssetData `json:"row"`
}

type UpdateAssetReq struct {
	*AssetDatas
}

type DeleteAssetReq struct {
	AssetId int64 `path:"assetId"`
}

type GetAssetReq struct {
	AssetId int64 `path:"assetId"`
}

type RecycleDeleteAssetReq struct {
	AssetId int64 `path:"assetId"`
}

type AssetDatas struct {
	AssetId            int64  `json:"assetId,optional"`
	OuterIp            string `json:"outerIp"`
	InnerIp            string `json:"innerIp"`
	HostRoleId         string `json:"hostRoleId,optional"`
	ProviderId         string `json:"providerId,optional"`
	HardwareInfo       string `json:"hardwareInfo,optional"`
	SshPort            string `json:"sshPort,optional"`
	InitType           string `json:"initType,optional"`
	CleanType          string `json:"cleanType,optional"`
	RecycleType        string `json:"recycleType,optional"`
	InitLoginInfo      string `json:"initLoginInfo,optional"`
	ChangeStatusRemark string `json:"changeStatusRemark,optional"`
	Remark             string `json:"remark,optional"`
	ProjectId          int64  `json:"projectId,optional"`
	CompanyId          int64  `json:"companyId,optional"`
	UserCompanyId      int64  `json:"userCompanyId,optional"`
	AccelerateDomain   string `json:"accelerateDomain,optional"`
	ClusterId          int64  `json:"clusterId,optional"`
}

type ListAssetReq struct {
	Current             int64  `form:"current,default=1"`
	PageSize            int64  `form:"pageSize,default=15"`
	AssetId             int64  `form:"asset_id,optional"`
	Ips                 string `form:"ips,optional"`
	RecycleType         int64  `form:"recycleType,optional"`
	CleanType           string `form:"cleanType,optional"`
	InitType            string `form:"initType,optional"`
	Provider            string `form:"provider,optional"`
	Label               string `form:"label,optional"`
	ProjectIds          string `form:"projectIds,optional"`
	OwnershipCompanyIds string `form:"ownershipCompanyIds,optional"`
	HostRoleCn          string `form:"hostRoleCn,optional"`
	ProjectType         string `form:"projectType,optional"`
}

type ListAssetResp struct {
	Rows   []*ListAssetData `json:"rows"`
	Total  int64            `json:"total"`
	Filter []*FilterList    `json:"filter"`
}

type ListAssetData struct {
	ViewAssetId                      int64  `json:"assetId"`
	ViewOuterIp                      string `json:"outerIp"`
	ViewInnerIp                      string `json:"innerIp"`
	ViewHostRoleId                   string `json:"hostRoleId"`
	ViewHostRoleCn                   string `json:"viewHostRoleCn"`
	ViewProviderId                   string `json:"providerId"`
	ViewProviderNameEn               string `json:"viewProviderNameEn"`
	ViewProviderNameCn               string `json:"viewProviderNameCn"`
	ViewHardwareInfo                 string `json:"hardwareInfo"`
	ViewSshPort                      string `json:"sshPort"`
	ViewInitType                     string `json:"initType"`
	ViewCleanType                    string `json:"cleanType"`
	ViewRecycleType                  string `json:"recycleType"`
	ViewInitLoginInfo                string `json:"initLoginInfo"`
	ViewChangeStatusRemark           string `json:"changeStatusRemark"`
	ViewRemark                       string `json:"remark"`
	ViewAssetCreateTime              string `json:"viewAssetCreateTime"`
	ViewAssetUpdateTime              string `json:"viewAssetUpdateTime"`
	ViewAssetDelFlag                 int64  `json:"viewAssetDelFlag"`
	ViewPrId                         string `json:"viewPrId"`
	ViewAssetOwnershipCompanyId      int64  `json:"companyId"`
	ViewAssetOwnershipCompanyCn      string `json:"viewAssetOwnershipCompanyCn"`
	ViewAssetOwnershipCompanyEn      string `json:"viewAssetOwnershipCompanyEn"`
	ViewAssetOwnershipCompanyDeleted int64  `json:"viewAssetOwnershipCompanyDeleted"`
	ViewServerAffiliationDeleted     int64  `json:"viewServerAffiliationDeleted"`
	ViewUserCompanyId                int64  `json:"userCompanyId"`
	ViewUserCompanyCn                string `json:"viewUserCompanyCn"`
	ViewUserCompanyEn                string `json:"viewUserCompanyEn"`
	ViewUserCompanyDeleted           int64  `json:"viewUserCompanyDeleted"`
	ViewUserProjectId                int64  `json:"projectId"`
	ViewUserProjectCn                string `json:"viewUserProjectCn"`
	ViewUserProjectEn                string `json:"viewUserProjectEn"`
	ViewUserProjectDeleted           int64  `json:"viewUserProjectDeleted"`
	LabelNames                       string `json:"LabelNames"`
	ViewAccelerateDomain             string `json:"accelerateDomain"`
}

type AssetInfoDataResp struct {
	ViewCompanyProjectView []*ListProjectData `json:"viewCompanyProjectView"`
}

type ListProjectData struct {
	ViewCompanyId      int64  `json:"viewCompanyId"`
	ViewCompanyCn      string `json:"viewCompanyCn"`
	ViewCompanyEn      string `json:"viewCompanyEn"`
	ViewCompanyDelFlag int64  `json:"viewCompanyDelFlag"`
	ViewPrId           int64  `json:"viewPrId"`
	ViewProjectId      int64  `json:"viewProjectId"`
	ViewProjectCn      string `json:"viewProjectCn"`
	ViewProjectEn      string `json:"viewProjectEn"`
	ViewDeptId         int64  `json:"viewProjectTeam"`
	ViewDeptName       string `json:"viewDeptName"`
	ViewProjectType    string `json:"viewProjectType"`
	ViewProjectTypeCn  string `json:"viewProjectTypeCn"`
	ViewGroupQq        string `json:"viewGroupQq"`
	ViewGroupTypeCn    string `json:"viewGroupTypeCn"`
	ViewGroupTypeEn    string `json:"viewGroupType"`
	ViewGroupDevQq     string `json:"viewGroupDevQq"`
	ViewProjectDelFlag string `json:"viewDelFlag"`
}

type OwnerProjectDataResp struct {
	OwnerProjectData []*OwnerProjectData `json:"ownerProjectData"`
}

type OwnerProjectData struct {
	Label     string `json:"label,omitempty"`
	Value     int64  `json:"value,omitempty"`
	ProjectEn string `json:"projectEn,omitempty"`
}

type GetWebSshReq struct {
	ProjectIds string `form:"projectIds,optional"`
}

type GetWebSshResp struct {
	Rows *WebSshDataTree `json:"rows"`
}

type WebSshDataTree struct {
	Key      string            `json:"key,omitempty"`
	Value    string            `json:"value,omitempty"`
	Children []*WebSshDataTree `json:"children,omitempty"`
	Hostname string            `json:"hostname,omitempty"`
	SshPort  string            `json:"sshPort,omitempty"`
	Cluster  string            `json:"cluster,omitempty"`
}

type AssetFileReq struct {
	Hostname string `form:"hostname,optional"`
	Port     int    `form:"port,optional"`
	Path     string `form:"path,optional"`
}

type AssetFileData struct {
	Code   string `json:"code"`
	Date   string `json:"date"`
	IsLink bool   `json:"isLink"`
	Kind   string `json:"kind"`
	Name   string `json:"name"`
	Size   string `json:"size"`
}

type AssetFileResp struct {
	Rows []*AssetFileData `json:"rows"`
}

type AssetFileUploadReq struct {
	Hostname string `form:"hostname"`
	Port     int    `form:"port,optional"`
	Path     string `form:"path"`
}

type AssetFileDownloadReq struct {
	File     string `json:"file"`
	Hostname string `json:"hostname"`
	Port     int    `json:"port,optional"`
	Path     string `json:"path"`
}

type AssetBatchDistributeReq struct {
	AssetIds string `json:"assetIds"`
	Model    string `json:"model"`
	Value    string `json:"value"`
}

type AddFeatureServerReq struct {
	*FeatureServerDatas
}

type UpdateFeatureServerReq struct {
	*FeatureServerDatas
}

type DeleteFeatureServerReq struct {
	FeatureServerId int64 `path:"featureServerId"`
}

type GetFeatureServerReq struct {
	FeatureServerId int64 `path:"featureServerId"`
}

type FeatureServerDatas struct {
	FeatureServerId   int64  `json:"featureServerId,optional"`
	ProjectId         int64  `json:"projectId,optional"`
	FeatureServerInfo string `json:"featureServerInfo,optional"`
	Remark            string `json:"remark,optional"`
}

type ListFeatureServerReq struct {
	Current         int64  `form:"current,default=1"`
	PageSize        int64  `form:"pageSize,default=15"`
	FeatureServerId int64  `form:"featureServerId,optional"`
	ProjectIds      string `form:"projectIds,optional"`
	Ip              string `form:"ip,optional"`
	Domain          string `form:"domain,optional"`
	Feature         string `form:"feature,optional"`
	Remark          string `form:"remark,optional"`
}

type ListFeatureServerResp struct {
	Rows   []*ListFeatureServerData `json:"rows"`
	Total  int64                    `json:"total"`
	Filter []*FilterList            `json:"filter"`
}

type ListFeatureServerData struct {
	FeatureServerId   int64  `json:"featureServerId"`
	ProjectId         int64  `json:"projectId"`
	FeatureServerInfo string `json:"featureServerInfo"`
	Remark            string `json:"remark"`
	DelFlag           int64  `json:"delFlag"`
	ProjectCn         string `json:"projectCn"`
	ProjectEn         string `json:"projectEn"`
}

type AddPlatformReq struct {
	*PlatformCommon
}

type UpdatePlatformReq struct {
	*PlatformCommon
}

type DeletePlatformReq struct {
	PlatformId int64 `path:"platformId"`
}

type GetPlatformReq struct {
	PlatformId int64 `path:"platformId"`
}

type GetPlatformResp struct {
	Row *ListPlatformData `json:"row"`
}

type DetailPlatformReq struct {
	PlatformId int64 `path:"platformId"`
}

type PlatformListByProjectReq struct {
	ProjectId int64  `path:"projectId"`
	NotType   string `form:"notType,optional"`
}

type PlatformListByProjectResp struct {
	PlatfromData []*PlatformCommon `json:"platfromData"`
}

type DetailPlatformResp struct {
	ViewPlatformAutoid int64  `json:"viewPlatformAutoid"`
	ViewPlatformId     int64  `json:"viewPlatformId"`
	ViewPlatformEn     string `json:"viewPlatformEn"`
	ViewPlatformCn     string `json:"viewPlatformCn"`
	ViewProjectId      int64  `json:"viewProjectId"`
	ViewProjectCn      string `json:"viewProjectCn"`
	ViewProjectEn      string `json:"viewProjectEn"`
	ViewPlatformRemark string `json:"viewPlatformRemark"`
	ViewLabels         string `json:"viewLabels"`
	ViewFeatureInfo    string `json:"viewFeatureInfo"`
}

type PlatformCommon struct {
	Id             int64  `json:"id,optional"`
	ProjectId      int64  `json:"projectId,optional"`
	PlatformId     int64  `json:"platformId,optional"`
	PlatformEn     string `json:"platformEn,optional"`
	PlatformCn     string `json:"platformCn,optional"`
	DomainFormat   string `json:"domainFormat,optional"`
	Remark         string `json:"remark,optional"`
	DelFlag        int64  `json:"delFlag,optional"`
	PlatformFormat string `json:"platformFormat,optional"`
}

type ListPlatformReq struct {
	Current      int64  `form:"current,default=1"`
	PageSize     int64  `form:"pageSize,default=15"`
	Id           int64  `form:"id,optional"`
	ProjectIds   string `form:"projectIds,optional"`
	PlatformInfo string `form:"platformInfo,optional"`
	Label        string `form:"label,optional"`
	PlatformType string `form:"platformType,optional"`
}

type ListPlatformResp struct {
	Rows   []*ListPlatformData `json:"rows"`
	Total  int64               `json:"total"`
	Filter []*FilterList       `json:"filter"`
}

type ListPlatformData struct {
	Id           int64  `json:"id"`
	ProjectId    int64  `json:"projectId"`
	PlatformId   int64  `json:"platformId"`
	PlatformEn   string `json:"platformEn"`
	PlatformCn   string `json:"platformCn"`
	DomainFormat string `json:"domainFormat"`
	Remark       string `json:"remark"`
	DelFlag      int64  `json:"delFlag"`
	LabelNames   string `json:"labelNames"`
	ProjectCn    string `json:"projectCn"`
}

type AddKeyManageReq struct {
	*KeyManageCommon
}

type UpdateKeyManageReq struct {
	*KeyManageCommon
}

type DeleteKeyManageReq struct {
	KeyId int64 `path:"keyId"`
}

type GetKeyManageReq struct {
	KeyId int64 `path:"keyId"`
}

type KeyManageCommon struct {
	KeyId   int64  `json:"keyId,optional"`
	KeyName string `json:"keyName,optional"`
	KeyPath string `json:"keyPath,optional"`
	KeyPass string `json:"keyPass,optional"`
	KeyType string `json:"keyType,optional"`
	Remark  string `json:"remark,optional"`
}

type ListKeyManageReq struct {
	Current  int64 `form:"current,default=1"`
	PageSize int64 `form:"pageSize,default=15"`
}

type ListKeyManageResp struct {
	Rows  []*ListKeyManageData `json:"rows"`
	Total int64                `json:"total"`
}

type ListKeyManageData struct {
	KeyId   int64  `json:"keyId"`
	KeyName string `json:"keyName"`
	KeyPath string `json:"keyPath"`
	KeyPass string `json:"keyPass"`
	KeyType string `json:"keyType"`
	Remark  string `json:"remark"`
}

type AddMaintainPlanReq struct {
	*MaintainPlanCommon
}

type UpdateMaintainPlanReq struct {
	*MaintainPlanCommon
}

type DeleteMaintainPlanReq struct {
	Id int64 `path:"id"`
}

type GetMaintainPlanReq struct {
	Id int64 `path:"id"`
}

type MaintainPlanCommon struct {
	Id               int64  `json:"id,optional"`
	ProjectId        int64  `json:"projectId,optional"`
	MaintainType     string `json:"maintainType,optional"`
	StartTime        string `json:"startTime,optional"`
	EndTime          string `json:"endTime,optional"`
	MaintainRange    string `json:"maintainRange,optional"`
	Title            string `json:"title,optional"`
	Content          string `json:"content,optional"`
	CreateBy         string `json:"createBy,optional"`
	CreateTime       string `json:"createTime,optional"`
	UpdateBy         string `json:"updateBy,optional"`
	UpdateTime       string `json:"updateTime,optional"`
	MaintainOperator string `json:"maintainOperator,optional"`
	ClusterId        string `json:"clusterId,optional"`
	TaskId           int64  `json:"taskId,optional"`
}

type ListMaintainPlanReq struct {
	Current    int64            `json:"current,default=1"`
	PageSize   int64            `json:"pageSize,default=15"`
	DateRange  string           `json:"dateRange,optional"`
	ProjectIds string           `json:"projectIds,optional"`
	Title      string           `json:"title,optional"`
	SortFields []*SortFieldData `json:"sortFields,optional"`
}

type ListMaintainPlanResp struct {
	Rows   []*ListMaintainPlanData `json:"rows"`
	Total  int64                   `json:"total"`
	Filter []*FilterList           `json:"filter"`
}

type ListMaintainPlanData struct {
	Id               int64  `json:"id"`
	ProjectId        int64  `json:"projectId"`
	MaintainType     string `json:"maintainType"`
	StartTime        string `json:"startTime"`
	EndTime          string `json:"endTime"`
	MaintainRange    string `json:"maintainRange"`
	Title            string `json:"title"`
	Content          string `json:"content"`
	CreateBy         string `json:"createBy"`
	CreateTime       string `json:"createTime"`
	UpdateBy         string `json:"updateBy"`
	UpdateTime       string `json:"updateTime"`
	MaintainOperator string `json:"maintainOperator"`
	ClusterId        string `json:"clusterId"`
	TaskId           int64  `json:"taskId"`
	ProjectCn        string `json:"projectCn"`
	MaintainTypeCn   string `json:"maintainTypeCn"`
	CreateNameEn     string `json:"createNameEn"`
	CreateNameCn     string `json:"createNameCn"`
	UpdateNameEn     string `json:"updateNameEn"`
	UpdateNameCn     string `json:"updateNameCn"`
}

type GetMaintainPlanListTreeByClsIdAndProIdReq struct {
	ProjectId int64  `form:"projectId"`
	ClusterCn string `form:"clusterCn"`
}

type GetMaintainPlanListTreeByClsIdAndProIdResp struct {
	MaRangeTreeData []*VueTree `json:"maRangeTreeData"`
}

type MaintainGetClusterInfoReq struct {
	ProjectId int64  `form:"projectId"`
	LabelIds  string `form:"labelIds,optional"`
}

type MaintainGetClusterInfoResp struct {
	ClusterInfoData []*MaintainGetClusterInfoData `json:"clusterInfoData"`
}

type MaintainGetClusterInfoData struct {
	LabelId     int64  `json:"labelId"`
	LabelName   string `json:"labelName"`
	LabelValues string `json:"labelValues"`
	Labelx      string `json:"labelx"`
	LabelRemark string `json:"labelRemark"`
	ProjectId   int64  `json:"projectId"`
	OuterIp     string `json:"outerIp"`
	BaseDir     string `json:"baseDir"`
}

type GetMaintanListByPriReq struct {
	ProjectId int64 `form:"projectId"`
}

type GetMaintanListByPriResp struct {
	Rows []*ListMaintainPlanData `json:"rows"`
}

type AddMergePlanReq struct {
	MergePlanData []*MergePlanCommon `json:"mergePlanData"`
}

type UpdateMergePlanReq struct {
	*MergePlanCommon
}

type DeleteMergePlanReq struct {
	Id int64 `path:"id"`
}

type GetMergePlanReq struct {
	Id int64 `path:"id"`
}

type MergeCheckServerRangeReq struct {
	*MergePlanCommon
}

type MergeCheckServerRangeResp struct {
	CombineRange string `json:"combineRange"`
}

type MergePlanCommon struct {
	Id            int64   `json:"id,optional"`
	ProjectId     int64   `json:"projectId,optional"`
	PlatformId    int64   `json:"platformId,optional"`
	ServerId      int64   `json:"serverId,optional"`
	InputRange    string  `json:"inputRange,optional"`
	CombineRange  string  `json:"combineRange,optional"`
	StartTime     string  `json:"startTime,optional"`
	EndTime       string  `json:"endTime,optional"`
	MergeStatus   int64   `json:"mergeStatus,optional"`
	MergeOperator string  `json:"mergeOperator,optional"`
	AllRange      []int64 `json:"allRange,optional"`
}

type ListMergePlanReq struct {
	Current      int64            `json:"current,default=1"`
	PageSize     int64            `json:"pageSize,default=15"`
	ProjectIds   string           `json:"projectIds,optional"`
	DateRange    string           `json:"dateRange,optional"`
	PlatformIds  string           `json:"platformIds,optional"`
	MergeStatus  string           `json:"mergeStatus,optional"`
	SortFields   []*SortFieldData `json:"sortFields,optional"`
	PlatformType string           `json:"platformType,optional"`
}

type ListMergePlanResp struct {
	Rows   []*ListMergePlanData `json:"rows"`
	Total  int64                `json:"total"`
	Filter []*FilterList        `json:"filter"`
}

type ListMergePlanData struct {
	Id            int64  `json:"id"`
	ProjectId     int64  `json:"projectId"`
	PlatformId    int64  `json:"platformId"`
	ServerId      int64  `json:"serverId"`
	InputRange    string `json:"inputRange"`
	CombineRange  string `json:"combineRange"`
	StartTime     string `json:"startTime"`
	EndTime       string `json:"endTime"`
	MergeStatus   int64  `json:"mergeStatus"`
	MergeOperator string `json:"mergeOperator"`
	PlatformCn    string `json:"platformCn"`
	PlatformEn    string `json:"platformEn"`
	ProjectCn     string `json:"projectCn"`
}

type VueTree struct {
	Value       string     `json:"value"`
	Label       string     `json:"label"`
	Total       string     `json:"total,omitempty"`
	Level       string     `json:"level,omitempty"`
	Platform    string     `json:"platform,omitempty"`
	Ips         string     `json:"ips,omitempty"`
	NewPlatform string     `json:"new_platform,omitempty"`
	Children    []*VueTree `json:"children,omitempty"`
}

type GetMergeListTreeByPlatIdAndProIdReq struct {
	ProjectId  int64 `form:"projectId"`
	PlatformId int64 `form:"platformId"`
}

type GetMergeListTreeByPlatIdAndProIdResp struct {
	MeRangeTreeData []*VueTree `json:"meRangeTreeData"`
}

type AddOpenPlanReq struct {
	OpenPlanData []*OpenPlanCommon `json:"openPlanData"`
}

type UpdateOpenPlanReq struct {
	*OpenPlanCommon
}

type DeleteOpenPlanReq struct {
	Id int64 `path:"id"`
}

type GetOpenPlanReq struct {
	Id int64 `path:"id"`
}

type OpenPlanCommon struct {
	Id              int64  `json:"id,optional"`
	ProjectId       int64  `json:"projectId,optional"`
	PlatformId      int64  `json:"platformId,optional"`
	ServerId        int64  `json:"serverId,optional"`
	GameserverTitle string `json:"gameserverTitle,optional"`
	InstallStatus   string `json:"installStatus,optional"`
	OpenTime        string `json:"openTime,optional"`
	Remark          string `json:"remark,optional"`
}

type ListOpenPlanReq struct {
	Current       int64            `json:"current,default=1"`
	PageSize      int64            `json:"pageSize,default=15"`
	ProjectIds    string           `json:"projectIds,optional"`
	DateRange     string           `json:"dateRange,optional"`
	PlatformIds   string           `json:"platformIds,optional"`
	InitdbStatus  string           `json:"initdbStatus,optional"`
	InstallStatus string           `json:"installStatus,optional"`
	NotType       string           `json:"notType,optional"`
	GameType      string           `json:"gameType,optional"`
	SortFields    []*SortFieldData `json:"sortFields,optional"`
	ClusterName   string           `json:"clusterName,optional"`
	PlatformType  string           `json:"platformType,optional"`
}

type SortFieldData struct {
	Field string `json:"field"`
	Order string `json:"order"`
}

type ListOpenPlanResp struct {
	Rows   []*ListOpenPlanData `json:"rows"`
	Total  int64               `json:"total"`
	Filter []*FilterList       `json:"filter"`
}

type ListOpenPlanData struct {
	Id              int64  `json:"id"`
	ProjectId       int64  `json:"projectId"`
	ProjectCn       string `json:"projectCn"`
	PlatformId      int64  `json:"platformId"`
	PlatformCn      string `json:"platformCn"`
	PlatformEn      string `json:"platformEn"`
	ServerId        int64  `json:"serverId"`
	GameserverTitle string `json:"gameserverTitle"`
	OpenTime        string `json:"openTime"`
	InstallStatus   string `json:"installStatus"`
	InstallOperator string `json:"installOperator"`
	InitdbStatus    string `json:"initdbStatus"`
	InitdbOperator  string `json:"initdbOperator"`
	Remark          string `json:"remark"`
	ClusterName     string `json:"clusterName"`
}

type BatchModifyOpenTimeReq struct {
	Data []*BatchModifyOpenTimeData `json:"data"`
}

type BatchModifyOpenTimeData struct {
	Id       int64 `json:"id"`
	OpenTime int64 `json:"openTime"`
}

type ListClusterReq struct {
	Current    int64  `form:"current,default=1"`
	PageSize   int64  `form:"pageSize,default=15"`
	LabelId    int64  `form:"labelId,optional"`
	ProjectId  int64  `form:"projectId,optional"`
	ProjectIds string `form:"projectIds,optional"`
	ClusterCn  string `form:"clusterCn,optional"`
}

type ListClusterResp struct {
	Rows   []*ListClusterData `json:"rows"`
	Total  int64              `json:"total"`
	Filter []*FilterList      `json:"filter"`
}

type ListClusterData struct {
	ViewLabelId              int64  `json:"labelId"`
	ViewLabelName            string `json:"labelName"`
	ViewLabelValues          string `json:"labelValues"`
	ViewLabelRemark          string `json:"labelRemark"`
	ViewProjectId            int64  `json:"projectId"`
	ViewProjectCn            string `json:"projectCn"`
	ViewProjectEn            string `json:"projectEn"`
	ViewClusterFeatureInfo   string `json:"clusterFeatureInfo"`
	ViewFeatureServerDelFlag int64  `json:"featureServerDelFlag"`
}

type ListClusterAssetData struct {
	ViewDataUrl string `json:"viewDataUrl"`
	ViewJsonId  string `json:"viewJsonId"`
	AssetIp     string `json:"assetIp"`
}

type ListClusterPlatformData struct {
	ViewDataUrl  string `json:"viewDataUrl"`
	ViewJsonId   string `json:"viewJsonId"`
	PlatformInfo string `json:"platformInfo"`
}

type DetailClusterReq struct {
	LabelId   int64 `form:"labelId"`
	ProjectId int64 `form:"projectId"`
}

type DetailClusterResp struct {
	ViewLabelName          string                     `json:"labelName"`
	ViewProjectCn          string                     `json:"projectCn"`
	ViewClusterFeatureInfo string                     `json:"clusterFeatureInfo"`
	AssetRows              []*ListClusterAssetData    `json:"assetRows"`
	PlatformRows           []*ListClusterPlatformData `json:"platformRows"`
}

type ListHostsReq struct {
	Current        int64  `form:"current,default=1"`
	PageSize       int64  `form:"pageSize,default=15"`
	ViewHostRoleCn string `form:"viewHostRoleCn,optional"`
	ProjectIds     string `form:"projectIds,optional"`
	Company        string `form:"company,optional"`
	Ips            string `form:"ips,optional"`
	SNames         string `form:"sNames,optional"`
	Provider       string `form:"provider,optional"`
	Label          string `form:"label,optional"`
}

type ListHostsResp struct {
	Rows   []*ListHostsData `json:"rows"`
	Total  int64            `json:"total"`
	Filter []*FilterList    `json:"filter"`
}

type ListHostsData struct {
	ViewAssetId        string `json:"viewAssetId"`
	ViewUserCompanyCn  string `json:"viewUserCompanyCn"`
	ViewUserProjectCn  string `json:"viewUserProjectCn"`
	ViewOuterIp        string `json:"viewOuterIp"`
	ViewInnerIp        string `json:"viewInnerIp"`
	ViewHardwareInfo   string `json:"viewHardwareInfo"`
	ViewProviderNameCn string `json:"viewProviderNameCn"`
	ViewProviderNameEn string `json:"viewProviderNameEn"`
	ViewHostRoleCn     string `json:"viewHostRoleCn"`
	Installed          string `json:"installed"`
	ServerName         string `json:"serverName"`
	LabelInfo          string `json:"labelInfo"`
}

type ListGameServerReq struct {
	Current         int64  `form:"current,default=1"`
	PageSize        int64  `form:"pageSize,default=15"`
	ServerStatus    string `form:"serverStatus,optional"`
	ProjectIds      string `form:"projectIds,optional"`
	NewPlatformInfo string `form:"newPlatformInfo,optional"`
	Ip              string `form:"ip,optional"`
	GameServerTitle string `form:"gameServerTitle,optional"`
	ServerStatusX   string `form:"serverStatusX,optional"`
	OpenTime        string `form:"openTime,optional"`
	PlatformType    string `form:"platformType,optional"`
}

type ListGameServerResp struct {
	Rows   []*ListGameServerData `json:"rows"`
	Total  int64                 `json:"total"`
	Filter []*FilterList         `json:"filter"`
}

type ListGameServerData struct {
	Id              string `json:"id"`
	ProjectId       string `json:"projectId"`
	PlatformId      string `json:"platformId"`
	ServerId        string `json:"serverId"`
	ServerAlias     string `json:"serverAlias"`
	OpenTime        string `json:"openTime"`
	AssetId         string `json:"assetId"`
	ServerStatus    string `json:"serverStatus"`
	CombineRemark   string `json:"combineRemark"`
	OperateInfo     string `json:"operateInfo"`
	DelFlag         string `json:"delFlag"`
	ProjectCn       string `json:"projectCn"`
	OuterIp         string `json:"outerIp"`
	InnerIp         string `json:"innerIp"`
	PlatformCn      string `json:"platformCn"`
	PlatformEn      string `json:"platformEn"`
	Ip              string `json:"ip"`
	NewPlatformInfo string `json:"newPlatformInfo"`
	GameServerTitle string `json:"gameServerTitle"`
}

type AddTasksReq struct {
	Title        string `json:"title"`
	ProjectId    int64  `json:"projectId"`
	ClusterId    string `json:"clusterId"`
	StartTime    string `json:"startTime"`
	Content      string `json:"content,optional"`
	TaskType     string `json:"taskType"`
	TaskListForm string `json:"taskListForm"`
	OuterIp      string `json:"outerIp,optional"`
	MaintainId   int64  `json:"maintainId,optional"`
	Uid          string `json:"uid,optional"`
}

type UpdateTasksReq struct {
	Id               int64  `json:"id"`
	Title            string `json:"title"`
	ErrDifferenceSet string `json:"errDifferenceSet,optional"`
	DifferenceSet    string `json:"differenceSet,optional"`
	IsEnable         int64  `json:"isEnable,optional"`
	TaskType         string `json:"taskType,optional"`
	ProjectId        int64  `json:"projectId"`
	ClusterId        string `json:"clusterId"`
	MaintainId       int64  `json:"maintainId"`
	StartTime        string `json:"startTime"`
	Content          string `json:"content,optional"`
	TaskListForm     string `json:"taskListForm"`
	OuterIp          string `json:"outerIp,optional"`
}

type DeleteTasksReq struct {
	Id int64 `path:"id"`
}

type GetTasksReq struct {
	Id int64 `path:"id"`
}

type GetTasksResp struct {
	AllIdArr []int64          `json:"allIdArr"`
	ErrArr   []int64          `json:"errArr"`
	Rows     []*ListTasksData `json:"rows"`
}

type ListTasksReq struct {
	Current    int64  `form:"current,default=1"`
	PageSize   int64  `form:"pageSize,default=15"`
	ProjectIds string `form:"projectIds,optional"`
	CreateTime string `form:"createTime,optional"`
	TaskType   string `form:"taskType,optional"`
	CreateBy   string `form:"createBy,optional"`
}

type ListTasksResp struct {
	Rows   []*ListTasksData `json:"rows"`
	Total  int64            `json:"total"`
	Filter []*FilterList    `json:"filter"`
}

type ListTasksData struct {
	Id             int64  `json:"id"`
	ProjectId      int64  `json:"projectId"`
	ClusterId      string `json:"clusterId"`
	TaskType       string `json:"taskType"`
	Level          int64  `json:"level"`
	MaintainId     int64  `json:"maintainId"`
	Name           string `json:"name"`
	Types          string `json:"types"`
	Pid            int64  `json:"pid"`
	TaskStartTime  int64  `json:"taskStartTime"`
	TaskEndTime    int64  `json:"taskEndTime"`
	TaskExecTime   int64  `json:"taskExecTime"`
	Cmd            string `json:"cmd"`
	Content        string `json:"content"`
	TaskStatus     int64  `json:"taskStatus"`
	TaskStep       int64  `json:"taskStep"`
	OuterIp        string `json:"outerIp"`
	ExportFileName string `json:"exportFileName"`
	Remark         string `json:"remark"`
	CreateNameEn   string `json:"createNameEn"`
	CreateNameCn   string `json:"createNameCn"`
	UpdateNameEn   string `json:"updateNameEn"`
	UpdateNameCn   string `json:"updateNameCn"`
	ProjectCn      string `json:"projectCn"`
	TaskTypeCn     string `json:"taskTypeCn"`
	TaskStatusCn   string `json:"taskStatusCn"`
	ProjectEn      string `json:"projectEn"`
}

type GetTaskOperationList struct {
	OpTreeData []*TaskOperationListData `json:"opTreeData"`
}

type TaskOperationListData struct {
	Id       int64  `json:"id"`
	Name     string `json:"name"`
	Url      string `json:"url"`
	ParentId int64  `json:"parentId"`
	OrderNum int64  `json:"orderNum"`
	Tp       int64  `json:"tp"`
	RoleId   int64  `json:"roleId"`
	UserId   int64  `json:"userId"`
}

type TaskGetFormatJsonReq struct {
	Game    string `json:"game"`
	Content string `json:"content"`
}

type OperationListM struct {
	OperationListForm []*TaskCommonJson `json:"operationListForm"`
}

type TaskGetFormatJsonResp struct {
	OperationListM []*OperationListM `json:"operationListM"`
}

type TaskCommonJson struct {
	Operation      string `json:"operation,omitempty"`
	OperationCn    string `json:"operationCn,omitempty"`
	Stable         string `json:"stable,omitempty"`
	OuterIp        string `json:"outerIp,omitempty"`
	DbUpdate       string `json:"dbUpdate,omitempty"`
	FileList       string `json:"fileList,omitempty"`
	MaintainRange  string `json:"maintainRange,omitempty"`
	CmdList        string `json:"cmdList,omitempty"`
	DbType         string `json:"dbType,omitempty"`
	PlatName       string `json:"platName,omitempty"`
	CheckSt        string `json:"checkSt,omitempty"`
	SQLCmd         string `json:"SQLCmd,omitempty"`
	Merge          string `json:"merge,omitempty"`
	ExportFileName string `json:"exportFileName,omitempty"`
	InitSetTime    string `json:"initSetTime,omitempty"`
	ExecuteSQL     string `json:"executeSQL,omitempty"`
	ExecuteFlag    string `json:"executeFlag,omitempty"`
}

type GetWebSocketAddrResp struct {
	IpAddr string `json:"ipAddr"`
}

type GetHotLogHistoryReq struct {
	Id int64 `path:"id"`
}

type ListHotLogHistoryResp struct {
	Rows []*HotLogHistoryDataTree `json:"rows"`
}

type ListHotLogHistoryData struct {
	Id          int64  `json:"id"`
	HotTitle    string `json:"hotTitle"`
	ProjectId   int64  `json:"projectId"`
	OperType    string `json:"operType"`
	OperContent string `json:"operContent"`
	OperStatus  int64  `json:"operStatus"`
	CreateBy    string `json:"createBy"`
	CreateTime  int64  `json:"createTime"`
}

type HotLogHistoryDataTree struct {
	Label    string                   `json:"label"`
	Children []*HotLogHistoryDataTree `json:"children,omitempty"`
	Value    int64                    `json:"value,omitempty"`
}

type DetailTaskLogHistroyReq struct {
	TaskId int64 `path:"taskId"`
}

type DetailTaskLogHistroyResp struct {
	Id        int64  `json:"id"`
	TasksId   int64  `json:"tasksId"`
	TasksLogs string `json:"tasksLogs"`
	TasksTime int64  `json:"tasksTime"`
}

type ListTaskLogHistroyReq struct {
	TaskId int64 `form:"taskId"`
}

type ListTaskLogHistroyResp struct {
	Rows ListTaskLogHistroyDataJson `json:"rows"`
}

type ListTaskLogHistroyDataJson struct {
	LogInfo []*ListTaskLogHistroyData `json:"log_info"`
}

type ListTaskLogHistroyData struct {
	Label    interface{}               `json:"label"`
	IsOpen   int64                     `json:"is_open,omitempty"`
	Children []*ListTaskLogHistroyData `json:"children,omitempty"`
	TasksId  int64                     `json:"tasks_id,omitempty"`
	Value    int64                     `json:"value,omitempty"`
}

type AddConfigFileReq struct {
	*ConfigFileCommon
}

type UpdateConfigFileReq struct {
	*ConfigFileCommon
}

type DeleteConfigFileReq struct {
	ConfigFileId int64 `path:"ConfigFileId"`
}

type GetConfigFileReq struct {
	ConfigFileId int64 `path:"ConfigFileId"`
}

type ConfigFileCommon struct {
	Id          int64  `json:"id,optional"`
	ProjectId   int64  `json:"projectId,optional"`
	Name        string `json:"name,optional"`
	DestPath    string `json:"destPath,optional"`
	FileModTime int64  `json:"fileModTime,optional"`
}

type ListConfigFileReq struct {
	Current  int64 `form:"current,default=1"`
	PageSize int64 `form:"pageSize,default=15"`
}

type ListConfigFileResp struct {
	Rows  []*ListConfigFileData `json:"rows"`
	Total int64                 `json:"total"`
}

type ListConfigFileData struct {
	Id          int64  `json:"id"`
	ProjectId   int64  `json:"projectId"`
	ProjectCn   string `json:"projectCn"`
	ProjectEn   string `json:"projectEn"`
	Name        string `json:"name"`
	DestPath    string `json:"destPath"`
	FileModTime int64  `json:"fileModTime"`
	AssetCounts int64  `json:"assetCounts"`
}

type AddConfigFileDeliveryReq struct {
	ConfigFileData []*AddConfigFileDeliveryDataList `json:"configFileData"`
}

type AddConfigFileDeliveryDataList struct {
	ProjectEn string                       `json:"projectEn"`
	List      []*AddConfigFileDeliveryData `json:"list"`
}

type AddConfigFileDeliveryData struct {
	ProjectId    int64  `json:"projectId"`
	ProjectEn    string `json:"projectEn"`
	ConfigFileId int64  `json:"configFileId"`
	ConfigName   string `json:"configName"`
	ConfigTime   int64  `json:"configTime"`
	AssetId      int64  `json:"assetId"`
	SshIp        string `json:"sshIp"`
	SshPort      int64  `json:"sshPort"`
	DestPath     string `json:"destPath"`
}

type ListConfigFileDeliveryReq struct {
	ProjectIds string `form:"projectIds,optional"`
}

type ListConfigFileDeliveryResp struct {
	Rows      []*ListConfigFileData             `json:"rows"`
	MergeRows []*ListConfigFileDeliveryDataTree `json:"mergeRows"`
	Filter    []*FilterList                     `json:"filter"`
}

type ListConfigFileDeliveryDataTree struct {
	ProjectId int64    `json:"projectId"`
	TotalList string   `json:"totalList"`
	MouldFile []string `json:"mouldFile"`
}

type GetConfigFileDeliveryTreeReq struct {
	ProjectId    int64 `form:"projectId"`
	ConfigFileId int64 `form:"configFileId"`
}

type GetConfigFileDeliveryTreeResp struct {
	Rows string `json:"rows"`
}

type GetConfigFileDeliveryLogData struct {
	ViewAssetDescribe  string `json:"viewAssetDescribe"`
	ViewConfigFileName string `json:"viewConfigFileName"`
	ViewUserProjectCn  string `json:"viewUserProjectCn"`
}

type ConfigFileDeliveryGetFileContentReq struct {
	ConfigName string `form:"configName"`
	Option     string `form:"option,options=template|create"`
	ProjectEn  string `form:"projectEn"`
}

type ConfigFileDeliveryGetFileContentResp struct {
	Content string `json:"content"`
}

type UpdateConfigFileDeliveryTemplateReq struct {
	ConfigName string `json:"configName"`
	ProjectEn  string `json:"projectEn"`
	ProjectId  int64  `json:"projectId"`
	Content    string `json:"content"`
}

type ListWaitInstallReq struct {
	Current    int64            `json:"current,default=1"`
	PageSize   int64            `json:"pageSize,default=15"`
	SortFields []*SortFieldData `json:"sortFields,optional"`
}

type ListWaitInstallResp struct {
	Rows   []*ListWaitInstallData `json:"rows"`
	Total  int64                  `json:"total"`
	Filter []*FilterList          `json:"filter"`
}

type ListWaitInstallData struct {
	Id              int64  `json:"id"`
	ProjectId       int64  `json:"projectId"`
	ProjectCn       string `json:"projectCn"`
	PlatformId      int64  `json:"platformId"`
	PlatformCn      string `json:"platformCn"`
	PlatformEn      string `json:"platformEn"`
	ServerId        int64  `json:"serverId"`
	GameserverTitle string `json:"gameserverTitle"`
	OpenTime        string `json:"openTime"`
	InstallStatus   int64  `json:"installStatus"`
	InstallOperator string `json:"installOperator"`
	InitdbStatus    int64  `json:"initdbStatus"`
	InitdbOperator  string `json:"initdbOperator"`
	Remark          string `json:"remark"`
}

type ListWaitMergeReq struct {
	Current    int64            `json:"current,default=1"`
	PageSize   int64            `json:"pageSize,default=15"`
	SortFields []*SortFieldData `json:"sortFields,optional"`
}

type ListWaitMergeResp struct {
	Rows   []*ListWaitMergeData `json:"rows"`
	Total  int64                `json:"total"`
	Filter []*FilterList        `json:"filter"`
}

type ListWaitMergeData struct {
	Id            int64  `json:"id"`
	ProjectId     int64  `json:"projectId"`
	PlatformId    int64  `json:"platformId"`
	ServerId      int64  `json:"serverId"`
	InputRange    string `json:"inputRange"`
	CombineRange  string `json:"combineRange"`
	StartTime     string `json:"startTime"`
	EndTime       string `json:"endTime"`
	MergeStatus   int64  `json:"mergeStatus"`
	MergeOperator string `json:"mergeOperator"`
	PlatformCn    string `json:"platformCn"`
	PlatformEn    string `json:"platformEn"`
	ProjectCn     string `json:"projectCn"`
}

type ListInstallLogListReq struct {
	GameName string `form:"gameName"`
}

type ListInstallLogListResp struct {
	Rows []*ListInstallLogListData `json:"rows"`
}

type ListInstallLogListData struct {
	Name string `json:"name"`
}

type HelpListReq struct {
	GameName string `form:"gameName,optional"`
}

type HelpListResp struct {
	Rows []*HelpListData `json:"rows"`
}

type HelpListData struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type GetSumOfCurrentInfoListReq struct {
	ProjectIds string `form:"projectIds,optional"`
}

type GetSumOfCurrentInfoListResp struct {
	Rows []*GetSumOfCurrentInfoData `json:"rows"`
}

type GetSumOfCurrentInfoData struct {
	ProjectEn string `json:"projectEn"`
	Cluster   string `json:"cluster"`
	HostRole  string `json:"hostRole"`
	ServerNum int64  `json:"serverNum"`
	GameNum   int64  `json:"gameNum"`
}

type GetServerTrendChartListReq struct {
	ProjectIds string `form:"projectIds,optional"`
}

type GetServerTrendChartListResp struct {
	Rows []*GetServerTrendChartData `json:"rows"`
}

type GetServerTrendChartData struct {
	ProjectEn  string `json:"projectEn"`
	Counts     int64  `json:"counts"`
	Detail     string `json:"detail"`
	CreateTime int64  `json:"createTime"`
}

type GetGameTrendChartListReq struct {
	ProjectIds string `form:"projectIds,optional"`
}

type GetGameTrendChartListResp struct {
	Rows []*GetGameTrendChartData `json:"rows"`
}

type GetGameTrendChartData struct {
	ProjectEn  string `json:"projectEn"`
	Counts     int64  `json:"counts"`
	Detail     string `json:"detail"`
	CreateTime int64  `json:"createTime"`
}

type AddAutoOpengameRuleReq struct {
	*AutoOpengameRuleCommon
}

type UpdateAutoOpengameRuleReq struct {
	*AutoOpengameRuleCommon
}

type DeleteAutoOpengameRuleReq struct {
	AutoOpengameRuleId int64 `path:"AutoOpengameRuleId"`
}

type GetAutoOpengameRuleReq struct {
	AutoOpengameRuleId int64 `path:"AutoOpengameRuleId"`
}

type AutoOpengameRuleCommon struct {
	Id             int64  `json:"id,optional"`
	ProjectId      int64  `json:"projectId,optional"`
	PlatformId     int64  `json:"platformId,optional"`
	StartOpenTime  string `json:"startOpenTime,optional"`
	EndOpenTime    string `json:"endOpenTime,optional"`
	IntervalDay    int64  `json:"intervalDay,optional"`
	ThresholdValue int64  `json:"thresholdValue,optional"`
	NumberOfServer int64  `json:"numberOfServer,optional"`
	OpenTime       string `json:"openTime,optional"`
	StartOpenMulti string `json:"startOpenMulti,optional"`
	EndOpenMulti   string `json:"endOpenMulti,optional"`
	State          int64  `json:"state,optional"`
}

type ListAutoOpengameRuleReq struct {
	Current  int64 `form:"current,default=1"`
	PageSize int64 `form:"pageSize,default=15"`
}

type ListAutoOpengameRuleResp struct {
	Rows  []*ListAutoOpengameRuleData `json:"rows"`
	Total int64                       `json:"total"`
}

type ListAutoOpengameRuleData struct {
	Id             int64  `json:"id"`
	ProjectId      int64  `json:"projectId"`
	PlatformId     int64  `json:"platformId"`
	ProjectCn      string `json:"projectCn"`
	PlatformEn     string `json:"platformEn"`
	StartOpenTime  string `json:"startOpenTime"`
	EndOpenTime    string `json:"endOpenTime"`
	IntervalDay    int64  `json:"intervalDay"`
	ThresholdValue int64  `json:"thresholdValue"`
	NumberOfServer int64  `json:"numberOfServer"`
	OpenTime       string `json:"openTime"`
	StartOpenMulti string `json:"startOpenMulti"`
	EndOpenMulti   string `json:"endOpenMulti"`
	State          int64  `json:"state"`
}

type AddSwitchEntranceGameserverReq struct {
	*SwitchEntranceGameserverCommon
}

type UpdateSwitchEntranceGameserverReq struct {
	*SwitchEntranceGameserverCommon
}

type DeleteSwitchEntranceGameserverReq struct {
	Ids       string `form:"ids"`
	Operation string `form:"operation,options=start|stop"`
}

type GetSwitchEntranceGameserverReq struct {
	SwitchEntranceGameserverId int64 `path:"SwitchEntranceGameserverId"`
}

type SwitchEntranceGameserverCommon struct {
	Id             int64  `json:"id,optional"`
	ProjectId      int64  `json:"projectId,optional"`
	PlatformId     int64  `json:"platformId,optional"`
	ConfigJsonPath string `json:"configJsonPath,optional"`
	State          int64  `json:"state,optional"`
}

type ListSwitchEntranceGameserverReq struct {
	Current    int64  `form:"current,default=1"`
	PageSize   int64  `form:"pageSize,default=15"`
	ProjectIds string `form:"projectIds,optional"`
}

type ListSwitchEntranceGameserverResp struct {
	Rows  []*ListSwitchEntranceGameserverData `json:"rows"`
	Total int64                               `json:"total"`
}

type ListSwitchEntranceGameserverData struct {
	Id             int64  `json:"id"`
	ProjectId      int64  `json:"projectId"`
	ProjectCn      string `json:"projectCn"`
	PlatformId     int64  `json:"platformId"`
	PlatformEn     string `json:"platformEn"`
	ConfigJsonPath string `json:"configJsonPath"`
	State          int64  `json:"state"`
}

type AddAlarmThresholdManageReq struct {
	*AlarmThresholdManageCommon
}

type UpdateAlarmThresholdManageReq struct {
	*AlarmThresholdManageCommon
}

type DeleteAlarmThresholdManageReq struct {
	AlarmThresholdManageId int64 `path:"AlarmThresholdManageId"`
}

type GetAlarmThresholdManageReq struct {
	AlarmThresholdManageId    int64  `path:"AlarmThresholdManageId"`
	AlarmThresholdManageTypes string `path:"AlarmThresholdManageTypes"`
}

type AlarmThresholdManageCommon struct {
	Id           int64  `json:"id,optional"`
	Name         string `json:"name,optional"`
	Config       string `json:"config,optional"`
	Types        string `json:"types,optional"`
	ProjectId    int64  `json:"projectId,optional"`
	GameServerId int64  `json:"gameServerId,optional"`
	AssetId      int64  `json:"assetId,optional"`
	Level        int64  `json:"level,optional"`
	DelFlag      int64  `json:"delFlag,optional"`
	Remark       string `json:"remark,optional"`
}

type ListAlarmThresholdManageReq struct {
	Current         int64  `form:"current,default=1"`
	PageSize        int64  `form:"pageSize,default=15"`
	ProjectIds      string `form:"projectIds,optional"`
	Ips             string `form:"ips,optional"`
	Types           string `form:"types,optional"`
	GameServerAlias string `form:"gameServerAlias,optional"`
}

type ListAlarmThresholdManageResp struct {
	Rows   []*ListAlarmThresholdManageData `json:"rows"`
	Total  int64                           `json:"total"`
	Filter []*FilterList                   `json:"filter"`
}

type ListAlarmThresholdManageData struct {
	Id              int64  `json:"id"`
	Name            string `json:"name"`
	Config          string `json:"config"`
	Types           string `json:"types"`
	ProjectId       int64  `json:"projectId"`
	GameServerId    int64  `json:"gameServerId"`
	AssetId         int64  `json:"assetId"`
	Level           int64  `json:"level"`
	DelFlag         int64  `json:"delFlag"`
	Remark          string `json:"remark"`
	ProjectCn       string `json:"projectCn"`
	Ips             string `json:"ips"`
	GameServerAlias string `json:"gameServerAlias"`
}

type AddTasksScheduleQueueReq struct {
	*TasksScheduleQueueCommon
}

type UpdateTasksScheduleQueueReq struct {
	*TasksScheduleQueueCommon
}

type DeleteTasksScheduleQueueReq struct {
	TasksScheduleQueueId int64 `path:"TasksScheduleQueueId"`
}

type GetTasksScheduleQueueReq struct {
	TasksScheduleQueueId int64 `path:"TasksScheduleQueueId"`
}

type TasksScheduleQueueCommon struct {
	Id                int64  `json:"id,optional"`
	ScheduleTitle     string `json:"scheduleTitle,optional"`
	ScheduleStartTime int64  `json:"scheduleStartTime,optional"`
	ScheduleEndTime   int64  `json:"scheduleEndTime,optional"`
	ScheduleStatus    string `json:"scheduleStatus,optional"`
	ScheduleType      string `json:"scheduleType,optional"`
	ScheduleRangeIds  string `json:"scheduleRangeIds,optional"`
	ScheduleRemark    string `json:"scheduleRemark,optional"`
}

type ListTasksScheduleQueueReq struct {
	Current        int64  `form:"current,default=1"`
	PageSize       int64  `form:"pageSize,default=15"`
	ScheduleStatus string `form:"scheduleStatus,optional"`
	ScheduleType   string `form:"scheduleType,optional"`
	DateRange      string `form:"dateRange,optional"`
	ScheduleTitle  string `form:"scheduleTitle,optional"`
}

type ListTasksScheduleQueueResp struct {
	Rows   []*ListTasksScheduleQueueData `json:"rows"`
	Total  int64                         `json:"total"`
	Filter []*FilterList                 `json:"filter"`
}

type ListTasksScheduleQueueData struct {
	Id                   int64  `json:"id"`
	ScheduleTitle        string `json:"scheduleTitle"`
	ScheduleStartTime    int64  `json:"scheduleStartTime"`
	ScheduleEndTime      int64  `json:"scheduleEndTime"`
	ScheduleStatus       string `json:"scheduleStatus"`
	ScheduleType         string `json:"scheduleType"`
	ScheduleRangeIds     string `json:"scheduleRangeIds"`
	SchedulePid          int64  `json:"schedulePid"`
	ScheduleLogs         string `json:"scheduleLogs"`
	ScheduleRemark       string `json:"scheduleRemark"`
	ScheduleTypeMaps     string `json:"scheduleTypeMaps"`
	ScheduleCreateByName string `json:"scheduleCreateByName"`
}
