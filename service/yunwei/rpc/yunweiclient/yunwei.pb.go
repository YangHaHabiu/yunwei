// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: yunwei.proto

package yunweiclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//Asset Start
type AssetAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assetdata []*AssetDatas `protobuf:"bytes,1,rep,name=assetdata,proto3" json:"assetdata,omitempty"`
}

func (x *AssetAddReq) Reset() {
	*x = AssetAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetAddReq) ProtoMessage() {}

func (x *AssetAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetAddReq.ProtoReflect.Descriptor instead.
func (*AssetAddReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{0}
}

func (x *AssetAddReq) GetAssetdata() []*AssetDatas {
	if x != nil {
		return x.Assetdata
	}
	return nil
}

type AssetAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AssetAddResp) Reset() {
	*x = AssetAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetAddResp) ProtoMessage() {}

func (x *AssetAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetAddResp.ProtoReflect.Descriptor instead.
func (*AssetAddResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{1}
}

func (x *AssetAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type AssetUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset *AssetDatas `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *AssetUpdateReq) Reset() {
	*x = AssetUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetUpdateReq) ProtoMessage() {}

func (x *AssetUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetUpdateReq.ProtoReflect.Descriptor instead.
func (*AssetUpdateReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{2}
}

func (x *AssetUpdateReq) GetAsset() *AssetDatas {
	if x != nil {
		return x.Asset
	}
	return nil
}

type AssetUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AssetUpdateResp) Reset() {
	*x = AssetUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetUpdateResp) ProtoMessage() {}

func (x *AssetUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetUpdateResp.ProtoReflect.Descriptor instead.
func (*AssetUpdateResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{3}
}

func (x *AssetUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type AssetDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId int64 `protobuf:"varint,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *AssetDeleteReq) Reset() {
	*x = AssetDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetDeleteReq) ProtoMessage() {}

func (x *AssetDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetDeleteReq.ProtoReflect.Descriptor instead.
func (*AssetDeleteReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{4}
}

func (x *AssetDeleteReq) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

type AssetDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AssetDeleteResp) Reset() {
	*x = AssetDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetDeleteResp) ProtoMessage() {}

func (x *AssetDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetDeleteResp.ProtoReflect.Descriptor instead.
func (*AssetDeleteResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{5}
}

func (x *AssetDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type AssetRecycleDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecycleType int64 `protobuf:"varint,1,opt,name=recycleType,proto3" json:"recycleType,omitempty"`
	AssetId     int64 `protobuf:"varint,2,opt,name=assetId,proto3" json:"assetId,omitempty"`
}

func (x *AssetRecycleDeleteReq) Reset() {
	*x = AssetRecycleDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetRecycleDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetRecycleDeleteReq) ProtoMessage() {}

func (x *AssetRecycleDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetRecycleDeleteReq.ProtoReflect.Descriptor instead.
func (*AssetRecycleDeleteReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{6}
}

func (x *AssetRecycleDeleteReq) GetRecycleType() int64 {
	if x != nil {
		return x.RecycleType
	}
	return 0
}

func (x *AssetRecycleDeleteReq) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

type AssetRecycleDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AssetRecycleDeleteResp) Reset() {
	*x = AssetRecycleDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetRecycleDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetRecycleDeleteResp) ProtoMessage() {}

func (x *AssetRecycleDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetRecycleDeleteResp.ProtoReflect.Descriptor instead.
func (*AssetRecycleDeleteResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{7}
}

func (x *AssetRecycleDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type AssetListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current             int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize            int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	AssetId             int64  `protobuf:"varint,3,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Ips                 string `protobuf:"bytes,4,opt,name=ips,proto3" json:"ips,omitempty"`
	ProjectIds          string `protobuf:"bytes,6,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	RecycleType         int64  `protobuf:"varint,7,opt,name=recycleType,proto3" json:"recycleType,omitempty"`
	OwnershipCompanyIds string `protobuf:"bytes,8,opt,name=ownershipCompanyIds,proto3" json:"ownershipCompanyIds,omitempty"`
	CleanType           string `protobuf:"bytes,10,opt,name=cleanType,proto3" json:"cleanType,omitempty"`
	InitType            string `protobuf:"bytes,11,opt,name=initType,proto3" json:"initType,omitempty"`
	Provider            string `protobuf:"bytes,12,opt,name=provider,proto3" json:"provider,omitempty"`
	Label               string `protobuf:"bytes,13,opt,name=label,proto3" json:"label,omitempty"`
	HostRoleCn          string `protobuf:"bytes,14,opt,name=hostRoleCn,proto3" json:"hostRoleCn,omitempty"`
}

func (x *AssetListReq) Reset() {
	*x = AssetListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetListReq) ProtoMessage() {}

func (x *AssetListReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetListReq.ProtoReflect.Descriptor instead.
func (*AssetListReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{8}
}

func (x *AssetListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AssetListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AssetListReq) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AssetListReq) GetIps() string {
	if x != nil {
		return x.Ips
	}
	return ""
}

func (x *AssetListReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *AssetListReq) GetRecycleType() int64 {
	if x != nil {
		return x.RecycleType
	}
	return 0
}

func (x *AssetListReq) GetOwnershipCompanyIds() string {
	if x != nil {
		return x.OwnershipCompanyIds
	}
	return ""
}

func (x *AssetListReq) GetCleanType() string {
	if x != nil {
		return x.CleanType
	}
	return ""
}

func (x *AssetListReq) GetInitType() string {
	if x != nil {
		return x.InitType
	}
	return ""
}

func (x *AssetListReq) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *AssetListReq) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AssetListReq) GetHostRoleCn() string {
	if x != nil {
		return x.HostRoleCn
	}
	return ""
}

type AssetListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ViewAssets `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AssetListResp) Reset() {
	*x = AssetListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetListResp) ProtoMessage() {}

func (x *AssetListResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetListResp.ProtoReflect.Descriptor instead.
func (*AssetListResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{9}
}

func (x *AssetListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AssetListResp) GetList() []*ViewAssets {
	if x != nil {
		return x.List
	}
	return nil
}

type ViewAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ViewAssetId                      int64  `protobuf:"varint,1,opt,name=viewAssetId,proto3" json:"viewAssetId,omitempty"`
	ViewOuterIp                      string `protobuf:"bytes,2,opt,name=viewOuterIp,proto3" json:"viewOuterIp,omitempty"`
	ViewInnerIp                      string `protobuf:"bytes,3,opt,name=viewInnerIp,proto3" json:"viewInnerIp,omitempty"`
	ViewHostRoleId                   string `protobuf:"bytes,4,opt,name=viewHostRoleId,proto3" json:"viewHostRoleId,omitempty"`
	ViewProviderId                   string `protobuf:"bytes,5,opt,name=viewProviderId,proto3" json:"viewProviderId,omitempty"`
	ViewProviderNameEn               string `protobuf:"bytes,6,opt,name=viewProviderNameEn,proto3" json:"viewProviderNameEn,omitempty"`
	ViewProviderNameCn               string `protobuf:"bytes,7,opt,name=viewProviderNameCn,proto3" json:"viewProviderNameCn,omitempty"`
	ViewHardwareInfo                 string `protobuf:"bytes,8,opt,name=viewHardwareInfo,proto3" json:"viewHardwareInfo,omitempty"`
	ViewSshPort                      string `protobuf:"bytes,9,opt,name=viewSshPort,proto3" json:"viewSshPort,omitempty"`
	ViewInitType                     string `protobuf:"bytes,10,opt,name=viewInitType,proto3" json:"viewInitType,omitempty"`
	ViewCleanType                    string `protobuf:"bytes,11,opt,name=viewCleanType,proto3" json:"viewCleanType,omitempty"`
	ViewInitLoginInfo                string `protobuf:"bytes,12,opt,name=viewInitLoginInfo,proto3" json:"viewInitLoginInfo,omitempty"`
	ViewChangeStatusRemark           string `protobuf:"bytes,13,opt,name=viewChangeStatusRemark,proto3" json:"viewChangeStatusRemark,omitempty"`
	ViewRemark                       string `protobuf:"bytes,14,opt,name=viewRemark,proto3" json:"viewRemark,omitempty"`
	ViewAssetCreateTime              string `protobuf:"bytes,15,opt,name=viewAssetCreateTime,proto3" json:"viewAssetCreateTime,omitempty"`
	ViewAssetUpdateTime              string `protobuf:"bytes,16,opt,name=viewAssetUpdateTime,proto3" json:"viewAssetUpdateTime,omitempty"`
	ViewAssetDelFlag                 int64  `protobuf:"varint,17,opt,name=viewAssetDelFlag,proto3" json:"viewAssetDelFlag,omitempty"`
	ViewPrId                         string `protobuf:"bytes,18,opt,name=viewPrId,proto3" json:"viewPrId,omitempty"`
	ViewAssetOwnershipCompanyId      int64  `protobuf:"varint,19,opt,name=viewAssetOwnershipCompanyId,proto3" json:"viewAssetOwnershipCompanyId,omitempty"`
	ViewAssetOwnershipCompanyCn      string `protobuf:"bytes,20,opt,name=viewAssetOwnershipCompanyCn,proto3" json:"viewAssetOwnershipCompanyCn,omitempty"`
	ViewAssetOwnershipCompanyEn      string `protobuf:"bytes,21,opt,name=viewAssetOwnershipCompanyEn,proto3" json:"viewAssetOwnershipCompanyEn,omitempty"`
	ViewAssetOwnershipCompanyDeleted int64  `protobuf:"varint,22,opt,name=viewAssetOwnershipCompanyDeleted,proto3" json:"viewAssetOwnershipCompanyDeleted,omitempty"`
	ViewServerAffiliationDeleted     int64  `protobuf:"varint,23,opt,name=viewServerAffiliationDeleted,proto3" json:"viewServerAffiliationDeleted,omitempty"`
	ViewUserCompanyId                int64  `protobuf:"varint,24,opt,name=viewUserCompanyId,proto3" json:"viewUserCompanyId,omitempty"`
	ViewUserCompanyCn                string `protobuf:"bytes,25,opt,name=viewUserCompanyCn,proto3" json:"viewUserCompanyCn,omitempty"`
	ViewUserCompanyEn                string `protobuf:"bytes,26,opt,name=viewUserCompanyEn,proto3" json:"viewUserCompanyEn,omitempty"`
	ViewUserCompanyDeleted           int64  `protobuf:"varint,27,opt,name=viewUserCompanyDeleted,proto3" json:"viewUserCompanyDeleted,omitempty"`
	ViewUserProjectId                int64  `protobuf:"varint,28,opt,name=viewUserProjectId,proto3" json:"viewUserProjectId,omitempty"`
	ViewUserProjectCn                string `protobuf:"bytes,29,opt,name=viewUserProjectCn,proto3" json:"viewUserProjectCn,omitempty"`
	ViewUserProjectEn                string `protobuf:"bytes,30,opt,name=viewUserProjectEn,proto3" json:"viewUserProjectEn,omitempty"`
	ViewUserProjectDeleted           int64  `protobuf:"varint,31,opt,name=viewUserProjectDeleted,proto3" json:"viewUserProjectDeleted,omitempty"`
	ViewHostRoleCn                   string `protobuf:"bytes,32,opt,name=viewHostRoleCn,proto3" json:"viewHostRoleCn,omitempty"`
	ViewRecycleType                  string `protobuf:"bytes,33,opt,name=viewRecycleType,proto3" json:"viewRecycleType,omitempty"`
	LabelNames                       string `protobuf:"bytes,34,opt,name=labelNames,proto3" json:"labelNames,omitempty"`
	ViewAccelerateDomain             string `protobuf:"bytes,35,opt,name=viewAccelerateDomain,proto3" json:"viewAccelerateDomain,omitempty"`
}

func (x *ViewAssets) Reset() {
	*x = ViewAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewAssets) ProtoMessage() {}

func (x *ViewAssets) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewAssets.ProtoReflect.Descriptor instead.
func (*ViewAssets) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{10}
}

func (x *ViewAssets) GetViewAssetId() int64 {
	if x != nil {
		return x.ViewAssetId
	}
	return 0
}

func (x *ViewAssets) GetViewOuterIp() string {
	if x != nil {
		return x.ViewOuterIp
	}
	return ""
}

func (x *ViewAssets) GetViewInnerIp() string {
	if x != nil {
		return x.ViewInnerIp
	}
	return ""
}

func (x *ViewAssets) GetViewHostRoleId() string {
	if x != nil {
		return x.ViewHostRoleId
	}
	return ""
}

func (x *ViewAssets) GetViewProviderId() string {
	if x != nil {
		return x.ViewProviderId
	}
	return ""
}

func (x *ViewAssets) GetViewProviderNameEn() string {
	if x != nil {
		return x.ViewProviderNameEn
	}
	return ""
}

func (x *ViewAssets) GetViewProviderNameCn() string {
	if x != nil {
		return x.ViewProviderNameCn
	}
	return ""
}

func (x *ViewAssets) GetViewHardwareInfo() string {
	if x != nil {
		return x.ViewHardwareInfo
	}
	return ""
}

func (x *ViewAssets) GetViewSshPort() string {
	if x != nil {
		return x.ViewSshPort
	}
	return ""
}

func (x *ViewAssets) GetViewInitType() string {
	if x != nil {
		return x.ViewInitType
	}
	return ""
}

func (x *ViewAssets) GetViewCleanType() string {
	if x != nil {
		return x.ViewCleanType
	}
	return ""
}

func (x *ViewAssets) GetViewInitLoginInfo() string {
	if x != nil {
		return x.ViewInitLoginInfo
	}
	return ""
}

func (x *ViewAssets) GetViewChangeStatusRemark() string {
	if x != nil {
		return x.ViewChangeStatusRemark
	}
	return ""
}

func (x *ViewAssets) GetViewRemark() string {
	if x != nil {
		return x.ViewRemark
	}
	return ""
}

func (x *ViewAssets) GetViewAssetCreateTime() string {
	if x != nil {
		return x.ViewAssetCreateTime
	}
	return ""
}

func (x *ViewAssets) GetViewAssetUpdateTime() string {
	if x != nil {
		return x.ViewAssetUpdateTime
	}
	return ""
}

func (x *ViewAssets) GetViewAssetDelFlag() int64 {
	if x != nil {
		return x.ViewAssetDelFlag
	}
	return 0
}

func (x *ViewAssets) GetViewPrId() string {
	if x != nil {
		return x.ViewPrId
	}
	return ""
}

func (x *ViewAssets) GetViewAssetOwnershipCompanyId() int64 {
	if x != nil {
		return x.ViewAssetOwnershipCompanyId
	}
	return 0
}

func (x *ViewAssets) GetViewAssetOwnershipCompanyCn() string {
	if x != nil {
		return x.ViewAssetOwnershipCompanyCn
	}
	return ""
}

func (x *ViewAssets) GetViewAssetOwnershipCompanyEn() string {
	if x != nil {
		return x.ViewAssetOwnershipCompanyEn
	}
	return ""
}

func (x *ViewAssets) GetViewAssetOwnershipCompanyDeleted() int64 {
	if x != nil {
		return x.ViewAssetOwnershipCompanyDeleted
	}
	return 0
}

func (x *ViewAssets) GetViewServerAffiliationDeleted() int64 {
	if x != nil {
		return x.ViewServerAffiliationDeleted
	}
	return 0
}

func (x *ViewAssets) GetViewUserCompanyId() int64 {
	if x != nil {
		return x.ViewUserCompanyId
	}
	return 0
}

func (x *ViewAssets) GetViewUserCompanyCn() string {
	if x != nil {
		return x.ViewUserCompanyCn
	}
	return ""
}

func (x *ViewAssets) GetViewUserCompanyEn() string {
	if x != nil {
		return x.ViewUserCompanyEn
	}
	return ""
}

func (x *ViewAssets) GetViewUserCompanyDeleted() int64 {
	if x != nil {
		return x.ViewUserCompanyDeleted
	}
	return 0
}

func (x *ViewAssets) GetViewUserProjectId() int64 {
	if x != nil {
		return x.ViewUserProjectId
	}
	return 0
}

func (x *ViewAssets) GetViewUserProjectCn() string {
	if x != nil {
		return x.ViewUserProjectCn
	}
	return ""
}

func (x *ViewAssets) GetViewUserProjectEn() string {
	if x != nil {
		return x.ViewUserProjectEn
	}
	return ""
}

func (x *ViewAssets) GetViewUserProjectDeleted() int64 {
	if x != nil {
		return x.ViewUserProjectDeleted
	}
	return 0
}

func (x *ViewAssets) GetViewHostRoleCn() string {
	if x != nil {
		return x.ViewHostRoleCn
	}
	return ""
}

func (x *ViewAssets) GetViewRecycleType() string {
	if x != nil {
		return x.ViewRecycleType
	}
	return ""
}

func (x *ViewAssets) GetLabelNames() string {
	if x != nil {
		return x.LabelNames
	}
	return ""
}

func (x *ViewAssets) GetViewAccelerateDomain() string {
	if x != nil {
		return x.ViewAccelerateDomain
	}
	return ""
}

type AssetDatas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId            int64  `protobuf:"varint,1,opt,name=assetId,proto3" json:"assetId,omitempty"`
	OuterIp            string `protobuf:"bytes,2,opt,name=outerIp,proto3" json:"outerIp,omitempty"`
	InnerIp            string `protobuf:"bytes,3,opt,name=innerIp,proto3" json:"innerIp,omitempty"`
	HostRoleId         string `protobuf:"bytes,4,opt,name=hostRoleId,proto3" json:"hostRoleId,omitempty"`
	ProviderId         string `protobuf:"bytes,5,opt,name=providerId,proto3" json:"providerId,omitempty"`
	HardwareInfo       string `protobuf:"bytes,6,opt,name=hardwareInfo,proto3" json:"hardwareInfo,omitempty"`
	SshPort            string `protobuf:"bytes,7,opt,name=sshPort,proto3" json:"sshPort,omitempty"`
	InitType           string `protobuf:"bytes,8,opt,name=initType,proto3" json:"initType,omitempty"`
	CleanType          string `protobuf:"bytes,9,opt,name=cleanType,proto3" json:"cleanType,omitempty"`
	InitLoginInfo      string `protobuf:"bytes,10,opt,name=initLoginInfo,proto3" json:"initLoginInfo,omitempty"`
	ChangeStatusRemark string `protobuf:"bytes,11,opt,name=changeStatusRemark,proto3" json:"changeStatusRemark,omitempty"`
	Remark             string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	CompanyId          int64  `protobuf:"varint,13,opt,name=companyId,proto3" json:"companyId,omitempty"`
	ProjectId          int64  `protobuf:"varint,14,opt,name=projectId,proto3" json:"projectId,omitempty"`
	RecycleType        string `protobuf:"bytes,15,opt,name=recycleType,proto3" json:"recycleType,omitempty"`
	UserCompanyId      int64  `protobuf:"varint,16,opt,name=userCompanyId,proto3" json:"userCompanyId,omitempty"`
	AccelerateDomain   string `protobuf:"bytes,17,opt,name=accelerateDomain,proto3" json:"accelerateDomain,omitempty"`
	ClusterId          int64  `protobuf:"varint,18,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
}

func (x *AssetDatas) Reset() {
	*x = AssetDatas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetDatas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetDatas) ProtoMessage() {}

func (x *AssetDatas) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetDatas.ProtoReflect.Descriptor instead.
func (*AssetDatas) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{11}
}

func (x *AssetDatas) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AssetDatas) GetOuterIp() string {
	if x != nil {
		return x.OuterIp
	}
	return ""
}

func (x *AssetDatas) GetInnerIp() string {
	if x != nil {
		return x.InnerIp
	}
	return ""
}

func (x *AssetDatas) GetHostRoleId() string {
	if x != nil {
		return x.HostRoleId
	}
	return ""
}

func (x *AssetDatas) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *AssetDatas) GetHardwareInfo() string {
	if x != nil {
		return x.HardwareInfo
	}
	return ""
}

func (x *AssetDatas) GetSshPort() string {
	if x != nil {
		return x.SshPort
	}
	return ""
}

func (x *AssetDatas) GetInitType() string {
	if x != nil {
		return x.InitType
	}
	return ""
}

func (x *AssetDatas) GetCleanType() string {
	if x != nil {
		return x.CleanType
	}
	return ""
}

func (x *AssetDatas) GetInitLoginInfo() string {
	if x != nil {
		return x.InitLoginInfo
	}
	return ""
}

func (x *AssetDatas) GetChangeStatusRemark() string {
	if x != nil {
		return x.ChangeStatusRemark
	}
	return ""
}

func (x *AssetDatas) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AssetDatas) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *AssetDatas) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AssetDatas) GetRecycleType() string {
	if x != nil {
		return x.RecycleType
	}
	return ""
}

func (x *AssetDatas) GetUserCompanyId() int64 {
	if x != nil {
		return x.UserCompanyId
	}
	return 0
}

func (x *AssetDatas) GetAccelerateDomain() string {
	if x != nil {
		return x.AccelerateDomain
	}
	return ""
}

func (x *AssetDatas) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

type GetWebSshReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectIds string `protobuf:"bytes,1,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
}

func (x *GetWebSshReq) Reset() {
	*x = GetWebSshReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebSshReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebSshReq) ProtoMessage() {}

func (x *GetWebSshReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebSshReq.ProtoReflect.Descriptor instead.
func (*GetWebSshReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{12}
}

func (x *GetWebSshReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

type GetWebSshResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetWebSshResp) Reset() {
	*x = GetWebSshResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebSshResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebSshResp) ProtoMessage() {}

func (x *GetWebSshResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebSshResp.ProtoReflect.Descriptor instead.
func (*GetWebSshResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{13}
}

func (x *GetWebSshResp) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchDistributeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetIds string `protobuf:"bytes,1,opt,name=assetIds,proto3" json:"assetIds,omitempty"`
	Model    string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BatchDistributeReq) Reset() {
	*x = BatchDistributeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDistributeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDistributeReq) ProtoMessage() {}

func (x *BatchDistributeReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDistributeReq.ProtoReflect.Descriptor instead.
func (*BatchDistributeReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{14}
}

func (x *BatchDistributeReq) GetAssetIds() string {
	if x != nil {
		return x.AssetIds
	}
	return ""
}

func (x *BatchDistributeReq) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *BatchDistributeReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BatchDistributeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *BatchDistributeResp) Reset() {
	*x = BatchDistributeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDistributeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDistributeResp) ProtoMessage() {}

func (x *BatchDistributeResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDistributeResp.ProtoReflect.Descriptor instead.
func (*BatchDistributeResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{15}
}

func (x *BatchDistributeResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

//FeatureServer Start
type AddFeatureServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *FeatureServerDatas `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddFeatureServerReq) Reset() {
	*x = AddFeatureServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFeatureServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFeatureServerReq) ProtoMessage() {}

func (x *AddFeatureServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFeatureServerReq.ProtoReflect.Descriptor instead.
func (*AddFeatureServerReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{16}
}

func (x *AddFeatureServerReq) GetOne() *FeatureServerDatas {
	if x != nil {
		return x.One
	}
	return nil
}

type FeatureServerCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *FeatureServerCommonResp) Reset() {
	*x = FeatureServerCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureServerCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureServerCommonResp) ProtoMessage() {}

func (x *FeatureServerCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureServerCommonResp.ProtoReflect.Descriptor instead.
func (*FeatureServerCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{17}
}

func (x *FeatureServerCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateFeatureServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *FeatureServerDatas `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateFeatureServerReq) Reset() {
	*x = UpdateFeatureServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeatureServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeatureServerReq) ProtoMessage() {}

func (x *UpdateFeatureServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeatureServerReq.ProtoReflect.Descriptor instead.
func (*UpdateFeatureServerReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateFeatureServerReq) GetOne() *FeatureServerDatas {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteFeatureServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureServerId int64 `protobuf:"varint,1,opt,name=featureServerId,proto3" json:"featureServerId,omitempty"`
}

func (x *DeleteFeatureServerReq) Reset() {
	*x = DeleteFeatureServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeatureServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeatureServerReq) ProtoMessage() {}

func (x *DeleteFeatureServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeatureServerReq.ProtoReflect.Descriptor instead.
func (*DeleteFeatureServerReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteFeatureServerReq) GetFeatureServerId() int64 {
	if x != nil {
		return x.FeatureServerId
	}
	return 0
}

type FeatureServerDatas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureServerId   int64  `protobuf:"varint,1,opt,name=featureServerId,proto3" json:"featureServerId,omitempty"`
	ProjectId         int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	FeatureServerInfo string `protobuf:"bytes,3,opt,name=featureServerInfo,proto3" json:"featureServerInfo,omitempty"`
	Remark            string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *FeatureServerDatas) Reset() {
	*x = FeatureServerDatas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureServerDatas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureServerDatas) ProtoMessage() {}

func (x *FeatureServerDatas) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureServerDatas.ProtoReflect.Descriptor instead.
func (*FeatureServerDatas) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{20}
}

func (x *FeatureServerDatas) GetFeatureServerId() int64 {
	if x != nil {
		return x.FeatureServerId
	}
	return 0
}

func (x *FeatureServerDatas) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *FeatureServerDatas) GetFeatureServerInfo() string {
	if x != nil {
		return x.FeatureServerInfo
	}
	return ""
}

func (x *FeatureServerDatas) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type GetFeatureServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureServerId int64 `protobuf:"varint,1,opt,name=FeatureServerId,proto3" json:"FeatureServerId,omitempty"`
}

func (x *GetFeatureServerReq) Reset() {
	*x = GetFeatureServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureServerReq) ProtoMessage() {}

func (x *GetFeatureServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureServerReq.ProtoReflect.Descriptor instead.
func (*GetFeatureServerReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{21}
}

func (x *GetFeatureServerReq) GetFeatureServerId() int64 {
	if x != nil {
		return x.FeatureServerId
	}
	return 0
}

type ListFeatureServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current         int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize        int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	FeatureServerId int64  `protobuf:"varint,3,opt,name=featureServerId,proto3" json:"featureServerId,omitempty"`
	Ip              string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Domain          string `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	Feature         string `protobuf:"bytes,6,opt,name=feature,proto3" json:"feature,omitempty"`
	ProjectIds      string `protobuf:"bytes,7,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	Remark          string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ListFeatureServerReq) Reset() {
	*x = ListFeatureServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeatureServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeatureServerReq) ProtoMessage() {}

func (x *ListFeatureServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeatureServerReq.ProtoReflect.Descriptor instead.
func (*ListFeatureServerReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{22}
}

func (x *ListFeatureServerReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListFeatureServerReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFeatureServerReq) GetFeatureServerId() int64 {
	if x != nil {
		return x.FeatureServerId
	}
	return 0
}

func (x *ListFeatureServerReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListFeatureServerReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListFeatureServerReq) GetFeature() string {
	if x != nil {
		return x.Feature
	}
	return ""
}

func (x *ListFeatureServerReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListFeatureServerReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ListFeatureServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListFeatureServerData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListFeatureServerResp) Reset() {
	*x = ListFeatureServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeatureServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeatureServerResp) ProtoMessage() {}

func (x *ListFeatureServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeatureServerResp.ProtoReflect.Descriptor instead.
func (*ListFeatureServerResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{23}
}

func (x *ListFeatureServerResp) GetRows() []*ListFeatureServerData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListFeatureServerResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListFeatureServerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureServerId   int64  `protobuf:"varint,1,opt,name=featureServerId,proto3" json:"featureServerId,omitempty"`
	ProjectId         int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	FeatureServerInfo string `protobuf:"bytes,3,opt,name=featureServerInfo,proto3" json:"featureServerInfo,omitempty"`
	Remark            string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	ProjectCn         string `protobuf:"bytes,5,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	ProjectEn         string `protobuf:"bytes,6,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
	DelFlag           int64  `protobuf:"varint,7,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
}

func (x *ListFeatureServerData) Reset() {
	*x = ListFeatureServerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeatureServerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeatureServerData) ProtoMessage() {}

func (x *ListFeatureServerData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeatureServerData.ProtoReflect.Descriptor instead.
func (*ListFeatureServerData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{24}
}

func (x *ListFeatureServerData) GetFeatureServerId() int64 {
	if x != nil {
		return x.FeatureServerId
	}
	return 0
}

func (x *ListFeatureServerData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListFeatureServerData) GetFeatureServerInfo() string {
	if x != nil {
		return x.FeatureServerInfo
	}
	return ""
}

func (x *ListFeatureServerData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListFeatureServerData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListFeatureServerData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *ListFeatureServerData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

//Platform Start
type AddPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *PlatformCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddPlatformReq) Reset() {
	*x = AddPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlatformReq) ProtoMessage() {}

func (x *AddPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlatformReq.ProtoReflect.Descriptor instead.
func (*AddPlatformReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{25}
}

func (x *AddPlatformReq) GetOne() *PlatformCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type PlatformCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *PlatformCommonResp) Reset() {
	*x = PlatformCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformCommonResp) ProtoMessage() {}

func (x *PlatformCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformCommonResp.ProtoReflect.Descriptor instead.
func (*PlatformCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{26}
}

func (x *PlatformCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdatePlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *PlatformCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdatePlatformReq) Reset() {
	*x = UpdatePlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlatformReq) ProtoMessage() {}

func (x *UpdatePlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlatformReq.ProtoReflect.Descriptor instead.
func (*UpdatePlatformReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{27}
}

func (x *UpdatePlatformReq) GetOne() *PlatformCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeletePlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId int64 `protobuf:"varint,1,opt,name=platformId,proto3" json:"platformId,omitempty"`
}

func (x *DeletePlatformReq) Reset() {
	*x = DeletePlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlatformReq) ProtoMessage() {}

func (x *DeletePlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlatformReq.ProtoReflect.Descriptor instead.
func (*DeletePlatformReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{28}
}

func (x *DeletePlatformReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

type DetailPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId int64 `protobuf:"varint,1,opt,name=platformId,proto3" json:"platformId,omitempty"`
}

func (x *DetailPlatformReq) Reset() {
	*x = DetailPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPlatformReq) ProtoMessage() {}

func (x *DetailPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPlatformReq.ProtoReflect.Descriptor instead.
func (*DetailPlatformReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{29}
}

func (x *DetailPlatformReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

type GetPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId int64 `protobuf:"varint,1,opt,name=platformId,proto3" json:"platformId,omitempty"`
}

func (x *GetPlatformReq) Reset() {
	*x = GetPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlatformReq) ProtoMessage() {}

func (x *GetPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlatformReq.ProtoReflect.Descriptor instead.
func (*GetPlatformReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{30}
}

func (x *GetPlatformReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

type DetailPlatformResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ViewPlatformAutoid int64  `protobuf:"varint,1,opt,name=viewPlatformAutoid,proto3" json:"viewPlatformAutoid,omitempty"`
	ViewPlatformId     int64  `protobuf:"varint,2,opt,name=viewPlatformId,proto3" json:"viewPlatformId,omitempty"`
	ViewPlatformEn     string `protobuf:"bytes,3,opt,name=viewPlatformEn,proto3" json:"viewPlatformEn,omitempty"`
	ViewPlatformCn     string `protobuf:"bytes,4,opt,name=viewPlatformCn,proto3" json:"viewPlatformCn,omitempty"`
	ViewProjectId      int64  `protobuf:"varint,5,opt,name=viewProjectId,proto3" json:"viewProjectId,omitempty"`
	ViewProjectCn      string `protobuf:"bytes,6,opt,name=viewProjectCn,proto3" json:"viewProjectCn,omitempty"`
	ViewProjectEn      string `protobuf:"bytes,7,opt,name=viewProjectEn,proto3" json:"viewProjectEn,omitempty"`
	ViewPlatformRemark string `protobuf:"bytes,8,opt,name=viewPlatformRemark,proto3" json:"viewPlatformRemark,omitempty"`
	ViewLabels         string `protobuf:"bytes,9,opt,name=viewLabels,proto3" json:"viewLabels,omitempty"`
	ViewFeatureInfo    string `protobuf:"bytes,10,opt,name=viewFeatureInfo,proto3" json:"viewFeatureInfo,omitempty"`
}

func (x *DetailPlatformResp) Reset() {
	*x = DetailPlatformResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPlatformResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPlatformResp) ProtoMessage() {}

func (x *DetailPlatformResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPlatformResp.ProtoReflect.Descriptor instead.
func (*DetailPlatformResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{31}
}

func (x *DetailPlatformResp) GetViewPlatformAutoid() int64 {
	if x != nil {
		return x.ViewPlatformAutoid
	}
	return 0
}

func (x *DetailPlatformResp) GetViewPlatformId() int64 {
	if x != nil {
		return x.ViewPlatformId
	}
	return 0
}

func (x *DetailPlatformResp) GetViewPlatformEn() string {
	if x != nil {
		return x.ViewPlatformEn
	}
	return ""
}

func (x *DetailPlatformResp) GetViewPlatformCn() string {
	if x != nil {
		return x.ViewPlatformCn
	}
	return ""
}

func (x *DetailPlatformResp) GetViewProjectId() int64 {
	if x != nil {
		return x.ViewProjectId
	}
	return 0
}

func (x *DetailPlatformResp) GetViewProjectCn() string {
	if x != nil {
		return x.ViewProjectCn
	}
	return ""
}

func (x *DetailPlatformResp) GetViewProjectEn() string {
	if x != nil {
		return x.ViewProjectEn
	}
	return ""
}

func (x *DetailPlatformResp) GetViewPlatformRemark() string {
	if x != nil {
		return x.ViewPlatformRemark
	}
	return ""
}

func (x *DetailPlatformResp) GetViewLabels() string {
	if x != nil {
		return x.ViewLabels
	}
	return ""
}

func (x *DetailPlatformResp) GetViewFeatureInfo() string {
	if x != nil {
		return x.ViewFeatureInfo
	}
	return ""
}

type PlatformCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId     int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	PlatformEn     string `protobuf:"bytes,4,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
	PlatformCn     string `protobuf:"bytes,5,opt,name=platformCn,proto3" json:"platformCn,omitempty"`
	DomainFormat   string `protobuf:"bytes,6,opt,name=domainFormat,proto3" json:"domainFormat,omitempty"`
	Remark         string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	DelFlag        int64  `protobuf:"varint,8,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	PlatformFormat string `protobuf:"bytes,9,opt,name=platformFormat,proto3" json:"platformFormat,omitempty"`
}

func (x *PlatformCommon) Reset() {
	*x = PlatformCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformCommon) ProtoMessage() {}

func (x *PlatformCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformCommon.ProtoReflect.Descriptor instead.
func (*PlatformCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{32}
}

func (x *PlatformCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlatformCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PlatformCommon) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *PlatformCommon) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *PlatformCommon) GetPlatformCn() string {
	if x != nil {
		return x.PlatformCn
	}
	return ""
}

func (x *PlatformCommon) GetDomainFormat() string {
	if x != nil {
		return x.DomainFormat
	}
	return ""
}

func (x *PlatformCommon) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PlatformCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *PlatformCommon) GetPlatformFormat() string {
	if x != nil {
		return x.PlatformFormat
	}
	return ""
}

type ListPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current      int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize     int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectIds   string `protobuf:"bytes,3,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	PlatformInfo string `protobuf:"bytes,5,opt,name=platformInfo,proto3" json:"platformInfo,omitempty"`
	Id           int64  `protobuf:"varint,4,opt,name=Id,proto3" json:"Id,omitempty"`
	Types        string `protobuf:"bytes,6,opt,name=types,proto3" json:"types,omitempty"`
	DelFlag      int64  `protobuf:"varint,7,opt,name=del_flag,json=delFlag,proto3" json:"del_flag,omitempty"`
	Label        string `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
	PlatformType string `protobuf:"bytes,9,opt,name=platformType,proto3" json:"platformType,omitempty"`
}

func (x *ListPlatformReq) Reset() {
	*x = ListPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformReq) ProtoMessage() {}

func (x *ListPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformReq.ProtoReflect.Descriptor instead.
func (*ListPlatformReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{33}
}

func (x *ListPlatformReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListPlatformReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPlatformReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListPlatformReq) GetPlatformInfo() string {
	if x != nil {
		return x.PlatformInfo
	}
	return ""
}

func (x *ListPlatformReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListPlatformReq) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

func (x *ListPlatformReq) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListPlatformReq) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ListPlatformReq) GetPlatformType() string {
	if x != nil {
		return x.PlatformType
	}
	return ""
}

type ListPlatformResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListPlatformData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPlatformResp) Reset() {
	*x = ListPlatformResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformResp) ProtoMessage() {}

func (x *ListPlatformResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformResp.ProtoReflect.Descriptor instead.
func (*ListPlatformResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{34}
}

func (x *ListPlatformResp) GetRows() []*ListPlatformData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListPlatformResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListPlatformData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId     int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	PlatformEn     string `protobuf:"bytes,4,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
	PlatformCn     string `protobuf:"bytes,5,opt,name=platformCn,proto3" json:"platformCn,omitempty"`
	DomainFormat   string `protobuf:"bytes,6,opt,name=domainFormat,proto3" json:"domainFormat,omitempty"`
	Remark         string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	DelFlag        int64  `protobuf:"varint,8,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	LabelNames     string `protobuf:"bytes,9,opt,name=labelNames,proto3" json:"labelNames,omitempty"`
	ProjectCn      string `protobuf:"bytes,10,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	PlatformFormat string `protobuf:"bytes,11,opt,name=platformFormat,proto3" json:"platformFormat,omitempty"`
}

func (x *ListPlatformData) Reset() {
	*x = ListPlatformData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformData) ProtoMessage() {}

func (x *ListPlatformData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformData.ProtoReflect.Descriptor instead.
func (*ListPlatformData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{35}
}

func (x *ListPlatformData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListPlatformData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListPlatformData) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListPlatformData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *ListPlatformData) GetPlatformCn() string {
	if x != nil {
		return x.PlatformCn
	}
	return ""
}

func (x *ListPlatformData) GetDomainFormat() string {
	if x != nil {
		return x.DomainFormat
	}
	return ""
}

func (x *ListPlatformData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListPlatformData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListPlatformData) GetLabelNames() string {
	if x != nil {
		return x.LabelNames
	}
	return ""
}

func (x *ListPlatformData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListPlatformData) GetPlatformFormat() string {
	if x != nil {
		return x.PlatformFormat
	}
	return ""
}

type ListClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize   int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	LabelId    int64  `protobuf:"varint,3,opt,name=labelId,proto3" json:"labelId,omitempty"`
	ProjectId  int64  `protobuf:"varint,4,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ProjectIds string `protobuf:"bytes,5,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	ClusterCn  string `protobuf:"bytes,6,opt,name=ClusterCn,proto3" json:"ClusterCn,omitempty"`
}

func (x *ListClusterReq) Reset() {
	*x = ListClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterReq) ProtoMessage() {}

func (x *ListClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterReq.ProtoReflect.Descriptor instead.
func (*ListClusterReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{36}
}

func (x *ListClusterReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListClusterReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterReq) GetLabelId() int64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *ListClusterReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListClusterReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListClusterReq) GetClusterCn() string {
	if x != nil {
		return x.ClusterCn
	}
	return ""
}

type ListClusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows         []*ListClusterData      `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total        int64                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	AssetRows    []*ListAssetInfoData    `protobuf:"bytes,3,rep,name=assetRows,proto3" json:"assetRows,omitempty"`
	PlatformRows []*ListPlatformInfoData `protobuf:"bytes,4,rep,name=platformRows,proto3" json:"platformRows,omitempty"`
}

func (x *ListClusterResp) Reset() {
	*x = ListClusterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterResp) ProtoMessage() {}

func (x *ListClusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterResp.ProtoReflect.Descriptor instead.
func (*ListClusterResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{37}
}

func (x *ListClusterResp) GetRows() []*ListClusterData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListClusterResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListClusterResp) GetAssetRows() []*ListAssetInfoData {
	if x != nil {
		return x.AssetRows
	}
	return nil
}

func (x *ListClusterResp) GetPlatformRows() []*ListPlatformInfoData {
	if x != nil {
		return x.PlatformRows
	}
	return nil
}

type ListClusterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ViewLabelId              int64  `protobuf:"varint,1,opt,name=viewLabelId,proto3" json:"viewLabelId,omitempty"`
	ViewLabelName            string `protobuf:"bytes,2,opt,name=viewLabelName,proto3" json:"viewLabelName,omitempty"`
	ViewLabelValues          string `protobuf:"bytes,3,opt,name=viewLabelValues,proto3" json:"viewLabelValues,omitempty"`
	ViewLabelRemark          string `protobuf:"bytes,4,opt,name=viewLabelRemark,proto3" json:"viewLabelRemark,omitempty"`
	ViewProjectId            int64  `protobuf:"varint,5,opt,name=viewProjectId,proto3" json:"viewProjectId,omitempty"`
	ViewProjectCn            string `protobuf:"bytes,6,opt,name=viewProjectCn,proto3" json:"viewProjectCn,omitempty"`
	ViewProjectEn            string `protobuf:"bytes,7,opt,name=viewProjectEn,proto3" json:"viewProjectEn,omitempty"`
	ViewClusterFeatureInfo   string `protobuf:"bytes,8,opt,name=viewClusterFeatureInfo,proto3" json:"viewClusterFeatureInfo,omitempty"`
	ViewFeatureServerDelFlag int64  `protobuf:"varint,9,opt,name=viewFeatureServerDelFlag,proto3" json:"viewFeatureServerDelFlag,omitempty"`
}

func (x *ListClusterData) Reset() {
	*x = ListClusterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClusterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterData) ProtoMessage() {}

func (x *ListClusterData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterData.ProtoReflect.Descriptor instead.
func (*ListClusterData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{38}
}

func (x *ListClusterData) GetViewLabelId() int64 {
	if x != nil {
		return x.ViewLabelId
	}
	return 0
}

func (x *ListClusterData) GetViewLabelName() string {
	if x != nil {
		return x.ViewLabelName
	}
	return ""
}

func (x *ListClusterData) GetViewLabelValues() string {
	if x != nil {
		return x.ViewLabelValues
	}
	return ""
}

func (x *ListClusterData) GetViewLabelRemark() string {
	if x != nil {
		return x.ViewLabelRemark
	}
	return ""
}

func (x *ListClusterData) GetViewProjectId() int64 {
	if x != nil {
		return x.ViewProjectId
	}
	return 0
}

func (x *ListClusterData) GetViewProjectCn() string {
	if x != nil {
		return x.ViewProjectCn
	}
	return ""
}

func (x *ListClusterData) GetViewProjectEn() string {
	if x != nil {
		return x.ViewProjectEn
	}
	return ""
}

func (x *ListClusterData) GetViewClusterFeatureInfo() string {
	if x != nil {
		return x.ViewClusterFeatureInfo
	}
	return ""
}

func (x *ListClusterData) GetViewFeatureServerDelFlag() int64 {
	if x != nil {
		return x.ViewFeatureServerDelFlag
	}
	return 0
}

type ListAssetInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId     int64  `protobuf:"varint,1,opt,name=labelId,proto3" json:"labelId,omitempty"`
	LabelName   string `protobuf:"bytes,2,opt,name=LabelName,proto3" json:"LabelName,omitempty"`
	LabelValues string `protobuf:"bytes,3,opt,name=LabelValues,proto3" json:"LabelValues,omitempty"`
	LabelRemark string `protobuf:"bytes,4,opt,name=LabelRemark,proto3" json:"LabelRemark,omitempty"`
	ProjectId   int64  `protobuf:"varint,5,opt,name=ProjectId,proto3" json:"ProjectId,omitempty"`
	ProjectCn   string `protobuf:"bytes,6,opt,name=ProjectCn,proto3" json:"ProjectCn,omitempty"`
	ProjectEn   string `protobuf:"bytes,7,opt,name=ProjectEn,proto3" json:"ProjectEn,omitempty"`
	ViewDataUrl string `protobuf:"bytes,8,opt,name=viewDataUrl,proto3" json:"viewDataUrl,omitempty"`
	ViewJsonId  string `protobuf:"bytes,9,opt,name=viewJsonId,proto3" json:"viewJsonId,omitempty"`
	AssetIp     string `protobuf:"bytes,10,opt,name=assetIp,proto3" json:"assetIp,omitempty"`
}

func (x *ListAssetInfoData) Reset() {
	*x = ListAssetInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetInfoData) ProtoMessage() {}

func (x *ListAssetInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetInfoData.ProtoReflect.Descriptor instead.
func (*ListAssetInfoData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{39}
}

func (x *ListAssetInfoData) GetLabelId() int64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *ListAssetInfoData) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *ListAssetInfoData) GetLabelValues() string {
	if x != nil {
		return x.LabelValues
	}
	return ""
}

func (x *ListAssetInfoData) GetLabelRemark() string {
	if x != nil {
		return x.LabelRemark
	}
	return ""
}

func (x *ListAssetInfoData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAssetInfoData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListAssetInfoData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *ListAssetInfoData) GetViewDataUrl() string {
	if x != nil {
		return x.ViewDataUrl
	}
	return ""
}

func (x *ListAssetInfoData) GetViewJsonId() string {
	if x != nil {
		return x.ViewJsonId
	}
	return ""
}

func (x *ListAssetInfoData) GetAssetIp() string {
	if x != nil {
		return x.AssetIp
	}
	return ""
}

type ListPlatformInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId      int64  `protobuf:"varint,1,opt,name=labelId,proto3" json:"labelId,omitempty"`
	LabelName    string `protobuf:"bytes,2,opt,name=LabelName,proto3" json:"LabelName,omitempty"`
	LabelValues  string `protobuf:"bytes,3,opt,name=LabelValues,proto3" json:"LabelValues,omitempty"`
	LabelRemark  string `protobuf:"bytes,4,opt,name=LabelRemark,proto3" json:"LabelRemark,omitempty"`
	ProjectId    int64  `protobuf:"varint,5,opt,name=ProjectId,proto3" json:"ProjectId,omitempty"`
	ProjectCn    string `protobuf:"bytes,6,opt,name=ProjectCn,proto3" json:"ProjectCn,omitempty"`
	ProjectEn    string `protobuf:"bytes,7,opt,name=ProjectEn,proto3" json:"ProjectEn,omitempty"`
	ViewDataUrl  string `protobuf:"bytes,8,opt,name=viewDataUrl,proto3" json:"viewDataUrl,omitempty"`
	ViewJsonId   string `protobuf:"bytes,9,opt,name=viewJsonId,proto3" json:"viewJsonId,omitempty"`
	PlatformInfo string `protobuf:"bytes,10,opt,name=platformInfo,proto3" json:"platformInfo,omitempty"`
}

func (x *ListPlatformInfoData) Reset() {
	*x = ListPlatformInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformInfoData) ProtoMessage() {}

func (x *ListPlatformInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformInfoData.ProtoReflect.Descriptor instead.
func (*ListPlatformInfoData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{40}
}

func (x *ListPlatformInfoData) GetLabelId() int64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *ListPlatformInfoData) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *ListPlatformInfoData) GetLabelValues() string {
	if x != nil {
		return x.LabelValues
	}
	return ""
}

func (x *ListPlatformInfoData) GetLabelRemark() string {
	if x != nil {
		return x.LabelRemark
	}
	return ""
}

func (x *ListPlatformInfoData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListPlatformInfoData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListPlatformInfoData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *ListPlatformInfoData) GetViewDataUrl() string {
	if x != nil {
		return x.ViewDataUrl
	}
	return ""
}

func (x *ListPlatformInfoData) GetViewJsonId() string {
	if x != nil {
		return x.ViewJsonId
	}
	return ""
}

func (x *ListPlatformInfoData) GetPlatformInfo() string {
	if x != nil {
		return x.PlatformInfo
	}
	return ""
}

type ListLabelPlatformData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlatformId        int64  `protobuf:"varint,2,opt,name=platformId,proto3" json:"platformId,omitempty"`
	PlatformEn        string `protobuf:"bytes,3,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
	PlatformCn        string `protobuf:"bytes,4,opt,name=platformCn,proto3" json:"platformCn,omitempty"`
	LabelId           int64  `protobuf:"varint,5,opt,name=labelId,proto3" json:"labelId,omitempty"`
	LabelType         string `protobuf:"bytes,6,opt,name=labelType,proto3" json:"labelType,omitempty"`
	LabelName         string `protobuf:"bytes,7,opt,name=labelName,proto3" json:"labelName,omitempty"`
	LabelValues       string `protobuf:"bytes,8,opt,name=labelValues,proto3" json:"labelValues,omitempty"`
	LabelRemark       string `protobuf:"bytes,9,opt,name=labelRemark,proto3" json:"labelRemark,omitempty"`
	CreateBy          string `protobuf:"bytes,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreateTime        string `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	DelFlag           int64  `protobuf:"varint,12,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	ProjectId         int64  `protobuf:"varint,13,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ResourceEn        string `protobuf:"bytes,14,opt,name=resourceEn,proto3" json:"resourceEn,omitempty"`
	BindingId         int64  `protobuf:"varint,15,opt,name=bindingId,proto3" json:"bindingId,omitempty"`
	FeatureServerInfo string `protobuf:"bytes,16,opt,name=featureServerInfo,proto3" json:"featureServerInfo,omitempty"`
	ViewResourceType  string `protobuf:"bytes,17,opt,name=viewResourceType,proto3" json:"viewResourceType,omitempty"`
}

func (x *ListLabelPlatformData) Reset() {
	*x = ListLabelPlatformData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLabelPlatformData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabelPlatformData) ProtoMessage() {}

func (x *ListLabelPlatformData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabelPlatformData.ProtoReflect.Descriptor instead.
func (*ListLabelPlatformData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{41}
}

func (x *ListLabelPlatformData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListLabelPlatformData) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListLabelPlatformData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *ListLabelPlatformData) GetPlatformCn() string {
	if x != nil {
		return x.PlatformCn
	}
	return ""
}

func (x *ListLabelPlatformData) GetLabelId() int64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *ListLabelPlatformData) GetLabelType() string {
	if x != nil {
		return x.LabelType
	}
	return ""
}

func (x *ListLabelPlatformData) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *ListLabelPlatformData) GetLabelValues() string {
	if x != nil {
		return x.LabelValues
	}
	return ""
}

func (x *ListLabelPlatformData) GetLabelRemark() string {
	if x != nil {
		return x.LabelRemark
	}
	return ""
}

func (x *ListLabelPlatformData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ListLabelPlatformData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListLabelPlatformData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListLabelPlatformData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListLabelPlatformData) GetResourceEn() string {
	if x != nil {
		return x.ResourceEn
	}
	return ""
}

func (x *ListLabelPlatformData) GetBindingId() int64 {
	if x != nil {
		return x.BindingId
	}
	return 0
}

func (x *ListLabelPlatformData) GetFeatureServerInfo() string {
	if x != nil {
		return x.FeatureServerInfo
	}
	return ""
}

func (x *ListLabelPlatformData) GetViewResourceType() string {
	if x != nil {
		return x.ViewResourceType
	}
	return ""
}

type GetClusterByPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   int64  `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PlatformEns string `protobuf:"bytes,1,opt,name=platform_ens,json=platformEns,proto3" json:"platform_ens,omitempty"`
}

func (x *GetClusterByPlatformReq) Reset() {
	*x = GetClusterByPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterByPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterByPlatformReq) ProtoMessage() {}

func (x *GetClusterByPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterByPlatformReq.ProtoReflect.Descriptor instead.
func (*GetClusterByPlatformReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{42}
}

func (x *GetClusterByPlatformReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetClusterByPlatformReq) GetPlatformEns() string {
	if x != nil {
		return x.PlatformEns
	}
	return ""
}

type GetClusterByPlatformResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GetClusterByPlatformData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetClusterByPlatformResp) Reset() {
	*x = GetClusterByPlatformResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterByPlatformResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterByPlatformResp) ProtoMessage() {}

func (x *GetClusterByPlatformResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterByPlatformResp.ProtoReflect.Descriptor instead.
func (*GetClusterByPlatformResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{43}
}

func (x *GetClusterByPlatformResp) GetData() []*GetClusterByPlatformData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetClusterByPlatformData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      int64  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ProjectEn      string `protobuf:"bytes,5,opt,name=project_en,json=projectEn,proto3" json:"project_en,omitempty"`
	PlatformEn     string `protobuf:"bytes,2,opt,name=platform_en,json=platformEn,proto3" json:"platform_en,omitempty"`
	OuterIp        string `protobuf:"bytes,3,opt,name=outer_ip,json=outerIp,proto3" json:"outer_ip,omitempty"`
	ClusterLabelId string `protobuf:"bytes,4,opt,name=cluster_label_id,json=clusterLabelId,proto3" json:"cluster_label_id,omitempty"`
}

func (x *GetClusterByPlatformData) Reset() {
	*x = GetClusterByPlatformData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterByPlatformData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterByPlatformData) ProtoMessage() {}

func (x *GetClusterByPlatformData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterByPlatformData.ProtoReflect.Descriptor instead.
func (*GetClusterByPlatformData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{44}
}

func (x *GetClusterByPlatformData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetClusterByPlatformData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *GetClusterByPlatformData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *GetClusterByPlatformData) GetOuterIp() string {
	if x != nil {
		return x.OuterIp
	}
	return ""
}

func (x *GetClusterByPlatformData) GetClusterLabelId() string {
	if x != nil {
		return x.ClusterLabelId
	}
	return ""
}

//KeyManage Start
type AddKeyManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *KeyManageCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddKeyManageReq) Reset() {
	*x = AddKeyManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddKeyManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddKeyManageReq) ProtoMessage() {}

func (x *AddKeyManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddKeyManageReq.ProtoReflect.Descriptor instead.
func (*AddKeyManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{45}
}

func (x *AddKeyManageReq) GetOne() *KeyManageCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type KeyManageCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *KeyManageCommonResp) Reset() {
	*x = KeyManageCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyManageCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyManageCommonResp) ProtoMessage() {}

func (x *KeyManageCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyManageCommonResp.ProtoReflect.Descriptor instead.
func (*KeyManageCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{46}
}

func (x *KeyManageCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateKeyManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *KeyManageCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateKeyManageReq) Reset() {
	*x = UpdateKeyManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKeyManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKeyManageReq) ProtoMessage() {}

func (x *UpdateKeyManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKeyManageReq.ProtoReflect.Descriptor instead.
func (*UpdateKeyManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateKeyManageReq) GetOne() *KeyManageCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteKeyManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId int64 `protobuf:"varint,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
}

func (x *DeleteKeyManageReq) Reset() {
	*x = DeleteKeyManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyManageReq) ProtoMessage() {}

func (x *DeleteKeyManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyManageReq.ProtoReflect.Descriptor instead.
func (*DeleteKeyManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteKeyManageReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type GetKeyManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId int64 `protobuf:"varint,1,opt,name=KeyId,proto3" json:"KeyId,omitempty"`
}

func (x *GetKeyManageReq) Reset() {
	*x = GetKeyManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyManageReq) ProtoMessage() {}

func (x *GetKeyManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyManageReq.ProtoReflect.Descriptor instead.
func (*GetKeyManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{49}
}

func (x *GetKeyManageReq) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type KeyManageCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     int64  `protobuf:"varint,1,opt,name=keyId,proto3" json:"keyId,omitempty"`
	KeyName   string `protobuf:"bytes,2,opt,name=keyName,proto3" json:"keyName,omitempty"`
	KeyPath   string `protobuf:"bytes,3,opt,name=keyPath,proto3" json:"keyPath,omitempty"`
	KeyPass   string `protobuf:"bytes,4,opt,name=keyPass,proto3" json:"keyPass,omitempty"`
	KeyType   string `protobuf:"bytes,5,opt,name=keyType,proto3" json:"keyType,omitempty"`
	PublicKey string `protobuf:"bytes,6,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Remark    string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *KeyManageCommon) Reset() {
	*x = KeyManageCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyManageCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyManageCommon) ProtoMessage() {}

func (x *KeyManageCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyManageCommon.ProtoReflect.Descriptor instead.
func (*KeyManageCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{50}
}

func (x *KeyManageCommon) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *KeyManageCommon) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *KeyManageCommon) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

func (x *KeyManageCommon) GetKeyPass() string {
	if x != nil {
		return x.KeyPass
	}
	return ""
}

func (x *KeyManageCommon) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *KeyManageCommon) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *KeyManageCommon) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ListKeyManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListKeyManageReq) Reset() {
	*x = ListKeyManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKeyManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyManageReq) ProtoMessage() {}

func (x *ListKeyManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyManageReq.ProtoReflect.Descriptor instead.
func (*ListKeyManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{51}
}

func (x *ListKeyManageReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListKeyManageReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListKeyManageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListKeyManageData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListKeyManageResp) Reset() {
	*x = ListKeyManageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKeyManageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyManageResp) ProtoMessage() {}

func (x *ListKeyManageResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyManageResp.ProtoReflect.Descriptor instead.
func (*ListKeyManageResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{52}
}

func (x *ListKeyManageResp) GetRows() []*ListKeyManageData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListKeyManageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListKeyManageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     int64  `protobuf:"varint,1,opt,name=keyId,proto3" json:"keyId,omitempty"`
	KeyName   string `protobuf:"bytes,2,opt,name=keyName,proto3" json:"keyName,omitempty"`
	KeyPath   string `protobuf:"bytes,3,opt,name=keyPath,proto3" json:"keyPath,omitempty"`
	KeyPass   string `protobuf:"bytes,4,opt,name=keyPass,proto3" json:"keyPass,omitempty"`
	KeyType   string `protobuf:"bytes,5,opt,name=keyType,proto3" json:"keyType,omitempty"`
	PublicKey string `protobuf:"bytes,6,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Remark    string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ListKeyManageData) Reset() {
	*x = ListKeyManageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKeyManageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyManageData) ProtoMessage() {}

func (x *ListKeyManageData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyManageData.ProtoReflect.Descriptor instead.
func (*ListKeyManageData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{53}
}

func (x *ListKeyManageData) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *ListKeyManageData) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *ListKeyManageData) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

func (x *ListKeyManageData) GetKeyPass() string {
	if x != nil {
		return x.KeyPass
	}
	return ""
}

func (x *ListKeyManageData) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *ListKeyManageData) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ListKeyManageData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

//KeyManage End
//MaintainPlan Start
type AddMaintainPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *MaintainPlanCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddMaintainPlanReq) Reset() {
	*x = AddMaintainPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMaintainPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMaintainPlanReq) ProtoMessage() {}

func (x *AddMaintainPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMaintainPlanReq.ProtoReflect.Descriptor instead.
func (*AddMaintainPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{54}
}

func (x *AddMaintainPlanReq) GetOne() *MaintainPlanCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type MaintainPlanCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *MaintainPlanCommonResp) Reset() {
	*x = MaintainPlanCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintainPlanCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintainPlanCommonResp) ProtoMessage() {}

func (x *MaintainPlanCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintainPlanCommonResp.ProtoReflect.Descriptor instead.
func (*MaintainPlanCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{55}
}

func (x *MaintainPlanCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateMaintainPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *MaintainPlanCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateMaintainPlanReq) Reset() {
	*x = UpdateMaintainPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMaintainPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMaintainPlanReq) ProtoMessage() {}

func (x *UpdateMaintainPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMaintainPlanReq.ProtoReflect.Descriptor instead.
func (*UpdateMaintainPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateMaintainPlanReq) GetOne() *MaintainPlanCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteMaintainPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteMaintainPlanReq) Reset() {
	*x = DeleteMaintainPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMaintainPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMaintainPlanReq) ProtoMessage() {}

func (x *DeleteMaintainPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMaintainPlanReq.ProtoReflect.Descriptor instead.
func (*DeleteMaintainPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteMaintainPlanReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMaintainPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetMaintainPlanReq) Reset() {
	*x = GetMaintainPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaintainPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaintainPlanReq) ProtoMessage() {}

func (x *GetMaintainPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaintainPlanReq.ProtoReflect.Descriptor instead.
func (*GetMaintainPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{58}
}

func (x *GetMaintainPlanReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MaintainPlanCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId        int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	MaintainType     string `protobuf:"bytes,3,opt,name=maintainType,proto3" json:"maintainType,omitempty"`
	StartTime        string `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime          string `protobuf:"bytes,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	MaintainRange    string `protobuf:"bytes,6,opt,name=maintainRange,proto3" json:"maintainRange,omitempty"`
	Title            string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Content          string `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	CreateBy         string `protobuf:"bytes,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreateTime       string `protobuf:"bytes,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateBy         string `protobuf:"bytes,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdateTime       string `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	MaintainOperator string `protobuf:"bytes,13,opt,name=maintainOperator,proto3" json:"maintainOperator,omitempty"`
	DelFlag          int64  `protobuf:"varint,14,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	ClusterId        string `protobuf:"bytes,15,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	TaskId           int64  `protobuf:"varint,16,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *MaintainPlanCommon) Reset() {
	*x = MaintainPlanCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintainPlanCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintainPlanCommon) ProtoMessage() {}

func (x *MaintainPlanCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintainPlanCommon.ProtoReflect.Descriptor instead.
func (*MaintainPlanCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{59}
}

func (x *MaintainPlanCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MaintainPlanCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *MaintainPlanCommon) GetMaintainType() string {
	if x != nil {
		return x.MaintainType
	}
	return ""
}

func (x *MaintainPlanCommon) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MaintainPlanCommon) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *MaintainPlanCommon) GetMaintainRange() string {
	if x != nil {
		return x.MaintainRange
	}
	return ""
}

func (x *MaintainPlanCommon) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MaintainPlanCommon) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MaintainPlanCommon) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MaintainPlanCommon) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MaintainPlanCommon) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MaintainPlanCommon) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *MaintainPlanCommon) GetMaintainOperator() string {
	if x != nil {
		return x.MaintainOperator
	}
	return ""
}

func (x *MaintainPlanCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *MaintainPlanCommon) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *MaintainPlanCommon) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ListMaintainPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64            `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64            `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectId     int64            `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	StartTime     int64            `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	DateRange     string           `protobuf:"bytes,5,opt,name=dateRange,proto3" json:"dateRange,omitempty"`
	MaintainType  string           `protobuf:"bytes,6,opt,name=maintainType,proto3" json:"maintainType,omitempty"`
	ProjectIds    string           `protobuf:"bytes,7,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	Title         string           `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	TaskId        int64            `protobuf:"varint,9,opt,name=taskId,proto3" json:"taskId,omitempty"`
	MaintainId    int64            `protobuf:"varint,11,opt,name=MaintainId,proto3" json:"MaintainId,omitempty"`
	SortFiledList []*SortFiledData `protobuf:"bytes,10,rep,name=SortFiledList,proto3" json:"SortFiledList,omitempty"`
	PlanStartTime int64            `protobuf:"varint,12,opt,name=PlanStartTime,proto3" json:"PlanStartTime,omitempty"`
}

func (x *ListMaintainPlanReq) Reset() {
	*x = ListMaintainPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMaintainPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMaintainPlanReq) ProtoMessage() {}

func (x *ListMaintainPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMaintainPlanReq.ProtoReflect.Descriptor instead.
func (*ListMaintainPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{60}
}

func (x *ListMaintainPlanReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListMaintainPlanReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMaintainPlanReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListMaintainPlanReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListMaintainPlanReq) GetDateRange() string {
	if x != nil {
		return x.DateRange
	}
	return ""
}

func (x *ListMaintainPlanReq) GetMaintainType() string {
	if x != nil {
		return x.MaintainType
	}
	return ""
}

func (x *ListMaintainPlanReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListMaintainPlanReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListMaintainPlanReq) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ListMaintainPlanReq) GetMaintainId() int64 {
	if x != nil {
		return x.MaintainId
	}
	return 0
}

func (x *ListMaintainPlanReq) GetSortFiledList() []*SortFiledData {
	if x != nil {
		return x.SortFiledList
	}
	return nil
}

func (x *ListMaintainPlanReq) GetPlanStartTime() int64 {
	if x != nil {
		return x.PlanStartTime
	}
	return 0
}

type SortFiledData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Order string `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *SortFiledData) Reset() {
	*x = SortFiledData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortFiledData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortFiledData) ProtoMessage() {}

func (x *SortFiledData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortFiledData.ProtoReflect.Descriptor instead.
func (*SortFiledData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{61}
}

func (x *SortFiledData) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SortFiledData) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type ListMaintainPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListMaintainPlanData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListMaintainPlanResp) Reset() {
	*x = ListMaintainPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMaintainPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMaintainPlanResp) ProtoMessage() {}

func (x *ListMaintainPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMaintainPlanResp.ProtoReflect.Descriptor instead.
func (*ListMaintainPlanResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{62}
}

func (x *ListMaintainPlanResp) GetRows() []*ListMaintainPlanData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListMaintainPlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListMaintainPlanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId        int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	MaintainType     string `protobuf:"bytes,3,opt,name=maintainType,proto3" json:"maintainType,omitempty"`
	StartTime        string `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime          string `protobuf:"bytes,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	MaintainRange    string `protobuf:"bytes,6,opt,name=maintainRange,proto3" json:"maintainRange,omitempty"`
	Title            string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Content          string `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	CreateBy         string `protobuf:"bytes,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreateTime       string `protobuf:"bytes,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateBy         string `protobuf:"bytes,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	UpdateTime       string `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	MaintainOperator string `protobuf:"bytes,13,opt,name=maintainOperator,proto3" json:"maintainOperator,omitempty"`
	DelFlag          int64  `protobuf:"varint,14,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	ClusterId        string `protobuf:"bytes,15,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	TaskId           int64  `protobuf:"varint,16,opt,name=taskId,proto3" json:"taskId,omitempty"`
	ProjectCn        string `protobuf:"bytes,17,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	MaintainTypeCn   string `protobuf:"bytes,18,opt,name=maintainTypeCn,proto3" json:"maintainTypeCn,omitempty"`
	CreateNameEn     string `protobuf:"bytes,19,opt,name=createNameEn,proto3" json:"createNameEn,omitempty"`
	CreateNameCn     string `protobuf:"bytes,20,opt,name=createNameCn,proto3" json:"createNameCn,omitempty"`
	UpdateNameEn     string `protobuf:"bytes,21,opt,name=updateNameEn,proto3" json:"updateNameEn,omitempty"`
	UpdateNameCn     string `protobuf:"bytes,22,opt,name=updateNameCn,proto3" json:"updateNameCn,omitempty"`
}

func (x *ListMaintainPlanData) Reset() {
	*x = ListMaintainPlanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMaintainPlanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMaintainPlanData) ProtoMessage() {}

func (x *ListMaintainPlanData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMaintainPlanData.ProtoReflect.Descriptor instead.
func (*ListMaintainPlanData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{63}
}

func (x *ListMaintainPlanData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListMaintainPlanData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListMaintainPlanData) GetMaintainType() string {
	if x != nil {
		return x.MaintainType
	}
	return ""
}

func (x *ListMaintainPlanData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListMaintainPlanData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ListMaintainPlanData) GetMaintainRange() string {
	if x != nil {
		return x.MaintainRange
	}
	return ""
}

func (x *ListMaintainPlanData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListMaintainPlanData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ListMaintainPlanData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ListMaintainPlanData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListMaintainPlanData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *ListMaintainPlanData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ListMaintainPlanData) GetMaintainOperator() string {
	if x != nil {
		return x.MaintainOperator
	}
	return ""
}

func (x *ListMaintainPlanData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListMaintainPlanData) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListMaintainPlanData) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ListMaintainPlanData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListMaintainPlanData) GetMaintainTypeCn() string {
	if x != nil {
		return x.MaintainTypeCn
	}
	return ""
}

func (x *ListMaintainPlanData) GetCreateNameEn() string {
	if x != nil {
		return x.CreateNameEn
	}
	return ""
}

func (x *ListMaintainPlanData) GetCreateNameCn() string {
	if x != nil {
		return x.CreateNameCn
	}
	return ""
}

func (x *ListMaintainPlanData) GetUpdateNameEn() string {
	if x != nil {
		return x.UpdateNameEn
	}
	return ""
}

func (x *ListMaintainPlanData) GetUpdateNameCn() string {
	if x != nil {
		return x.UpdateNameCn
	}
	return ""
}

type GetMaintainPlanListTreeByClsIdAndProIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId int64  `protobuf:"varint,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterEn string `protobuf:"bytes,2,opt,name=clusterEn,proto3" json:"clusterEn,omitempty"`
}

func (x *GetMaintainPlanListTreeByClsIdAndProIdReq) Reset() {
	*x = GetMaintainPlanListTreeByClsIdAndProIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaintainPlanListTreeByClsIdAndProIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaintainPlanListTreeByClsIdAndProIdReq) ProtoMessage() {}

func (x *GetMaintainPlanListTreeByClsIdAndProIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaintainPlanListTreeByClsIdAndProIdReq.ProtoReflect.Descriptor instead.
func (*GetMaintainPlanListTreeByClsIdAndProIdReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{64}
}

func (x *GetMaintainPlanListTreeByClsIdAndProIdReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetMaintainPlanListTreeByClsIdAndProIdReq) GetClusterEn() string {
	if x != nil {
		return x.ClusterEn
	}
	return ""
}

type GetMaintainPlanListTreeByClsIdAndProIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMaintainPlanListTreeByClsIdAndProIdResp) Reset() {
	*x = GetMaintainPlanListTreeByClsIdAndProIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaintainPlanListTreeByClsIdAndProIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaintainPlanListTreeByClsIdAndProIdResp) ProtoMessage() {}

func (x *GetMaintainPlanListTreeByClsIdAndProIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaintainPlanListTreeByClsIdAndProIdResp.ProtoReflect.Descriptor instead.
func (*GetMaintainPlanListTreeByClsIdAndProIdResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{65}
}

func (x *GetMaintainPlanListTreeByClsIdAndProIdResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type MaintainGetClusterInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId int64  `protobuf:"varint,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	LabelIds  string `protobuf:"bytes,2,opt,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *MaintainGetClusterInfoReq) Reset() {
	*x = MaintainGetClusterInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintainGetClusterInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintainGetClusterInfoReq) ProtoMessage() {}

func (x *MaintainGetClusterInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintainGetClusterInfoReq.ProtoReflect.Descriptor instead.
func (*MaintainGetClusterInfoReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{66}
}

func (x *MaintainGetClusterInfoReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *MaintainGetClusterInfoReq) GetLabelIds() string {
	if x != nil {
		return x.LabelIds
	}
	return ""
}

type MaintainGetClusterInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterInfoData []*MaintainGetClusterInfoData `protobuf:"bytes,1,rep,name=ClusterInfoData,proto3" json:"ClusterInfoData,omitempty"`
}

func (x *MaintainGetClusterInfoResp) Reset() {
	*x = MaintainGetClusterInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintainGetClusterInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintainGetClusterInfoResp) ProtoMessage() {}

func (x *MaintainGetClusterInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintainGetClusterInfoResp.ProtoReflect.Descriptor instead.
func (*MaintainGetClusterInfoResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{67}
}

func (x *MaintainGetClusterInfoResp) GetClusterInfoData() []*MaintainGetClusterInfoData {
	if x != nil {
		return x.ClusterInfoData
	}
	return nil
}

type MaintainGetClusterInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelId     int64  `protobuf:"varint,1,opt,name=labelId,proto3" json:"labelId,omitempty"`
	LabelName   string `protobuf:"bytes,2,opt,name=labelName,proto3" json:"labelName,omitempty"`
	LabelValues string `protobuf:"bytes,3,opt,name=labelValues,proto3" json:"labelValues,omitempty"`
	LabelRemark string `protobuf:"bytes,4,opt,name=labelRemark,proto3" json:"labelRemark,omitempty"`
	ProjectId   int64  `protobuf:"varint,5,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Labelx      string `protobuf:"bytes,6,opt,name=labelx,proto3" json:"labelx,omitempty"`
	OuterIp     string `protobuf:"bytes,7,opt,name=outerIp,proto3" json:"outerIp,omitempty"`
	BaseDir     string `protobuf:"bytes,8,opt,name=baseDir,proto3" json:"baseDir,omitempty"`
}

func (x *MaintainGetClusterInfoData) Reset() {
	*x = MaintainGetClusterInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaintainGetClusterInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaintainGetClusterInfoData) ProtoMessage() {}

func (x *MaintainGetClusterInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaintainGetClusterInfoData.ProtoReflect.Descriptor instead.
func (*MaintainGetClusterInfoData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{68}
}

func (x *MaintainGetClusterInfoData) GetLabelId() int64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *MaintainGetClusterInfoData) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *MaintainGetClusterInfoData) GetLabelValues() string {
	if x != nil {
		return x.LabelValues
	}
	return ""
}

func (x *MaintainGetClusterInfoData) GetLabelRemark() string {
	if x != nil {
		return x.LabelRemark
	}
	return ""
}

func (x *MaintainGetClusterInfoData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *MaintainGetClusterInfoData) GetLabelx() string {
	if x != nil {
		return x.Labelx
	}
	return ""
}

func (x *MaintainGetClusterInfoData) GetOuterIp() string {
	if x != nil {
		return x.OuterIp
	}
	return ""
}

func (x *MaintainGetClusterInfoData) GetBaseDir() string {
	if x != nil {
		return x.BaseDir
	}
	return ""
}

//MaintainPlan End
//MergePlan Start
type AddMergePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MergePlanData []*MergePlanCommon `protobuf:"bytes,1,rep,name=mergePlanData,proto3" json:"mergePlanData,omitempty"`
}

func (x *AddMergePlanReq) Reset() {
	*x = AddMergePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMergePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMergePlanReq) ProtoMessage() {}

func (x *AddMergePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMergePlanReq.ProtoReflect.Descriptor instead.
func (*AddMergePlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{69}
}

func (x *AddMergePlanReq) GetMergePlanData() []*MergePlanCommon {
	if x != nil {
		return x.MergePlanData
	}
	return nil
}

type MergePlanCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *MergePlanCommonResp) Reset() {
	*x = MergePlanCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergePlanCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergePlanCommonResp) ProtoMessage() {}

func (x *MergePlanCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergePlanCommonResp.ProtoReflect.Descriptor instead.
func (*MergePlanCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{70}
}

func (x *MergePlanCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateMergePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *MergePlanCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateMergePlanReq) Reset() {
	*x = UpdateMergePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMergePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMergePlanReq) ProtoMessage() {}

func (x *UpdateMergePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMergePlanReq.ProtoReflect.Descriptor instead.
func (*UpdateMergePlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{71}
}

func (x *UpdateMergePlanReq) GetOne() *MergePlanCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteMergePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteMergePlanReq) Reset() {
	*x = DeleteMergePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMergePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMergePlanReq) ProtoMessage() {}

func (x *DeleteMergePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMergePlanReq.ProtoReflect.Descriptor instead.
func (*DeleteMergePlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{72}
}

func (x *DeleteMergePlanReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMergePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetMergePlanReq) Reset() {
	*x = GetMergePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMergePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergePlanReq) ProtoMessage() {}

func (x *GetMergePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergePlanReq.ProtoReflect.Descriptor instead.
func (*GetMergePlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{73}
}

func (x *GetMergePlanReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MergeCheckServerRangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *MergePlanCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *MergeCheckServerRangeReq) Reset() {
	*x = MergeCheckServerRangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeCheckServerRangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeCheckServerRangeReq) ProtoMessage() {}

func (x *MergeCheckServerRangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeCheckServerRangeReq.ProtoReflect.Descriptor instead.
func (*MergeCheckServerRangeReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{74}
}

func (x *MergeCheckServerRangeReq) GetOne() *MergePlanCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type MergeCheckServerRangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineRange string `protobuf:"bytes,1,opt,name=combineRange,proto3" json:"combineRange,omitempty"`
}

func (x *MergeCheckServerRangeResp) Reset() {
	*x = MergeCheckServerRangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeCheckServerRangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeCheckServerRangeResp) ProtoMessage() {}

func (x *MergeCheckServerRangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeCheckServerRangeResp.ProtoReflect.Descriptor instead.
func (*MergeCheckServerRangeResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{75}
}

func (x *MergeCheckServerRangeResp) GetCombineRange() string {
	if x != nil {
		return x.CombineRange
	}
	return ""
}

type MergePlanCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId     int64   `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId    int64   `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	ServerId      int64   `protobuf:"varint,4,opt,name=serverId,proto3" json:"serverId,omitempty"`
	InputRange    string  `protobuf:"bytes,12,opt,name=inputRange,proto3" json:"inputRange,omitempty"`
	CombineRange  string  `protobuf:"bytes,5,opt,name=combineRange,proto3" json:"combineRange,omitempty"`
	StartTime     string  `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string  `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	MergeStatus   int64   `protobuf:"varint,8,opt,name=mergeStatus,proto3" json:"mergeStatus,omitempty"`
	MergeOperator string  `protobuf:"bytes,9,opt,name=mergeOperator,proto3" json:"mergeOperator,omitempty"`
	DelFlag       int64   `protobuf:"varint,10,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	AllRange      []int64 `protobuf:"varint,11,rep,packed,name=allRange,proto3" json:"allRange,omitempty"`
}

func (x *MergePlanCommon) Reset() {
	*x = MergePlanCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergePlanCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergePlanCommon) ProtoMessage() {}

func (x *MergePlanCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergePlanCommon.ProtoReflect.Descriptor instead.
func (*MergePlanCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{76}
}

func (x *MergePlanCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MergePlanCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *MergePlanCommon) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *MergePlanCommon) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *MergePlanCommon) GetInputRange() string {
	if x != nil {
		return x.InputRange
	}
	return ""
}

func (x *MergePlanCommon) GetCombineRange() string {
	if x != nil {
		return x.CombineRange
	}
	return ""
}

func (x *MergePlanCommon) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MergePlanCommon) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *MergePlanCommon) GetMergeStatus() int64 {
	if x != nil {
		return x.MergeStatus
	}
	return 0
}

func (x *MergePlanCommon) GetMergeOperator() string {
	if x != nil {
		return x.MergeOperator
	}
	return ""
}

func (x *MergePlanCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *MergePlanCommon) GetAllRange() []int64 {
	if x != nil {
		return x.AllRange
	}
	return nil
}

type ListMergePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64            `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64            `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectIds    string           `protobuf:"bytes,3,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	DateRange     string           `protobuf:"bytes,4,opt,name=dateRange,proto3" json:"dateRange,omitempty"`
	PlatformIds   string           `protobuf:"bytes,5,opt,name=platformIds,proto3" json:"platformIds,omitempty"`
	MergeStatus   string           `protobuf:"bytes,6,opt,name=mergeStatus,proto3" json:"mergeStatus,omitempty"`
	SortFiledList []*SortFiledData `protobuf:"bytes,7,rep,name=SortFiledList,proto3" json:"SortFiledList,omitempty"`
}

func (x *ListMergePlanReq) Reset() {
	*x = ListMergePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMergePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMergePlanReq) ProtoMessage() {}

func (x *ListMergePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMergePlanReq.ProtoReflect.Descriptor instead.
func (*ListMergePlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{77}
}

func (x *ListMergePlanReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListMergePlanReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMergePlanReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListMergePlanReq) GetDateRange() string {
	if x != nil {
		return x.DateRange
	}
	return ""
}

func (x *ListMergePlanReq) GetPlatformIds() string {
	if x != nil {
		return x.PlatformIds
	}
	return ""
}

func (x *ListMergePlanReq) GetMergeStatus() string {
	if x != nil {
		return x.MergeStatus
	}
	return ""
}

func (x *ListMergePlanReq) GetSortFiledList() []*SortFiledData {
	if x != nil {
		return x.SortFiledList
	}
	return nil
}

type ListMergePlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListMergePlanData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListMergePlanResp) Reset() {
	*x = ListMergePlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMergePlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMergePlanResp) ProtoMessage() {}

func (x *ListMergePlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMergePlanResp.ProtoReflect.Descriptor instead.
func (*ListMergePlanResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{78}
}

func (x *ListMergePlanResp) GetRows() []*ListMergePlanData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListMergePlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListMergePlanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId     int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId    int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	ServerId      int64  `protobuf:"varint,4,opt,name=serverId,proto3" json:"serverId,omitempty"`
	InputRange    string `protobuf:"bytes,14,opt,name=inputRange,proto3" json:"inputRange,omitempty"`
	CombineRange  string `protobuf:"bytes,5,opt,name=combineRange,proto3" json:"combineRange,omitempty"`
	StartTime     string `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string `protobuf:"bytes,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	MergeStatus   int64  `protobuf:"varint,8,opt,name=mergeStatus,proto3" json:"mergeStatus,omitempty"`
	MergeOperator string `protobuf:"bytes,9,opt,name=mergeOperator,proto3" json:"mergeOperator,omitempty"`
	DelFlag       int64  `protobuf:"varint,10,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	PlatformCn    string `protobuf:"bytes,11,opt,name=platformCn,proto3" json:"platformCn,omitempty"`
	PlatformEn    string `protobuf:"bytes,12,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
	ProjectCn     string `protobuf:"bytes,13,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
}

func (x *ListMergePlanData) Reset() {
	*x = ListMergePlanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMergePlanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMergePlanData) ProtoMessage() {}

func (x *ListMergePlanData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMergePlanData.ProtoReflect.Descriptor instead.
func (*ListMergePlanData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{79}
}

func (x *ListMergePlanData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListMergePlanData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListMergePlanData) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListMergePlanData) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ListMergePlanData) GetInputRange() string {
	if x != nil {
		return x.InputRange
	}
	return ""
}

func (x *ListMergePlanData) GetCombineRange() string {
	if x != nil {
		return x.CombineRange
	}
	return ""
}

func (x *ListMergePlanData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListMergePlanData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ListMergePlanData) GetMergeStatus() int64 {
	if x != nil {
		return x.MergeStatus
	}
	return 0
}

func (x *ListMergePlanData) GetMergeOperator() string {
	if x != nil {
		return x.MergeOperator
	}
	return ""
}

func (x *ListMergePlanData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListMergePlanData) GetPlatformCn() string {
	if x != nil {
		return x.PlatformCn
	}
	return ""
}

func (x *ListMergePlanData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *ListMergePlanData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

type GetMergeListTreeByPlatIdAndProIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  int64 `protobuf:"varint,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId int64 `protobuf:"varint,2,opt,name=platformId,proto3" json:"platformId,omitempty"`
}

func (x *GetMergeListTreeByPlatIdAndProIdReq) Reset() {
	*x = GetMergeListTreeByPlatIdAndProIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMergeListTreeByPlatIdAndProIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeListTreeByPlatIdAndProIdReq) ProtoMessage() {}

func (x *GetMergeListTreeByPlatIdAndProIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeListTreeByPlatIdAndProIdReq.ProtoReflect.Descriptor instead.
func (*GetMergeListTreeByPlatIdAndProIdReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{80}
}

func (x *GetMergeListTreeByPlatIdAndProIdReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetMergeListTreeByPlatIdAndProIdReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

type GetMergeListTreeByPlatIdAndProIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMergeListTreeByPlatIdAndProIdResp) Reset() {
	*x = GetMergeListTreeByPlatIdAndProIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMergeListTreeByPlatIdAndProIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMergeListTreeByPlatIdAndProIdResp) ProtoMessage() {}

func (x *GetMergeListTreeByPlatIdAndProIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMergeListTreeByPlatIdAndProIdResp.ProtoReflect.Descriptor instead.
func (*GetMergeListTreeByPlatIdAndProIdResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{81}
}

func (x *GetMergeListTreeByPlatIdAndProIdResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//MergePlan End
//OpenPlan Start
type AddOpenPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPlatData []*OpenPlanCommon `protobuf:"bytes,1,rep,name=openPlatData,proto3" json:"openPlatData,omitempty"`
}

func (x *AddOpenPlanReq) Reset() {
	*x = AddOpenPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOpenPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOpenPlanReq) ProtoMessage() {}

func (x *AddOpenPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOpenPlanReq.ProtoReflect.Descriptor instead.
func (*AddOpenPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{82}
}

func (x *AddOpenPlanReq) GetOpenPlatData() []*OpenPlanCommon {
	if x != nil {
		return x.OpenPlatData
	}
	return nil
}

type OpenPlanCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *OpenPlanCommonResp) Reset() {
	*x = OpenPlanCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPlanCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPlanCommonResp) ProtoMessage() {}

func (x *OpenPlanCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPlanCommonResp.ProtoReflect.Descriptor instead.
func (*OpenPlanCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{83}
}

func (x *OpenPlanCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateOpenPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *OpenPlanCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateOpenPlanReq) Reset() {
	*x = UpdateOpenPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOpenPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOpenPlanReq) ProtoMessage() {}

func (x *UpdateOpenPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOpenPlanReq.ProtoReflect.Descriptor instead.
func (*UpdateOpenPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{84}
}

func (x *UpdateOpenPlanReq) GetOne() *OpenPlanCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteOpenPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteOpenPlanReq) Reset() {
	*x = DeleteOpenPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOpenPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOpenPlanReq) ProtoMessage() {}

func (x *DeleteOpenPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOpenPlanReq.ProtoReflect.Descriptor instead.
func (*DeleteOpenPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{85}
}

func (x *DeleteOpenPlanReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetOpenPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetOpenPlanReq) Reset() {
	*x = GetOpenPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpenPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenPlanReq) ProtoMessage() {}

func (x *GetOpenPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenPlanReq.ProtoReflect.Descriptor instead.
func (*GetOpenPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{86}
}

func (x *GetOpenPlanReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OpenPlanCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId       int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId      int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	ServerId        int64  `protobuf:"varint,4,opt,name=serverId,proto3" json:"serverId,omitempty"`
	GameserverTitle string `protobuf:"bytes,5,opt,name=gameserverTitle,proto3" json:"gameserverTitle,omitempty"`
	OpenTime        string `protobuf:"bytes,6,opt,name=openTime,proto3" json:"openTime,omitempty"`
	InstallStatus   string `protobuf:"bytes,7,opt,name=installStatus,proto3" json:"installStatus,omitempty"`
	InstallOperator string `protobuf:"bytes,8,opt,name=installOperator,proto3" json:"installOperator,omitempty"`
	InitdbStatus    string `protobuf:"bytes,9,opt,name=initdbStatus,proto3" json:"initdbStatus,omitempty"`
	InitdbOperator  string `protobuf:"bytes,10,opt,name=initdbOperator,proto3" json:"initdbOperator,omitempty"`
	DelFlag         int64  `protobuf:"varint,11,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	Remark          string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *OpenPlanCommon) Reset() {
	*x = OpenPlanCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPlanCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPlanCommon) ProtoMessage() {}

func (x *OpenPlanCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPlanCommon.ProtoReflect.Descriptor instead.
func (*OpenPlanCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{87}
}

func (x *OpenPlanCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpenPlanCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *OpenPlanCommon) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *OpenPlanCommon) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *OpenPlanCommon) GetGameserverTitle() string {
	if x != nil {
		return x.GameserverTitle
	}
	return ""
}

func (x *OpenPlanCommon) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *OpenPlanCommon) GetInstallStatus() string {
	if x != nil {
		return x.InstallStatus
	}
	return ""
}

func (x *OpenPlanCommon) GetInstallOperator() string {
	if x != nil {
		return x.InstallOperator
	}
	return ""
}

func (x *OpenPlanCommon) GetInitdbStatus() string {
	if x != nil {
		return x.InitdbStatus
	}
	return ""
}

func (x *OpenPlanCommon) GetInitdbOperator() string {
	if x != nil {
		return x.InitdbOperator
	}
	return ""
}

func (x *OpenPlanCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *OpenPlanCommon) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ListOpenPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64            `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64            `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	DateRange     string           `protobuf:"bytes,3,opt,name=dateRange,proto3" json:"dateRange,omitempty"`
	Title         string           `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	PlatformIds   string           `protobuf:"bytes,5,opt,name=platformIds,proto3" json:"platformIds,omitempty"`
	InitdbStatus  string           `protobuf:"bytes,6,opt,name=initdbStatus,proto3" json:"initdbStatus,omitempty"`
	InstallStatus string           `protobuf:"bytes,7,opt,name=installStatus,proto3" json:"installStatus,omitempty"`
	ProjectIds    string           `protobuf:"bytes,8,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	SortFiledList []*SortFiledData `protobuf:"bytes,9,rep,name=SortFiledList,proto3" json:"SortFiledList,omitempty"`
	ClusterName   string           `protobuf:"bytes,10,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	GameType      string           `protobuf:"bytes,11,opt,name=gameType,proto3" json:"gameType,omitempty"`
}

func (x *ListOpenPlanReq) Reset() {
	*x = ListOpenPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOpenPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOpenPlanReq) ProtoMessage() {}

func (x *ListOpenPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOpenPlanReq.ProtoReflect.Descriptor instead.
func (*ListOpenPlanReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{88}
}

func (x *ListOpenPlanReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListOpenPlanReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOpenPlanReq) GetDateRange() string {
	if x != nil {
		return x.DateRange
	}
	return ""
}

func (x *ListOpenPlanReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListOpenPlanReq) GetPlatformIds() string {
	if x != nil {
		return x.PlatformIds
	}
	return ""
}

func (x *ListOpenPlanReq) GetInitdbStatus() string {
	if x != nil {
		return x.InitdbStatus
	}
	return ""
}

func (x *ListOpenPlanReq) GetInstallStatus() string {
	if x != nil {
		return x.InstallStatus
	}
	return ""
}

func (x *ListOpenPlanReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListOpenPlanReq) GetSortFiledList() []*SortFiledData {
	if x != nil {
		return x.SortFiledList
	}
	return nil
}

func (x *ListOpenPlanReq) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ListOpenPlanReq) GetGameType() string {
	if x != nil {
		return x.GameType
	}
	return ""
}

type ListOpenPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListOpenPlanData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListOpenPlanResp) Reset() {
	*x = ListOpenPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOpenPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOpenPlanResp) ProtoMessage() {}

func (x *ListOpenPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOpenPlanResp.ProtoReflect.Descriptor instead.
func (*ListOpenPlanResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{89}
}

func (x *ListOpenPlanResp) GetRows() []*ListOpenPlanData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListOpenPlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListOpenPlanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId       int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId      int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	ServerId        int64  `protobuf:"varint,4,opt,name=serverId,proto3" json:"serverId,omitempty"`
	GameserverTitle string `protobuf:"bytes,5,opt,name=gameserverTitle,proto3" json:"gameserverTitle,omitempty"`
	OpenTime        string `protobuf:"bytes,6,opt,name=openTime,proto3" json:"openTime,omitempty"`
	InstallStatus   string `protobuf:"bytes,7,opt,name=installStatus,proto3" json:"installStatus,omitempty"`
	InstallOperator string `protobuf:"bytes,8,opt,name=installOperator,proto3" json:"installOperator,omitempty"`
	InitdbStatus    string `protobuf:"bytes,9,opt,name=initdbStatus,proto3" json:"initdbStatus,omitempty"`
	InitdbOperator  string `protobuf:"bytes,10,opt,name=initdbOperator,proto3" json:"initdbOperator,omitempty"`
	DelFlag         int64  `protobuf:"varint,11,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	ProjectCn       string `protobuf:"bytes,12,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	PlatformCn      string `protobuf:"bytes,13,opt,name=platformCn,proto3" json:"platformCn,omitempty"`
	PlatformEn      string `protobuf:"bytes,14,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
	Remark          string `protobuf:"bytes,15,opt,name=remark,proto3" json:"remark,omitempty"`
	ClusterName     string `protobuf:"bytes,16,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *ListOpenPlanData) Reset() {
	*x = ListOpenPlanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOpenPlanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOpenPlanData) ProtoMessage() {}

func (x *ListOpenPlanData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOpenPlanData.ProtoReflect.Descriptor instead.
func (*ListOpenPlanData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{90}
}

func (x *ListOpenPlanData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListOpenPlanData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListOpenPlanData) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListOpenPlanData) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ListOpenPlanData) GetGameserverTitle() string {
	if x != nil {
		return x.GameserverTitle
	}
	return ""
}

func (x *ListOpenPlanData) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *ListOpenPlanData) GetInstallStatus() string {
	if x != nil {
		return x.InstallStatus
	}
	return ""
}

func (x *ListOpenPlanData) GetInstallOperator() string {
	if x != nil {
		return x.InstallOperator
	}
	return ""
}

func (x *ListOpenPlanData) GetInitdbStatus() string {
	if x != nil {
		return x.InitdbStatus
	}
	return ""
}

func (x *ListOpenPlanData) GetInitdbOperator() string {
	if x != nil {
		return x.InitdbOperator
	}
	return ""
}

func (x *ListOpenPlanData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListOpenPlanData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListOpenPlanData) GetPlatformCn() string {
	if x != nil {
		return x.PlatformCn
	}
	return ""
}

func (x *ListOpenPlanData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *ListOpenPlanData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListOpenPlanData) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type OpenPlanBatchModifyOpenTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*OpenPlanBatchModifyOpenTimeData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OpenPlanBatchModifyOpenTimeReq) Reset() {
	*x = OpenPlanBatchModifyOpenTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPlanBatchModifyOpenTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPlanBatchModifyOpenTimeReq) ProtoMessage() {}

func (x *OpenPlanBatchModifyOpenTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPlanBatchModifyOpenTimeReq.ProtoReflect.Descriptor instead.
func (*OpenPlanBatchModifyOpenTimeReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{91}
}

func (x *OpenPlanBatchModifyOpenTimeReq) GetData() []*OpenPlanBatchModifyOpenTimeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpenPlanBatchModifyOpenTimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *OpenPlanBatchModifyOpenTimeResp) Reset() {
	*x = OpenPlanBatchModifyOpenTimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPlanBatchModifyOpenTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPlanBatchModifyOpenTimeResp) ProtoMessage() {}

func (x *OpenPlanBatchModifyOpenTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPlanBatchModifyOpenTimeResp.ProtoReflect.Descriptor instead.
func (*OpenPlanBatchModifyOpenTimeResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{92}
}

func (x *OpenPlanBatchModifyOpenTimeResp) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type OpenPlanBatchModifyOpenTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OpenTime int64 `protobuf:"varint,2,opt,name=openTime,proto3" json:"openTime,omitempty"`
}

func (x *OpenPlanBatchModifyOpenTimeData) Reset() {
	*x = OpenPlanBatchModifyOpenTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenPlanBatchModifyOpenTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenPlanBatchModifyOpenTimeData) ProtoMessage() {}

func (x *OpenPlanBatchModifyOpenTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenPlanBatchModifyOpenTimeData.ProtoReflect.Descriptor instead.
func (*OpenPlanBatchModifyOpenTimeData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{93}
}

func (x *OpenPlanBatchModifyOpenTimeData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpenPlanBatchModifyOpenTimeData) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

type BatchUpdateStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	Status int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BatchUpdateStatusReq) Reset() {
	*x = BatchUpdateStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateStatusReq) ProtoMessage() {}

func (x *BatchUpdateStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateStatusReq.ProtoReflect.Descriptor instead.
func (*BatchUpdateStatusReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{94}
}

func (x *BatchUpdateStatusReq) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

func (x *BatchUpdateStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type BatchUpdateStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *BatchUpdateStatusResp) Reset() {
	*x = BatchUpdateStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateStatusResp) ProtoMessage() {}

func (x *BatchUpdateStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateStatusResp.ProtoReflect.Descriptor instead.
func (*BatchUpdateStatusResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{95}
}

func (x *BatchUpdateStatusResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

//Hosts Start
type ListHostsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current        int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize       int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ViewHostRoleCn string `protobuf:"bytes,3,opt,name=viewHostRoleCn,proto3" json:"viewHostRoleCn,omitempty"`
	ProjectIds     string `protobuf:"bytes,4,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	Company        string `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`
	Ips            string `protobuf:"bytes,6,opt,name=ips,proto3" json:"ips,omitempty"`
	SNames         string `protobuf:"bytes,7,opt,name=sNames,proto3" json:"sNames,omitempty"`
	Provider       string `protobuf:"bytes,8,opt,name=provider,proto3" json:"provider,omitempty"`
	Label          string `protobuf:"bytes,9,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *ListHostsReq) Reset() {
	*x = ListHostsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHostsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostsReq) ProtoMessage() {}

func (x *ListHostsReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostsReq.ProtoReflect.Descriptor instead.
func (*ListHostsReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{96}
}

func (x *ListHostsReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListHostsReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListHostsReq) GetViewHostRoleCn() string {
	if x != nil {
		return x.ViewHostRoleCn
	}
	return ""
}

func (x *ListHostsReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListHostsReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ListHostsReq) GetIps() string {
	if x != nil {
		return x.Ips
	}
	return ""
}

func (x *ListHostsReq) GetSNames() string {
	if x != nil {
		return x.SNames
	}
	return ""
}

func (x *ListHostsReq) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListHostsReq) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type ListHostsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListHostsData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListHostsResp) Reset() {
	*x = ListHostsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHostsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostsResp) ProtoMessage() {}

func (x *ListHostsResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostsResp.ProtoReflect.Descriptor instead.
func (*ListHostsResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{97}
}

func (x *ListHostsResp) GetRows() []*ListHostsData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListHostsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListHostsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ViewAssetId        string `protobuf:"bytes,1,opt,name=ViewAssetId,proto3" json:"ViewAssetId,omitempty"`
	ViewUserCompanyCn  string `protobuf:"bytes,2,opt,name=ViewUserCompanyCn,proto3" json:"ViewUserCompanyCn,omitempty"`
	ViewUserProjectCn  string `protobuf:"bytes,3,opt,name=ViewUserProjectCn,proto3" json:"ViewUserProjectCn,omitempty"`
	ViewOuterIp        string `protobuf:"bytes,4,opt,name=ViewOuterIp,proto3" json:"ViewOuterIp,omitempty"`
	ViewInnerIp        string `protobuf:"bytes,5,opt,name=ViewInnerIp,proto3" json:"ViewInnerIp,omitempty"`
	ViewHardwareInfo   string `protobuf:"bytes,6,opt,name=ViewHardwareInfo,proto3" json:"ViewHardwareInfo,omitempty"`
	ViewProviderNameCn string `protobuf:"bytes,7,opt,name=ViewProviderNameCn,proto3" json:"ViewProviderNameCn,omitempty"`
	ViewProviderNameEn string `protobuf:"bytes,8,opt,name=ViewProviderNameEn,proto3" json:"ViewProviderNameEn,omitempty"`
	ViewHostRoleCn     string `protobuf:"bytes,9,opt,name=ViewHostRoleCn,proto3" json:"ViewHostRoleCn,omitempty"`
	Installed          string `protobuf:"bytes,10,opt,name=Installed,proto3" json:"Installed,omitempty"`
	ServerName         string `protobuf:"bytes,11,opt,name=ServerName,proto3" json:"ServerName,omitempty"`
	LabelInfo          string `protobuf:"bytes,12,opt,name=LabelInfo,proto3" json:"LabelInfo,omitempty"`
}

func (x *ListHostsData) Reset() {
	*x = ListHostsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHostsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostsData) ProtoMessage() {}

func (x *ListHostsData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostsData.ProtoReflect.Descriptor instead.
func (*ListHostsData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{98}
}

func (x *ListHostsData) GetViewAssetId() string {
	if x != nil {
		return x.ViewAssetId
	}
	return ""
}

func (x *ListHostsData) GetViewUserCompanyCn() string {
	if x != nil {
		return x.ViewUserCompanyCn
	}
	return ""
}

func (x *ListHostsData) GetViewUserProjectCn() string {
	if x != nil {
		return x.ViewUserProjectCn
	}
	return ""
}

func (x *ListHostsData) GetViewOuterIp() string {
	if x != nil {
		return x.ViewOuterIp
	}
	return ""
}

func (x *ListHostsData) GetViewInnerIp() string {
	if x != nil {
		return x.ViewInnerIp
	}
	return ""
}

func (x *ListHostsData) GetViewHardwareInfo() string {
	if x != nil {
		return x.ViewHardwareInfo
	}
	return ""
}

func (x *ListHostsData) GetViewProviderNameCn() string {
	if x != nil {
		return x.ViewProviderNameCn
	}
	return ""
}

func (x *ListHostsData) GetViewProviderNameEn() string {
	if x != nil {
		return x.ViewProviderNameEn
	}
	return ""
}

func (x *ListHostsData) GetViewHostRoleCn() string {
	if x != nil {
		return x.ViewHostRoleCn
	}
	return ""
}

func (x *ListHostsData) GetInstalled() string {
	if x != nil {
		return x.Installed
	}
	return ""
}

func (x *ListHostsData) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ListHostsData) GetLabelInfo() string {
	if x != nil {
		return x.LabelInfo
	}
	return ""
}

//GameServer Start
type ListGameServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current         int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize        int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ServerStatus    string `protobuf:"bytes,3,opt,name=serverStatus,proto3" json:"serverStatus,omitempty"`
	ProjectIds      string `protobuf:"bytes,4,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	NewPlatformInfo string `protobuf:"bytes,5,opt,name=newPlatformInfo,proto3" json:"newPlatformInfo,omitempty"`
	Ip              string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	GameServerTitle string `protobuf:"bytes,7,opt,name=gameServerTitle,proto3" json:"gameServerTitle,omitempty"`
	OpenTime        string `protobuf:"bytes,8,opt,name=OpenTime,proto3" json:"OpenTime,omitempty"`
	ServerStatusX   string `protobuf:"bytes,9,opt,name=serverStatusX,proto3" json:"serverStatusX,omitempty"`
}

func (x *ListGameServerReq) Reset() {
	*x = ListGameServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGameServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGameServerReq) ProtoMessage() {}

func (x *ListGameServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGameServerReq.ProtoReflect.Descriptor instead.
func (*ListGameServerReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{99}
}

func (x *ListGameServerReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListGameServerReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListGameServerReq) GetServerStatus() string {
	if x != nil {
		return x.ServerStatus
	}
	return ""
}

func (x *ListGameServerReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListGameServerReq) GetNewPlatformInfo() string {
	if x != nil {
		return x.NewPlatformInfo
	}
	return ""
}

func (x *ListGameServerReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListGameServerReq) GetGameServerTitle() string {
	if x != nil {
		return x.GameServerTitle
	}
	return ""
}

func (x *ListGameServerReq) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *ListGameServerReq) GetServerStatusX() string {
	if x != nil {
		return x.ServerStatusX
	}
	return ""
}

type ListGameServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListGameServerData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListGameServerResp) Reset() {
	*x = ListGameServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGameServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGameServerResp) ProtoMessage() {}

func (x *ListGameServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGameServerResp.ProtoReflect.Descriptor instead.
func (*ListGameServerResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{100}
}

func (x *ListGameServerResp) GetRows() []*ListGameServerData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListGameServerResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListGameServerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ProjectId       string `protobuf:"bytes,2,opt,name=ProjectId,proto3" json:"ProjectId,omitempty"`
	PlatformId      string `protobuf:"bytes,3,opt,name=PlatformId,proto3" json:"PlatformId,omitempty"`
	ServerId        string `protobuf:"bytes,4,opt,name=ServerId,proto3" json:"ServerId,omitempty"`
	ServerAlias     string `protobuf:"bytes,5,opt,name=ServerAlias,proto3" json:"ServerAlias,omitempty"`
	OpenTime        string `protobuf:"bytes,6,opt,name=OpenTime,proto3" json:"OpenTime,omitempty"`
	AssetId         string `protobuf:"bytes,7,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	ServerStatus    string `protobuf:"bytes,8,opt,name=ServerStatus,proto3" json:"ServerStatus,omitempty"`
	CombineRemark   string `protobuf:"bytes,9,opt,name=CombineRemark,proto3" json:"CombineRemark,omitempty"`
	OperateInfo     string `protobuf:"bytes,10,opt,name=OperateInfo,proto3" json:"OperateInfo,omitempty"`
	DelFlag         string `protobuf:"bytes,11,opt,name=DelFlag,proto3" json:"DelFlag,omitempty"`
	ProjectCn       string `protobuf:"bytes,12,opt,name=ProjectCn,proto3" json:"ProjectCn,omitempty"`
	OuterIp         string `protobuf:"bytes,13,opt,name=OuterIp,proto3" json:"OuterIp,omitempty"`
	InnerIp         string `protobuf:"bytes,14,opt,name=InnerIp,proto3" json:"InnerIp,omitempty"`
	PlatformCn      string `protobuf:"bytes,15,opt,name=PlatformCn,proto3" json:"PlatformCn,omitempty"`
	PlatformEn      string `protobuf:"bytes,16,opt,name=PlatformEn,proto3" json:"PlatformEn,omitempty"`
	Ip              string `protobuf:"bytes,17,opt,name=Ip,proto3" json:"Ip,omitempty"`
	NewPlatformInfo string `protobuf:"bytes,18,opt,name=NewPlatformInfo,proto3" json:"NewPlatformInfo,omitempty"`
	GameServerTitle string `protobuf:"bytes,19,opt,name=GameServerTitle,proto3" json:"GameServerTitle,omitempty"`
}

func (x *ListGameServerData) Reset() {
	*x = ListGameServerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGameServerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGameServerData) ProtoMessage() {}

func (x *ListGameServerData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGameServerData.ProtoReflect.Descriptor instead.
func (*ListGameServerData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{101}
}

func (x *ListGameServerData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListGameServerData) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListGameServerData) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *ListGameServerData) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ListGameServerData) GetServerAlias() string {
	if x != nil {
		return x.ServerAlias
	}
	return ""
}

func (x *ListGameServerData) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *ListGameServerData) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ListGameServerData) GetServerStatus() string {
	if x != nil {
		return x.ServerStatus
	}
	return ""
}

func (x *ListGameServerData) GetCombineRemark() string {
	if x != nil {
		return x.CombineRemark
	}
	return ""
}

func (x *ListGameServerData) GetOperateInfo() string {
	if x != nil {
		return x.OperateInfo
	}
	return ""
}

func (x *ListGameServerData) GetDelFlag() string {
	if x != nil {
		return x.DelFlag
	}
	return ""
}

func (x *ListGameServerData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListGameServerData) GetOuterIp() string {
	if x != nil {
		return x.OuterIp
	}
	return ""
}

func (x *ListGameServerData) GetInnerIp() string {
	if x != nil {
		return x.InnerIp
	}
	return ""
}

func (x *ListGameServerData) GetPlatformCn() string {
	if x != nil {
		return x.PlatformCn
	}
	return ""
}

func (x *ListGameServerData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *ListGameServerData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ListGameServerData) GetNewPlatformInfo() string {
	if x != nil {
		return x.NewPlatformInfo
	}
	return ""
}

func (x *ListGameServerData) GetGameServerTitle() string {
	if x != nil {
		return x.GameServerTitle
	}
	return ""
}

//Tasks Start
type AddTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ProjectId    int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId    string `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	StartTime    string `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Content      string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	TaskType     string `protobuf:"bytes,6,opt,name=taskType,proto3" json:"taskType,omitempty"`
	TaskListForm string `protobuf:"bytes,7,opt,name=taskListForm,proto3" json:"taskListForm,omitempty"`
	OuterIp      string `protobuf:"bytes,8,opt,name=outerIp,proto3" json:"outerIp,omitempty"`
	MaintainId   int64  `protobuf:"varint,9,opt,name=maintainId,proto3" json:"maintainId,omitempty"`
	Uid          string `protobuf:"bytes,10,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *AddTasksReq) Reset() {
	*x = AddTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksReq) ProtoMessage() {}

func (x *AddTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksReq.ProtoReflect.Descriptor instead.
func (*AddTasksReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{102}
}

func (x *AddTasksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddTasksReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AddTasksReq) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AddTasksReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddTasksReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddTasksReq) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *AddTasksReq) GetTaskListForm() string {
	if x != nil {
		return x.TaskListForm
	}
	return ""
}

func (x *AddTasksReq) GetOuterIp() string {
	if x != nil {
		return x.OuterIp
	}
	return ""
}

func (x *AddTasksReq) GetMaintainId() int64 {
	if x != nil {
		return x.MaintainId
	}
	return 0
}

func (x *AddTasksReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type TasksCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *TasksCommonResp) Reset() {
	*x = TasksCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TasksCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksCommonResp) ProtoMessage() {}

func (x *TasksCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksCommonResp.ProtoReflect.Descriptor instead.
func (*TasksCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{103}
}

func (x *TasksCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ProjectId        int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId        string `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	StartTime        string `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Content          string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	TaskType         string `protobuf:"bytes,6,opt,name=taskType,proto3" json:"taskType,omitempty"`
	TaskListForm     string `protobuf:"bytes,7,opt,name=taskListForm,proto3" json:"taskListForm,omitempty"`
	OuterIp          string `protobuf:"bytes,8,opt,name=outerIp,proto3" json:"outerIp,omitempty"`
	MaintainId       int64  `protobuf:"varint,9,opt,name=maintainId,proto3" json:"maintainId,omitempty"`
	Id               int64  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	ErrDifferenceSet string `protobuf:"bytes,11,opt,name=errDifferenceSet,proto3" json:"errDifferenceSet,omitempty"`
	DifferenceSet    string `protobuf:"bytes,12,opt,name=differenceSet,proto3" json:"differenceSet,omitempty"`
	IsEnable         int64  `protobuf:"varint,13,opt,name=isEnable,proto3" json:"isEnable,omitempty"`
}

func (x *UpdateTasksReq) Reset() {
	*x = UpdateTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTasksReq) ProtoMessage() {}

func (x *UpdateTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTasksReq.ProtoReflect.Descriptor instead.
func (*UpdateTasksReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{104}
}

func (x *UpdateTasksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTasksReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateTasksReq) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateTasksReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *UpdateTasksReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateTasksReq) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *UpdateTasksReq) GetTaskListForm() string {
	if x != nil {
		return x.TaskListForm
	}
	return ""
}

func (x *UpdateTasksReq) GetOuterIp() string {
	if x != nil {
		return x.OuterIp
	}
	return ""
}

func (x *UpdateTasksReq) GetMaintainId() int64 {
	if x != nil {
		return x.MaintainId
	}
	return 0
}

func (x *UpdateTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTasksReq) GetErrDifferenceSet() string {
	if x != nil {
		return x.ErrDifferenceSet
	}
	return ""
}

func (x *UpdateTasksReq) GetDifferenceSet() string {
	if x != nil {
		return x.DifferenceSet
	}
	return ""
}

func (x *UpdateTasksReq) GetIsEnable() int64 {
	if x != nil {
		return x.IsEnable
	}
	return 0
}

type DeleteTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTasksReq) Reset() {
	*x = DeleteTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTasksReq) ProtoMessage() {}

func (x *DeleteTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTasksReq.ProtoReflect.Descriptor instead.
func (*DeleteTasksReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{105}
}

func (x *DeleteTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTasksReq) Reset() {
	*x = GetTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksReq) ProtoMessage() {}

func (x *GetTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksReq.ProtoReflect.Descriptor instead.
func (*GetTasksReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{106}
}

func (x *GetTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StartTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StartTasksReq) Reset() {
	*x = StartTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTasksReq) ProtoMessage() {}

func (x *StartTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTasksReq.ProtoReflect.Descriptor instead.
func (*StartTasksReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{107}
}

func (x *StartTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StartTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *StartTasksResp) Reset() {
	*x = StartTasksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTasksResp) ProtoMessage() {}

func (x *StartTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTasksResp.ProtoReflect.Descriptor instead.
func (*StartTasksResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{108}
}

func (x *StartTasksResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type StopTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StopTasksReq) Reset() {
	*x = StopTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTasksReq) ProtoMessage() {}

func (x *StopTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTasksReq.ProtoReflect.Descriptor instead.
func (*StopTasksReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{109}
}

func (x *StopTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StopTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *StopTasksResp) Reset() {
	*x = StopTasksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTasksResp) ProtoMessage() {}

func (x *StopTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTasksResp.ProtoReflect.Descriptor instead.
func (*StopTasksResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{110}
}

func (x *StopTasksResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type GetTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows     []*ListTasksData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	AllIdArr []int64          `protobuf:"varint,2,rep,packed,name=allIdArr,proto3" json:"allIdArr,omitempty"`
	ErrArr   []int64          `protobuf:"varint,3,rep,packed,name=errArr,proto3" json:"errArr,omitempty"`
}

func (x *GetTasksResp) Reset() {
	*x = GetTasksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksResp) ProtoMessage() {}

func (x *GetTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksResp.ProtoReflect.Descriptor instead.
func (*GetTasksResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{111}
}

func (x *GetTasksResp) GetRows() []*ListTasksData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *GetTasksResp) GetAllIdArr() []int64 {
	if x != nil {
		return x.AllIdArr
	}
	return nil
}

func (x *GetTasksResp) GetErrArr() []int64 {
	if x != nil {
		return x.ErrArr
	}
	return nil
}

type ListTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize   int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectIds string `protobuf:"bytes,3,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	CreateTime string `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	TaskType   string `protobuf:"bytes,5,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Id         int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	CreateBy   string `protobuf:"bytes,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
}

func (x *ListTasksReq) Reset() {
	*x = ListTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksReq) ProtoMessage() {}

func (x *ListTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksReq.ProtoReflect.Descriptor instead.
func (*ListTasksReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{112}
}

func (x *ListTasksReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTasksReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListTasksReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListTasksReq) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *ListTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListTasksReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

type ListTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListTasksData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListTasksResp) Reset() {
	*x = ListTasksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResp) ProtoMessage() {}

func (x *ListTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResp.ProtoReflect.Descriptor instead.
func (*ListTasksResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{113}
}

func (x *ListTasksResp) GetRows() []*ListTasksData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListTasksResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListTasksData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId      string `protobuf:"bytes,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	TaskType       string `protobuf:"bytes,4,opt,name=taskType,proto3" json:"taskType,omitempty"`
	Level          int64  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	MaintainId     int64  `protobuf:"varint,6,opt,name=maintainId,proto3" json:"maintainId,omitempty"`
	Name           string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Types          string `protobuf:"bytes,8,opt,name=types,proto3" json:"types,omitempty"`
	Pid            int64  `protobuf:"varint,9,opt,name=pid,proto3" json:"pid,omitempty"`
	TaskStartTime  int64  `protobuf:"varint,10,opt,name=taskStartTime,proto3" json:"taskStartTime,omitempty"`
	TaskEndTime    int64  `protobuf:"varint,11,opt,name=taskEndTime,proto3" json:"taskEndTime,omitempty"`
	TaskExecTime   int64  `protobuf:"varint,12,opt,name=taskExecTime,proto3" json:"taskExecTime,omitempty"`
	Cmd            string `protobuf:"bytes,13,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Content        string `protobuf:"bytes,14,opt,name=content,proto3" json:"content,omitempty"`
	TaskStatus     int64  `protobuf:"varint,15,opt,name=taskStatus,proto3" json:"taskStatus,omitempty"`
	TaskStep       int64  `protobuf:"varint,16,opt,name=taskStep,proto3" json:"taskStep,omitempty"`
	OuterIp        string `protobuf:"bytes,17,opt,name=outerIp,proto3" json:"outerIp,omitempty"`
	UserName       string `protobuf:"bytes,18,opt,name=userName,proto3" json:"userName,omitempty"`
	Modifier       string `protobuf:"bytes,19,opt,name=modifier,proto3" json:"modifier,omitempty"`
	ExportFileName string `protobuf:"bytes,20,opt,name=exportFileName,proto3" json:"exportFileName,omitempty"`
	Remark         string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateNameEn   string `protobuf:"bytes,22,opt,name=createNameEn,proto3" json:"createNameEn,omitempty"`
	CreateNameCn   string `protobuf:"bytes,23,opt,name=createNameCn,proto3" json:"createNameCn,omitempty"`
	UpdateNameEn   string `protobuf:"bytes,24,opt,name=updateNameEn,proto3" json:"updateNameEn,omitempty"`
	UpdateNameCn   string `protobuf:"bytes,25,opt,name=updateNameCn,proto3" json:"updateNameCn,omitempty"`
	ProjectCn      string `protobuf:"bytes,26,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	TaskTypeCn     string `protobuf:"bytes,27,opt,name=taskTypeCn,proto3" json:"taskTypeCn,omitempty"`
	TaskStatusCn   string `protobuf:"bytes,28,opt,name=taskStatusCn,proto3" json:"taskStatusCn,omitempty"`
	ProjectEn      string `protobuf:"bytes,29,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
}

func (x *ListTasksData) Reset() {
	*x = ListTasksData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksData) ProtoMessage() {}

func (x *ListTasksData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksData.ProtoReflect.Descriptor instead.
func (*ListTasksData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{114}
}

func (x *ListTasksData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListTasksData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListTasksData) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListTasksData) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *ListTasksData) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ListTasksData) GetMaintainId() int64 {
	if x != nil {
		return x.MaintainId
	}
	return 0
}

func (x *ListTasksData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListTasksData) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

func (x *ListTasksData) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ListTasksData) GetTaskStartTime() int64 {
	if x != nil {
		return x.TaskStartTime
	}
	return 0
}

func (x *ListTasksData) GetTaskEndTime() int64 {
	if x != nil {
		return x.TaskEndTime
	}
	return 0
}

func (x *ListTasksData) GetTaskExecTime() int64 {
	if x != nil {
		return x.TaskExecTime
	}
	return 0
}

func (x *ListTasksData) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *ListTasksData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ListTasksData) GetTaskStatus() int64 {
	if x != nil {
		return x.TaskStatus
	}
	return 0
}

func (x *ListTasksData) GetTaskStep() int64 {
	if x != nil {
		return x.TaskStep
	}
	return 0
}

func (x *ListTasksData) GetOuterIp() string {
	if x != nil {
		return x.OuterIp
	}
	return ""
}

func (x *ListTasksData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ListTasksData) GetModifier() string {
	if x != nil {
		return x.Modifier
	}
	return ""
}

func (x *ListTasksData) GetExportFileName() string {
	if x != nil {
		return x.ExportFileName
	}
	return ""
}

func (x *ListTasksData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListTasksData) GetCreateNameEn() string {
	if x != nil {
		return x.CreateNameEn
	}
	return ""
}

func (x *ListTasksData) GetCreateNameCn() string {
	if x != nil {
		return x.CreateNameCn
	}
	return ""
}

func (x *ListTasksData) GetUpdateNameEn() string {
	if x != nil {
		return x.UpdateNameEn
	}
	return ""
}

func (x *ListTasksData) GetUpdateNameCn() string {
	if x != nil {
		return x.UpdateNameCn
	}
	return ""
}

func (x *ListTasksData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListTasksData) GetTaskTypeCn() string {
	if x != nil {
		return x.TaskTypeCn
	}
	return ""
}

func (x *ListTasksData) GetTaskStatusCn() string {
	if x != nil {
		return x.TaskStatusCn
	}
	return ""
}

func (x *ListTasksData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

type TaskGetOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *TaskGetOperationReq) Reset() {
	*x = TaskGetOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskGetOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskGetOperationReq) ProtoMessage() {}

func (x *TaskGetOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskGetOperationReq.ProtoReflect.Descriptor instead.
func (*TaskGetOperationReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{115}
}

func (x *TaskGetOperationReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type TaskGetOperationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TaskGetOperationData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TaskGetOperationResp) Reset() {
	*x = TaskGetOperationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskGetOperationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskGetOperationResp) ProtoMessage() {}

func (x *TaskGetOperationResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskGetOperationResp.ProtoReflect.Descriptor instead.
func (*TaskGetOperationResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{116}
}

func (x *TaskGetOperationResp) GetList() []*TaskGetOperationData {
	if x != nil {
		return x.List
	}
	return nil
}

type TaskGetOperationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	ParentId int64  `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`
	OrderNum int64  `protobuf:"varint,5,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	Tp       int64  `protobuf:"varint,6,opt,name=tp,proto3" json:"tp,omitempty"`
	RoleId   int64  `protobuf:"varint,7,opt,name=roleId,proto3" json:"roleId,omitempty"`
	UserId   int64  `protobuf:"varint,8,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *TaskGetOperationData) Reset() {
	*x = TaskGetOperationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskGetOperationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskGetOperationData) ProtoMessage() {}

func (x *TaskGetOperationData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskGetOperationData.ProtoReflect.Descriptor instead.
func (*TaskGetOperationData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{117}
}

func (x *TaskGetOperationData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskGetOperationData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskGetOperationData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TaskGetOperationData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *TaskGetOperationData) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *TaskGetOperationData) GetTp() int64 {
	if x != nil {
		return x.Tp
	}
	return 0
}

func (x *TaskGetOperationData) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *TaskGetOperationData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetHotLogHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetHotLogHistoryReq) Reset() {
	*x = GetHotLogHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotLogHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotLogHistoryReq) ProtoMessage() {}

func (x *GetHotLogHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotLogHistoryReq.ProtoReflect.Descriptor instead.
func (*GetHotLogHistoryReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{118}
}

func (x *GetHotLogHistoryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListHotLogHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectIds string `protobuf:"bytes,1,opt,name=ProjectIds,proto3" json:"ProjectIds,omitempty"`
}

func (x *ListHotLogHistoryReq) Reset() {
	*x = ListHotLogHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotLogHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotLogHistoryReq) ProtoMessage() {}

func (x *ListHotLogHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotLogHistoryReq.ProtoReflect.Descriptor instead.
func (*ListHotLogHistoryReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{119}
}

func (x *ListHotLogHistoryReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

type AddHotLogHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ListHotLogHistoryData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Uid  string                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *AddHotLogHistoryReq) Reset() {
	*x = AddHotLogHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHotLogHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHotLogHistoryReq) ProtoMessage() {}

func (x *AddHotLogHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHotLogHistoryReq.ProtoReflect.Descriptor instead.
func (*AddHotLogHistoryReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{120}
}

func (x *AddHotLogHistoryReq) GetData() *ListHotLogHistoryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AddHotLogHistoryReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type AddHotLogHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddHotLogHistoryResp) Reset() {
	*x = AddHotLogHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHotLogHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHotLogHistoryResp) ProtoMessage() {}

func (x *AddHotLogHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHotLogHistoryResp.ProtoReflect.Descriptor instead.
func (*AddHotLogHistoryResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{121}
}

func (x *AddHotLogHistoryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ListHotLogHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*ListHotLogHistoryData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ListHotLogHistoryResp) Reset() {
	*x = ListHotLogHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotLogHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotLogHistoryResp) ProtoMessage() {}

func (x *ListHotLogHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotLogHistoryResp.ProtoReflect.Descriptor instead.
func (*ListHotLogHistoryResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{122}
}

func (x *ListHotLogHistoryResp) GetRows() []*ListHotLogHistoryData {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ListHotLogHistoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HotTitle    string `protobuf:"bytes,2,opt,name=hotTitle,proto3" json:"hotTitle,omitempty"`
	ProjectId   int64  `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	OperType    string `protobuf:"bytes,4,opt,name=operType,proto3" json:"operType,omitempty"`
	OperContent string `protobuf:"bytes,5,opt,name=operContent,proto3" json:"operContent,omitempty"`
	OperStatus  int64  `protobuf:"varint,6,opt,name=operStatus,proto3" json:"operStatus,omitempty"`
	CreateBy    string `protobuf:"bytes,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreateTime  int64  `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ListHotLogHistoryData) Reset() {
	*x = ListHotLogHistoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotLogHistoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotLogHistoryData) ProtoMessage() {}

func (x *ListHotLogHistoryData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotLogHistoryData.ProtoReflect.Descriptor instead.
func (*ListHotLogHistoryData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{123}
}

func (x *ListHotLogHistoryData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListHotLogHistoryData) GetHotTitle() string {
	if x != nil {
		return x.HotTitle
	}
	return ""
}

func (x *ListHotLogHistoryData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListHotLogHistoryData) GetOperType() string {
	if x != nil {
		return x.OperType
	}
	return ""
}

func (x *ListHotLogHistoryData) GetOperContent() string {
	if x != nil {
		return x.OperContent
	}
	return ""
}

func (x *ListHotLogHistoryData) GetOperStatus() int64 {
	if x != nil {
		return x.OperStatus
	}
	return 0
}

func (x *ListHotLogHistoryData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ListHotLogHistoryData) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type TaskGetFormatJsonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game    string `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Uname   string `protobuf:"bytes,3,opt,name=uname,proto3" json:"uname,omitempty"`
}

func (x *TaskGetFormatJsonReq) Reset() {
	*x = TaskGetFormatJsonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskGetFormatJsonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskGetFormatJsonReq) ProtoMessage() {}

func (x *TaskGetFormatJsonReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskGetFormatJsonReq.ProtoReflect.Descriptor instead.
func (*TaskGetFormatJsonReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{124}
}

func (x *TaskGetFormatJsonReq) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *TaskGetFormatJsonReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TaskGetFormatJsonReq) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

type TaskGetFormatJsonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationListM []*OperationListM `protobuf:"bytes,1,rep,name=OperationListM,proto3" json:"OperationListM,omitempty"`
}

func (x *TaskGetFormatJsonResp) Reset() {
	*x = TaskGetFormatJsonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskGetFormatJsonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskGetFormatJsonResp) ProtoMessage() {}

func (x *TaskGetFormatJsonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskGetFormatJsonResp.ProtoReflect.Descriptor instead.
func (*TaskGetFormatJsonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{125}
}

func (x *TaskGetFormatJsonResp) GetOperationListM() []*OperationListM {
	if x != nil {
		return x.OperationListM
	}
	return nil
}

type OperationListM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationListForm []*TaskCommonJson `protobuf:"bytes,1,rep,name=OperationListForm,proto3" json:"OperationListForm,omitempty"`
}

func (x *OperationListM) Reset() {
	*x = OperationListM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationListM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationListM) ProtoMessage() {}

func (x *OperationListM) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationListM.ProtoReflect.Descriptor instead.
func (*OperationListM) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{126}
}

func (x *OperationListM) GetOperationListForm() []*TaskCommonJson {
	if x != nil {
		return x.OperationListForm
	}
	return nil
}

type TaskCommonJson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation      string `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	OperationCn    string `protobuf:"bytes,2,opt,name=operationCn,proto3" json:"operationCn,omitempty"`
	Stable         string `protobuf:"bytes,3,opt,name=stable,proto3" json:"stable,omitempty"`
	OuterIp        string `protobuf:"bytes,4,opt,name=outerIp,proto3" json:"outerIp,omitempty"`
	DbUpdate       string `protobuf:"bytes,5,opt,name=dbUpdate,proto3" json:"dbUpdate,omitempty"`
	FileList       string `protobuf:"bytes,6,opt,name=fileList,proto3" json:"fileList,omitempty"`
	MaintainRange  string `protobuf:"bytes,7,opt,name=maintainRange,proto3" json:"maintainRange,omitempty"`
	CmdList        string `protobuf:"bytes,8,opt,name=cmdList,proto3" json:"cmdList,omitempty"`
	DbType         string `protobuf:"bytes,9,opt,name=dbType,proto3" json:"dbType,omitempty"`
	PlatName       string `protobuf:"bytes,10,opt,name=platName,proto3" json:"platName,omitempty"`
	CheckSt        string `protobuf:"bytes,11,opt,name=checkSt,proto3" json:"checkSt,omitempty"`
	SQLCmd         string `protobuf:"bytes,12,opt,name=SQLCmd,proto3" json:"SQLCmd,omitempty"`
	Merge          string `protobuf:"bytes,13,opt,name=merge,proto3" json:"merge,omitempty"`
	ExportFileName string `protobuf:"bytes,14,opt,name=exportFileName,proto3" json:"exportFileName,omitempty"`
	InitSetTime    string `protobuf:"bytes,15,opt,name=initSetTime,proto3" json:"initSetTime,omitempty"`
	ExecuteSQL     string `protobuf:"bytes,16,opt,name=executeSQL,proto3" json:"executeSQL,omitempty"`
	ExecuteFlag    string `protobuf:"bytes,17,opt,name=executeFlag,proto3" json:"executeFlag,omitempty"`
	AddRestartGame string `protobuf:"bytes,18,opt,name=addRestartGame,proto3" json:"addRestartGame,omitempty"`
}

func (x *TaskCommonJson) Reset() {
	*x = TaskCommonJson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCommonJson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCommonJson) ProtoMessage() {}

func (x *TaskCommonJson) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCommonJson.ProtoReflect.Descriptor instead.
func (*TaskCommonJson) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{127}
}

func (x *TaskCommonJson) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *TaskCommonJson) GetOperationCn() string {
	if x != nil {
		return x.OperationCn
	}
	return ""
}

func (x *TaskCommonJson) GetStable() string {
	if x != nil {
		return x.Stable
	}
	return ""
}

func (x *TaskCommonJson) GetOuterIp() string {
	if x != nil {
		return x.OuterIp
	}
	return ""
}

func (x *TaskCommonJson) GetDbUpdate() string {
	if x != nil {
		return x.DbUpdate
	}
	return ""
}

func (x *TaskCommonJson) GetFileList() string {
	if x != nil {
		return x.FileList
	}
	return ""
}

func (x *TaskCommonJson) GetMaintainRange() string {
	if x != nil {
		return x.MaintainRange
	}
	return ""
}

func (x *TaskCommonJson) GetCmdList() string {
	if x != nil {
		return x.CmdList
	}
	return ""
}

func (x *TaskCommonJson) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *TaskCommonJson) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *TaskCommonJson) GetCheckSt() string {
	if x != nil {
		return x.CheckSt
	}
	return ""
}

func (x *TaskCommonJson) GetSQLCmd() string {
	if x != nil {
		return x.SQLCmd
	}
	return ""
}

func (x *TaskCommonJson) GetMerge() string {
	if x != nil {
		return x.Merge
	}
	return ""
}

func (x *TaskCommonJson) GetExportFileName() string {
	if x != nil {
		return x.ExportFileName
	}
	return ""
}

func (x *TaskCommonJson) GetInitSetTime() string {
	if x != nil {
		return x.InitSetTime
	}
	return ""
}

func (x *TaskCommonJson) GetExecuteSQL() string {
	if x != nil {
		return x.ExecuteSQL
	}
	return ""
}

func (x *TaskCommonJson) GetExecuteFlag() string {
	if x != nil {
		return x.ExecuteFlag
	}
	return ""
}

func (x *TaskCommonJson) GetAddRestartGame() string {
	if x != nil {
		return x.AddRestartGame
	}
	return ""
}

type ListWaitInstallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64            `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64            `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SortFiledList []*SortFiledData `protobuf:"bytes,3,rep,name=SortFiledList,proto3" json:"SortFiledList,omitempty"`
	ProjectIds    string           `protobuf:"bytes,4,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
}

func (x *ListWaitInstallReq) Reset() {
	*x = ListWaitInstallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWaitInstallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWaitInstallReq) ProtoMessage() {}

func (x *ListWaitInstallReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWaitInstallReq.ProtoReflect.Descriptor instead.
func (*ListWaitInstallReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{128}
}

func (x *ListWaitInstallReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListWaitInstallReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWaitInstallReq) GetSortFiledList() []*SortFiledData {
	if x != nil {
		return x.SortFiledList
	}
	return nil
}

func (x *ListWaitInstallReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

type ListWaitInstallResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListWaitInstallData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                  `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *ListWaitInstallResp) Reset() {
	*x = ListWaitInstallResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWaitInstallResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWaitInstallResp) ProtoMessage() {}

func (x *ListWaitInstallResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWaitInstallResp.ProtoReflect.Descriptor instead.
func (*ListWaitInstallResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{129}
}

func (x *ListWaitInstallResp) GetRows() []*ListWaitInstallData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListWaitInstallResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListWaitInstallData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId       int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ProjectCn       string `protobuf:"bytes,3,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	PlatformId      int64  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	PlatformCn      string `protobuf:"bytes,5,opt,name=platformCn,proto3" json:"platformCn,omitempty"`
	PlatformEn      string `protobuf:"bytes,6,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
	ServerId        int64  `protobuf:"varint,7,opt,name=serverId,proto3" json:"serverId,omitempty"`
	GameserverTitle string `protobuf:"bytes,8,opt,name=gameserverTitle,proto3" json:"gameserverTitle,omitempty"`
	OpenTime        string `protobuf:"bytes,9,opt,name=openTime,proto3" json:"openTime,omitempty"`
	InstallStatus   string `protobuf:"bytes,10,opt,name=installStatus,proto3" json:"installStatus,omitempty"`
	InstallOperator string `protobuf:"bytes,11,opt,name=installOperator,proto3" json:"installOperator,omitempty"`
	InitdbStatus    int64  `protobuf:"varint,12,opt,name=initdbStatus,proto3" json:"initdbStatus,omitempty"`
	InitdbOperator  string `protobuf:"bytes,13,opt,name=initdbOperator,proto3" json:"initdbOperator,omitempty"`
	Remark          string `protobuf:"bytes,14,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ListWaitInstallData) Reset() {
	*x = ListWaitInstallData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWaitInstallData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWaitInstallData) ProtoMessage() {}

func (x *ListWaitInstallData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWaitInstallData.ProtoReflect.Descriptor instead.
func (*ListWaitInstallData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{130}
}

func (x *ListWaitInstallData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListWaitInstallData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListWaitInstallData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListWaitInstallData) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListWaitInstallData) GetPlatformCn() string {
	if x != nil {
		return x.PlatformCn
	}
	return ""
}

func (x *ListWaitInstallData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *ListWaitInstallData) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ListWaitInstallData) GetGameserverTitle() string {
	if x != nil {
		return x.GameserverTitle
	}
	return ""
}

func (x *ListWaitInstallData) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *ListWaitInstallData) GetInstallStatus() string {
	if x != nil {
		return x.InstallStatus
	}
	return ""
}

func (x *ListWaitInstallData) GetInstallOperator() string {
	if x != nil {
		return x.InstallOperator
	}
	return ""
}

func (x *ListWaitInstallData) GetInitdbStatus() int64 {
	if x != nil {
		return x.InitdbStatus
	}
	return 0
}

func (x *ListWaitInstallData) GetInitdbOperator() string {
	if x != nil {
		return x.InitdbOperator
	}
	return ""
}

func (x *ListWaitInstallData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ListWaitMergeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64            `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64            `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SortFiledList []*SortFiledData `protobuf:"bytes,3,rep,name=SortFiledList,proto3" json:"SortFiledList,omitempty"`
	ProjectIds    string           `protobuf:"bytes,4,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
}

func (x *ListWaitMergeReq) Reset() {
	*x = ListWaitMergeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWaitMergeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWaitMergeReq) ProtoMessage() {}

func (x *ListWaitMergeReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWaitMergeReq.ProtoReflect.Descriptor instead.
func (*ListWaitMergeReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{131}
}

func (x *ListWaitMergeReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListWaitMergeReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWaitMergeReq) GetSortFiledList() []*SortFiledData {
	if x != nil {
		return x.SortFiledList
	}
	return nil
}

func (x *ListWaitMergeReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

type ListWaitMergeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListWaitMergeData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListWaitMergeResp) Reset() {
	*x = ListWaitMergeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWaitMergeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWaitMergeResp) ProtoMessage() {}

func (x *ListWaitMergeResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWaitMergeResp.ProtoReflect.Descriptor instead.
func (*ListWaitMergeResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{132}
}

func (x *ListWaitMergeResp) GetRows() []*ListWaitMergeData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListWaitMergeResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListWaitMergeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId     int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId    int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	ServerId      int64  `protobuf:"varint,4,opt,name=serverId,proto3" json:"serverId,omitempty"`
	InputRange    string `protobuf:"bytes,5,opt,name=inputRange,proto3" json:"inputRange,omitempty"`
	CombineRange  string `protobuf:"bytes,6,opt,name=combineRange,proto3" json:"combineRange,omitempty"`
	StartTime     string `protobuf:"bytes,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string `protobuf:"bytes,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
	MergeStatus   int64  `protobuf:"varint,9,opt,name=mergeStatus,proto3" json:"mergeStatus,omitempty"`
	MergeOperator string `protobuf:"bytes,10,opt,name=mergeOperator,proto3" json:"mergeOperator,omitempty"`
	PlatformCn    string `protobuf:"bytes,11,opt,name=platformCn,proto3" json:"platformCn,omitempty"`
	PlatformEn    string `protobuf:"bytes,12,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
	ProjectCn     string `protobuf:"bytes,13,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
}

func (x *ListWaitMergeData) Reset() {
	*x = ListWaitMergeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWaitMergeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWaitMergeData) ProtoMessage() {}

func (x *ListWaitMergeData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWaitMergeData.ProtoReflect.Descriptor instead.
func (*ListWaitMergeData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{133}
}

func (x *ListWaitMergeData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListWaitMergeData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListWaitMergeData) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListWaitMergeData) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ListWaitMergeData) GetInputRange() string {
	if x != nil {
		return x.InputRange
	}
	return ""
}

func (x *ListWaitMergeData) GetCombineRange() string {
	if x != nil {
		return x.CombineRange
	}
	return ""
}

func (x *ListWaitMergeData) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListWaitMergeData) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ListWaitMergeData) GetMergeStatus() int64 {
	if x != nil {
		return x.MergeStatus
	}
	return 0
}

func (x *ListWaitMergeData) GetMergeOperator() string {
	if x != nil {
		return x.MergeOperator
	}
	return ""
}

func (x *ListWaitMergeData) GetPlatformCn() string {
	if x != nil {
		return x.PlatformCn
	}
	return ""
}

func (x *ListWaitMergeData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

func (x *ListWaitMergeData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

type ListInstallLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameName string `protobuf:"bytes,1,opt,name=gameName,proto3" json:"gameName,omitempty"`
}

func (x *ListInstallLogListReq) Reset() {
	*x = ListInstallLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstallLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstallLogListReq) ProtoMessage() {}

func (x *ListInstallLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstallLogListReq.ProtoReflect.Descriptor instead.
func (*ListInstallLogListReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{134}
}

func (x *ListInstallLogListReq) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

type ListInstallLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ListInstallLogListData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListInstallLogListResp) Reset() {
	*x = ListInstallLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstallLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstallLogListResp) ProtoMessage() {}

func (x *ListInstallLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstallLogListResp.ProtoReflect.Descriptor instead.
func (*ListInstallLogListResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{135}
}

func (x *ListInstallLogListResp) GetData() []*ListInstallLogListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListInstallLogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListInstallLogListData) Reset() {
	*x = ListInstallLogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInstallLogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInstallLogListData) ProtoMessage() {}

func (x *ListInstallLogListData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInstallLogListData.ProtoReflect.Descriptor instead.
func (*ListInstallLogListData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{136}
}

func (x *ListInstallLogListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListTaskLogHistroyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *ListTaskLogHistroyReq) Reset() {
	*x = ListTaskLogHistroyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskLogHistroyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskLogHistroyReq) ProtoMessage() {}

func (x *ListTaskLogHistroyReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskLogHistroyReq.ProtoReflect.Descriptor instead.
func (*ListTaskLogHistroyReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{137}
}

func (x *ListTaskLogHistroyReq) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ListTaskLogHistroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListTaskLogHistroyResp) Reset() {
	*x = ListTaskLogHistroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskLogHistroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskLogHistroyResp) ProtoMessage() {}

func (x *ListTaskLogHistroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskLogHistroyResp.ProtoReflect.Descriptor instead.
func (*ListTaskLogHistroyResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{138}
}

func (x *ListTaskLogHistroyResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type DetailTaskLogHistroyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *DetailTaskLogHistroyReq) Reset() {
	*x = DetailTaskLogHistroyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailTaskLogHistroyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailTaskLogHistroyReq) ProtoMessage() {}

func (x *DetailTaskLogHistroyReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailTaskLogHistroyReq.ProtoReflect.Descriptor instead.
func (*DetailTaskLogHistroyReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{139}
}

func (x *DetailTaskLogHistroyReq) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type DetailTaskLogHistroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TasksId   int64  `protobuf:"varint,2,opt,name=tasksId,proto3" json:"tasksId,omitempty"`
	TasksLogs string `protobuf:"bytes,3,opt,name=tasksLogs,proto3" json:"tasksLogs,omitempty"`
	TasksTime int64  `protobuf:"varint,4,opt,name=tasksTime,proto3" json:"tasksTime,omitempty"`
}

func (x *DetailTaskLogHistroyResp) Reset() {
	*x = DetailTaskLogHistroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailTaskLogHistroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailTaskLogHistroyResp) ProtoMessage() {}

func (x *DetailTaskLogHistroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailTaskLogHistroyResp.ProtoReflect.Descriptor instead.
func (*DetailTaskLogHistroyResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{140}
}

func (x *DetailTaskLogHistroyResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DetailTaskLogHistroyResp) GetTasksId() int64 {
	if x != nil {
		return x.TasksId
	}
	return 0
}

func (x *DetailTaskLogHistroyResp) GetTasksLogs() string {
	if x != nil {
		return x.TasksLogs
	}
	return ""
}

func (x *DetailTaskLogHistroyResp) GetTasksTime() int64 {
	if x != nil {
		return x.TasksTime
	}
	return 0
}

//TaskLogHistroy End
//ConfigFile Start
type AddConfigFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *ConfigFileCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddConfigFileReq) Reset() {
	*x = AddConfigFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigFileReq) ProtoMessage() {}

func (x *AddConfigFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigFileReq.ProtoReflect.Descriptor instead.
func (*AddConfigFileReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{141}
}

func (x *AddConfigFileReq) GetOne() *ConfigFileCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type ConfigFileCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ConfigFileCommonResp) Reset() {
	*x = ConfigFileCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFileCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFileCommonResp) ProtoMessage() {}

func (x *ConfigFileCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFileCommonResp.ProtoReflect.Descriptor instead.
func (*ConfigFileCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{142}
}

func (x *ConfigFileCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateConfigFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *ConfigFileCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateConfigFileReq) Reset() {
	*x = UpdateConfigFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigFileReq) ProtoMessage() {}

func (x *UpdateConfigFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigFileReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigFileReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{143}
}

func (x *UpdateConfigFileReq) GetOne() *ConfigFileCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteConfigFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFileId int64 `protobuf:"varint,1,opt,name=ConfigFileId,proto3" json:"ConfigFileId,omitempty"`
}

func (x *DeleteConfigFileReq) Reset() {
	*x = DeleteConfigFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigFileReq) ProtoMessage() {}

func (x *DeleteConfigFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigFileReq.ProtoReflect.Descriptor instead.
func (*DeleteConfigFileReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{144}
}

func (x *DeleteConfigFileReq) GetConfigFileId() int64 {
	if x != nil {
		return x.ConfigFileId
	}
	return 0
}

type GetConfigFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFileId int64 `protobuf:"varint,1,opt,name=ConfigFileId,proto3" json:"ConfigFileId,omitempty"`
}

func (x *GetConfigFileReq) Reset() {
	*x = GetConfigFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileReq) ProtoMessage() {}

func (x *GetConfigFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileReq.ProtoReflect.Descriptor instead.
func (*GetConfigFileReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{145}
}

func (x *GetConfigFileReq) GetConfigFileId() int64 {
	if x != nil {
		return x.ConfigFileId
	}
	return 0
}

type ConfigFileCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	DestPath    string `protobuf:"bytes,4,opt,name=destPath,proto3" json:"destPath,omitempty"`
	FileModTime int64  `protobuf:"varint,5,opt,name=fileModTime,proto3" json:"fileModTime,omitempty"`
}

func (x *ConfigFileCommon) Reset() {
	*x = ConfigFileCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFileCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFileCommon) ProtoMessage() {}

func (x *ConfigFileCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFileCommon.ProtoReflect.Descriptor instead.
func (*ConfigFileCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{146}
}

func (x *ConfigFileCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigFileCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ConfigFileCommon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigFileCommon) GetDestPath() string {
	if x != nil {
		return x.DestPath
	}
	return ""
}

func (x *ConfigFileCommon) GetFileModTime() int64 {
	if x != nil {
		return x.FileModTime
	}
	return 0
}

type ListConfigFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListConfigFileReq) Reset() {
	*x = ListConfigFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigFileReq) ProtoMessage() {}

func (x *ListConfigFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigFileReq.ProtoReflect.Descriptor instead.
func (*ListConfigFileReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{147}
}

func (x *ListConfigFileReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListConfigFileReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListConfigFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListConfigFileData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListConfigFileResp) Reset() {
	*x = ListConfigFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigFileResp) ProtoMessage() {}

func (x *ListConfigFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigFileResp.ProtoReflect.Descriptor instead.
func (*ListConfigFileResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{148}
}

func (x *ListConfigFileResp) GetRows() []*ListConfigFileData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListConfigFileResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListConfigFileData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	DestPath    string `protobuf:"bytes,4,opt,name=destPath,proto3" json:"destPath,omitempty"`
	FileModTime int64  `protobuf:"varint,5,opt,name=fileModTime,proto3" json:"fileModTime,omitempty"`
	ProjectCn   string `protobuf:"bytes,6,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	ProjectEn   string `protobuf:"bytes,7,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
	AssetCounts int64  `protobuf:"varint,8,opt,name=assetCounts,proto3" json:"assetCounts,omitempty"`
}

func (x *ListConfigFileData) Reset() {
	*x = ListConfigFileData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigFileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigFileData) ProtoMessage() {}

func (x *ListConfigFileData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigFileData.ProtoReflect.Descriptor instead.
func (*ListConfigFileData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{149}
}

func (x *ListConfigFileData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListConfigFileData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListConfigFileData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListConfigFileData) GetDestPath() string {
	if x != nil {
		return x.DestPath
	}
	return ""
}

func (x *ListConfigFileData) GetFileModTime() int64 {
	if x != nil {
		return x.FileModTime
	}
	return 0
}

func (x *ListConfigFileData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListConfigFileData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *ListConfigFileData) GetAssetCounts() int64 {
	if x != nil {
		return x.AssetCounts
	}
	return 0
}

//ConfigFile End
//ConfigFileDelivery Start
type AddConfigFileDeliveryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFileData []*AddConfigFileDeliveryDataList `protobuf:"bytes,1,rep,name=configFileData,proto3" json:"configFileData,omitempty"`
}

func (x *AddConfigFileDeliveryReq) Reset() {
	*x = AddConfigFileDeliveryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigFileDeliveryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigFileDeliveryReq) ProtoMessage() {}

func (x *AddConfigFileDeliveryReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigFileDeliveryReq.ProtoReflect.Descriptor instead.
func (*AddConfigFileDeliveryReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{150}
}

func (x *AddConfigFileDeliveryReq) GetConfigFileData() []*AddConfigFileDeliveryDataList {
	if x != nil {
		return x.ConfigFileData
	}
	return nil
}

type AddConfigFileDeliveryDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List      []*AddConfigFileDeliveryData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	ProjectEn string                       `protobuf:"bytes,2,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
}

func (x *AddConfigFileDeliveryDataList) Reset() {
	*x = AddConfigFileDeliveryDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigFileDeliveryDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigFileDeliveryDataList) ProtoMessage() {}

func (x *AddConfigFileDeliveryDataList) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigFileDeliveryDataList.ProtoReflect.Descriptor instead.
func (*AddConfigFileDeliveryDataList) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{151}
}

func (x *AddConfigFileDeliveryDataList) GetList() []*AddConfigFileDeliveryData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AddConfigFileDeliveryDataList) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

type AddConfigFileDeliveryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    int64  `protobuf:"varint,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ConfigFileId int64  `protobuf:"varint,2,opt,name=configFileId,proto3" json:"configFileId,omitempty"`
	ConfigTime   int64  `protobuf:"varint,3,opt,name=configTime,proto3" json:"configTime,omitempty"`
	AssetId      int64  `protobuf:"varint,4,opt,name=assetId,proto3" json:"assetId,omitempty"`
	SshIp        string `protobuf:"bytes,5,opt,name=sshIp,proto3" json:"sshIp,omitempty"`
	SshPort      int64  `protobuf:"varint,6,opt,name=sshPort,proto3" json:"sshPort,omitempty"`
	ProjectEn    string `protobuf:"bytes,7,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
	ConfigName   string `protobuf:"bytes,8,opt,name=configName,proto3" json:"configName,omitempty"`
	DestPath     string `protobuf:"bytes,9,opt,name=destPath,proto3" json:"destPath,omitempty"`
}

func (x *AddConfigFileDeliveryData) Reset() {
	*x = AddConfigFileDeliveryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigFileDeliveryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigFileDeliveryData) ProtoMessage() {}

func (x *AddConfigFileDeliveryData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigFileDeliveryData.ProtoReflect.Descriptor instead.
func (*AddConfigFileDeliveryData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{152}
}

func (x *AddConfigFileDeliveryData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AddConfigFileDeliveryData) GetConfigFileId() int64 {
	if x != nil {
		return x.ConfigFileId
	}
	return 0
}

func (x *AddConfigFileDeliveryData) GetConfigTime() int64 {
	if x != nil {
		return x.ConfigTime
	}
	return 0
}

func (x *AddConfigFileDeliveryData) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AddConfigFileDeliveryData) GetSshIp() string {
	if x != nil {
		return x.SshIp
	}
	return ""
}

func (x *AddConfigFileDeliveryData) GetSshPort() int64 {
	if x != nil {
		return x.SshPort
	}
	return 0
}

func (x *AddConfigFileDeliveryData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *AddConfigFileDeliveryData) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *AddConfigFileDeliveryData) GetDestPath() string {
	if x != nil {
		return x.DestPath
	}
	return ""
}

type AddConfigFileDeliveryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AddConfigFileDeliveryResp) Reset() {
	*x = AddConfigFileDeliveryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigFileDeliveryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigFileDeliveryResp) ProtoMessage() {}

func (x *AddConfigFileDeliveryResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigFileDeliveryResp.ProtoReflect.Descriptor instead.
func (*AddConfigFileDeliveryResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{153}
}

func (x *AddConfigFileDeliveryResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ListConfigFileDeliveryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectIds string `protobuf:"bytes,1,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
}

func (x *ListConfigFileDeliveryReq) Reset() {
	*x = ListConfigFileDeliveryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigFileDeliveryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigFileDeliveryReq) ProtoMessage() {}

func (x *ListConfigFileDeliveryReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigFileDeliveryReq.ProtoReflect.Descriptor instead.
func (*ListConfigFileDeliveryReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{154}
}

func (x *ListConfigFileDeliveryReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

type ListConfigFileDeliveryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows      []*ListConfigFileData             `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	MergeRows []*ListConfigFileDeliveryDataTree `protobuf:"bytes,2,rep,name=mergeRows,proto3" json:"mergeRows,omitempty"`
}

func (x *ListConfigFileDeliveryResp) Reset() {
	*x = ListConfigFileDeliveryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigFileDeliveryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigFileDeliveryResp) ProtoMessage() {}

func (x *ListConfigFileDeliveryResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigFileDeliveryResp.ProtoReflect.Descriptor instead.
func (*ListConfigFileDeliveryResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{155}
}

func (x *ListConfigFileDeliveryResp) GetRows() []*ListConfigFileData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListConfigFileDeliveryResp) GetMergeRows() []*ListConfigFileDeliveryDataTree {
	if x != nil {
		return x.MergeRows
	}
	return nil
}

type ListConfigFileDeliveryDataTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId int64    `protobuf:"varint,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	TotalList string   `protobuf:"bytes,2,opt,name=totalList,proto3" json:"totalList,omitempty"`
	MouldFile []string `protobuf:"bytes,3,rep,name=mouldFile,proto3" json:"mouldFile,omitempty"`
}

func (x *ListConfigFileDeliveryDataTree) Reset() {
	*x = ListConfigFileDeliveryDataTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigFileDeliveryDataTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigFileDeliveryDataTree) ProtoMessage() {}

func (x *ListConfigFileDeliveryDataTree) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigFileDeliveryDataTree.ProtoReflect.Descriptor instead.
func (*ListConfigFileDeliveryDataTree) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{156}
}

func (x *ListConfigFileDeliveryDataTree) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListConfigFileDeliveryDataTree) GetTotalList() string {
	if x != nil {
		return x.TotalList
	}
	return ""
}

func (x *ListConfigFileDeliveryDataTree) GetMouldFile() []string {
	if x != nil {
		return x.MouldFile
	}
	return nil
}

type GetConfigFileDeliveryTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    int64 `protobuf:"varint,1,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ConfigFileId int64 `protobuf:"varint,2,opt,name=configFileId,proto3" json:"configFileId,omitempty"`
}

func (x *GetConfigFileDeliveryTreeReq) Reset() {
	*x = GetConfigFileDeliveryTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileDeliveryTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileDeliveryTreeReq) ProtoMessage() {}

func (x *GetConfigFileDeliveryTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileDeliveryTreeReq.ProtoReflect.Descriptor instead.
func (*GetConfigFileDeliveryTreeReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{157}
}

func (x *GetConfigFileDeliveryTreeReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetConfigFileDeliveryTreeReq) GetConfigFileId() int64 {
	if x != nil {
		return x.ConfigFileId
	}
	return 0
}

type GetConfigFileDeliveryTreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows string `protobuf:"bytes,1,opt,name=rows,proto3" json:"rows,omitempty"`
}

func (x *GetConfigFileDeliveryTreeResp) Reset() {
	*x = GetConfigFileDeliveryTreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileDeliveryTreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileDeliveryTreeResp) ProtoMessage() {}

func (x *GetConfigFileDeliveryTreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileDeliveryTreeResp.ProtoReflect.Descriptor instead.
func (*GetConfigFileDeliveryTreeResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{158}
}

func (x *GetConfigFileDeliveryTreeResp) GetRows() string {
	if x != nil {
		return x.Rows
	}
	return ""
}

type GetConfigFileDeliveryLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *GetConfigFileDeliveryLogReq) Reset() {
	*x = GetConfigFileDeliveryLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileDeliveryLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileDeliveryLogReq) ProtoMessage() {}

func (x *GetConfigFileDeliveryLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileDeliveryLogReq.ProtoReflect.Descriptor instead.
func (*GetConfigFileDeliveryLogReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{159}
}

func (x *GetConfigFileDeliveryLogReq) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type GetConfigFileDeliveryLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *GetConfigFileDeliveryLogResp) Reset() {
	*x = GetConfigFileDeliveryLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileDeliveryLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileDeliveryLogResp) ProtoMessage() {}

func (x *GetConfigFileDeliveryLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileDeliveryLogResp.ProtoReflect.Descriptor instead.
func (*GetConfigFileDeliveryLogResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{160}
}

func (x *GetConfigFileDeliveryLogResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ConfigFileDeliveryGetFileContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigName string `protobuf:"bytes,1,opt,name=configName,proto3" json:"configName,omitempty"`
	Option     string `protobuf:"bytes,2,opt,name=option,proto3" json:"option,omitempty"`
	ProjectEn  string `protobuf:"bytes,3,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
}

func (x *ConfigFileDeliveryGetFileContentReq) Reset() {
	*x = ConfigFileDeliveryGetFileContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFileDeliveryGetFileContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFileDeliveryGetFileContentReq) ProtoMessage() {}

func (x *ConfigFileDeliveryGetFileContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFileDeliveryGetFileContentReq.ProtoReflect.Descriptor instead.
func (*ConfigFileDeliveryGetFileContentReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{161}
}

func (x *ConfigFileDeliveryGetFileContentReq) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ConfigFileDeliveryGetFileContentReq) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

func (x *ConfigFileDeliveryGetFileContentReq) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

type ConfigFileDeliveryGetFileContentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ConfigFileDeliveryGetFileContentResp) Reset() {
	*x = ConfigFileDeliveryGetFileContentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFileDeliveryGetFileContentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFileDeliveryGetFileContentResp) ProtoMessage() {}

func (x *ConfigFileDeliveryGetFileContentResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFileDeliveryGetFileContentResp.ProtoReflect.Descriptor instead.
func (*ConfigFileDeliveryGetFileContentResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{162}
}

func (x *ConfigFileDeliveryGetFileContentResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateConfigFileDeliveryTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigName string `protobuf:"bytes,1,opt,name=configName,proto3" json:"configName,omitempty"`
	ProjectEn  string `protobuf:"bytes,2,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ProjectId  int64  `protobuf:"varint,4,opt,name=projectId,proto3" json:"projectId,omitempty"`
}

func (x *UpdateConfigFileDeliveryTemplateReq) Reset() {
	*x = UpdateConfigFileDeliveryTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigFileDeliveryTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigFileDeliveryTemplateReq) ProtoMessage() {}

func (x *UpdateConfigFileDeliveryTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigFileDeliveryTemplateReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigFileDeliveryTemplateReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{163}
}

func (x *UpdateConfigFileDeliveryTemplateReq) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *UpdateConfigFileDeliveryTemplateReq) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *UpdateConfigFileDeliveryTemplateReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateConfigFileDeliveryTemplateReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type UpdateConfigFileDeliveryTemplateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *UpdateConfigFileDeliveryTemplateResp) Reset() {
	*x = UpdateConfigFileDeliveryTemplateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigFileDeliveryTemplateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigFileDeliveryTemplateResp) ProtoMessage() {}

func (x *UpdateConfigFileDeliveryTemplateResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigFileDeliveryTemplateResp.ProtoReflect.Descriptor instead.
func (*UpdateConfigFileDeliveryTemplateResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{164}
}

func (x *UpdateConfigFileDeliveryTemplateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

//Help Start
type HelpListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameName string `protobuf:"bytes,1,opt,name=gameName,proto3" json:"gameName,omitempty"`
}

func (x *HelpListReq) Reset() {
	*x = HelpListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpListReq) ProtoMessage() {}

func (x *HelpListReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpListReq.ProtoReflect.Descriptor instead.
func (*HelpListReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{165}
}

func (x *HelpListReq) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

type HelpListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*HelpListData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *HelpListResp) Reset() {
	*x = HelpListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpListResp) ProtoMessage() {}

func (x *HelpListResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpListResp.ProtoReflect.Descriptor instead.
func (*HelpListResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{166}
}

func (x *HelpListResp) GetRows() []*HelpListData {
	if x != nil {
		return x.Rows
	}
	return nil
}

type HelpListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HelpListData) Reset() {
	*x = HelpListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpListData) ProtoMessage() {}

func (x *HelpListData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpListData.ProtoReflect.Descriptor instead.
func (*HelpListData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{167}
}

func (x *HelpListData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HelpListData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

//Dashboard Start
type GetSumOfCurrentInfoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectIds string `protobuf:"bytes,1,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
}

func (x *GetSumOfCurrentInfoListReq) Reset() {
	*x = GetSumOfCurrentInfoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSumOfCurrentInfoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSumOfCurrentInfoListReq) ProtoMessage() {}

func (x *GetSumOfCurrentInfoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSumOfCurrentInfoListReq.ProtoReflect.Descriptor instead.
func (*GetSumOfCurrentInfoListReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{168}
}

func (x *GetSumOfCurrentInfoListReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

type GetSumOfCurrentInfoListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*GetSumOfCurrentInfoData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *GetSumOfCurrentInfoListResp) Reset() {
	*x = GetSumOfCurrentInfoListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSumOfCurrentInfoListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSumOfCurrentInfoListResp) ProtoMessage() {}

func (x *GetSumOfCurrentInfoListResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSumOfCurrentInfoListResp.ProtoReflect.Descriptor instead.
func (*GetSumOfCurrentInfoListResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{169}
}

func (x *GetSumOfCurrentInfoListResp) GetRows() []*GetSumOfCurrentInfoData {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GetSumOfCurrentInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectEn string `protobuf:"bytes,1,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
	Cluster   string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	ServerNum int64  `protobuf:"varint,3,opt,name=serverNum,proto3" json:"serverNum,omitempty"`
	GameNum   int64  `protobuf:"varint,4,opt,name=gameNum,proto3" json:"gameNum,omitempty"`
	HostRole  string `protobuf:"bytes,5,opt,name=hostRole,proto3" json:"hostRole,omitempty"`
}

func (x *GetSumOfCurrentInfoData) Reset() {
	*x = GetSumOfCurrentInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSumOfCurrentInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSumOfCurrentInfoData) ProtoMessage() {}

func (x *GetSumOfCurrentInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSumOfCurrentInfoData.ProtoReflect.Descriptor instead.
func (*GetSumOfCurrentInfoData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{170}
}

func (x *GetSumOfCurrentInfoData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *GetSumOfCurrentInfoData) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *GetSumOfCurrentInfoData) GetServerNum() int64 {
	if x != nil {
		return x.ServerNum
	}
	return 0
}

func (x *GetSumOfCurrentInfoData) GetGameNum() int64 {
	if x != nil {
		return x.GameNum
	}
	return 0
}

func (x *GetSumOfCurrentInfoData) GetHostRole() string {
	if x != nil {
		return x.HostRole
	}
	return ""
}

type GetTrendChartListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectIds string `protobuf:"bytes,1,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	Types      string `protobuf:"bytes,2,opt,name=types,proto3" json:"types,omitempty"`
}

func (x *GetTrendChartListReq) Reset() {
	*x = GetTrendChartListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrendChartListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendChartListReq) ProtoMessage() {}

func (x *GetTrendChartListReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendChartListReq.ProtoReflect.Descriptor instead.
func (*GetTrendChartListReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{171}
}

func (x *GetTrendChartListReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *GetTrendChartListReq) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

type GetTrendChartListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*GetTrendChartData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *GetTrendChartListResp) Reset() {
	*x = GetTrendChartListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrendChartListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendChartListResp) ProtoMessage() {}

func (x *GetTrendChartListResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendChartListResp.ProtoReflect.Descriptor instead.
func (*GetTrendChartListResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{172}
}

func (x *GetTrendChartListResp) GetRows() []*GetTrendChartData {
	if x != nil {
		return x.Rows
	}
	return nil
}

type GetTrendChartData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectEn  string `protobuf:"bytes,1,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
	Counts     int64  `protobuf:"varint,2,opt,name=counts,proto3" json:"counts,omitempty"`
	Detail     string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	CreateTime int64  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *GetTrendChartData) Reset() {
	*x = GetTrendChartData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrendChartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendChartData) ProtoMessage() {}

func (x *GetTrendChartData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendChartData.ProtoReflect.Descriptor instead.
func (*GetTrendChartData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{173}
}

func (x *GetTrendChartData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *GetTrendChartData) GetCounts() int64 {
	if x != nil {
		return x.Counts
	}
	return 0
}

func (x *GetTrendChartData) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *GetTrendChartData) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

//AutoOpengameRule Start
type AddAutoOpengameRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *AutoOpengameRuleCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddAutoOpengameRuleReq) Reset() {
	*x = AddAutoOpengameRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAutoOpengameRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAutoOpengameRuleReq) ProtoMessage() {}

func (x *AddAutoOpengameRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAutoOpengameRuleReq.ProtoReflect.Descriptor instead.
func (*AddAutoOpengameRuleReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{174}
}

func (x *AddAutoOpengameRuleReq) GetOne() *AutoOpengameRuleCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type AutoOpengameRuleCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AutoOpengameRuleCommonResp) Reset() {
	*x = AutoOpengameRuleCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoOpengameRuleCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoOpengameRuleCommonResp) ProtoMessage() {}

func (x *AutoOpengameRuleCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoOpengameRuleCommonResp.ProtoReflect.Descriptor instead.
func (*AutoOpengameRuleCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{175}
}

func (x *AutoOpengameRuleCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateAutoOpengameRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *AutoOpengameRuleCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateAutoOpengameRuleReq) Reset() {
	*x = UpdateAutoOpengameRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAutoOpengameRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAutoOpengameRuleReq) ProtoMessage() {}

func (x *UpdateAutoOpengameRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAutoOpengameRuleReq.ProtoReflect.Descriptor instead.
func (*UpdateAutoOpengameRuleReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{176}
}

func (x *UpdateAutoOpengameRuleReq) GetOne() *AutoOpengameRuleCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteAutoOpengameRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoOpengameRuleId int64 `protobuf:"varint,1,opt,name=AutoOpengameRuleId,proto3" json:"AutoOpengameRuleId,omitempty"`
}

func (x *DeleteAutoOpengameRuleReq) Reset() {
	*x = DeleteAutoOpengameRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAutoOpengameRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAutoOpengameRuleReq) ProtoMessage() {}

func (x *DeleteAutoOpengameRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAutoOpengameRuleReq.ProtoReflect.Descriptor instead.
func (*DeleteAutoOpengameRuleReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{177}
}

func (x *DeleteAutoOpengameRuleReq) GetAutoOpengameRuleId() int64 {
	if x != nil {
		return x.AutoOpengameRuleId
	}
	return 0
}

type GetAutoOpengameRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoOpengameRuleId int64 `protobuf:"varint,1,opt,name=AutoOpengameRuleId,proto3" json:"AutoOpengameRuleId,omitempty"`
}

func (x *GetAutoOpengameRuleReq) Reset() {
	*x = GetAutoOpengameRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoOpengameRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoOpengameRuleReq) ProtoMessage() {}

func (x *GetAutoOpengameRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoOpengameRuleReq.ProtoReflect.Descriptor instead.
func (*GetAutoOpengameRuleReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{178}
}

func (x *GetAutoOpengameRuleReq) GetAutoOpengameRuleId() int64 {
	if x != nil {
		return x.AutoOpengameRuleId
	}
	return 0
}

type AutoOpengameRuleCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId     int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	StartOpenTime  string `protobuf:"bytes,4,opt,name=startOpenTime,proto3" json:"startOpenTime,omitempty"`
	EndOpenTime    string `protobuf:"bytes,5,opt,name=endOpenTime,proto3" json:"endOpenTime,omitempty"`
	IntervalDay    int64  `protobuf:"varint,6,opt,name=intervalDay,proto3" json:"intervalDay,omitempty"`
	ThresholdValue int64  `protobuf:"varint,7,opt,name=thresholdValue,proto3" json:"thresholdValue,omitempty"`
	NumberOfServer int64  `protobuf:"varint,8,opt,name=numberOfServer,proto3" json:"numberOfServer,omitempty"`
	OpenTime       string `protobuf:"bytes,9,opt,name=openTime,proto3" json:"openTime,omitempty"`
	StartOpenMulti string `protobuf:"bytes,10,opt,name=startOpenMulti,proto3" json:"startOpenMulti,omitempty"`
	EndOpenMulti   string `protobuf:"bytes,11,opt,name=endOpenMulti,proto3" json:"endOpenMulti,omitempty"`
	State          int64  `protobuf:"varint,12,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *AutoOpengameRuleCommon) Reset() {
	*x = AutoOpengameRuleCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoOpengameRuleCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoOpengameRuleCommon) ProtoMessage() {}

func (x *AutoOpengameRuleCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoOpengameRuleCommon.ProtoReflect.Descriptor instead.
func (*AutoOpengameRuleCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{179}
}

func (x *AutoOpengameRuleCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AutoOpengameRuleCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AutoOpengameRuleCommon) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *AutoOpengameRuleCommon) GetStartOpenTime() string {
	if x != nil {
		return x.StartOpenTime
	}
	return ""
}

func (x *AutoOpengameRuleCommon) GetEndOpenTime() string {
	if x != nil {
		return x.EndOpenTime
	}
	return ""
}

func (x *AutoOpengameRuleCommon) GetIntervalDay() int64 {
	if x != nil {
		return x.IntervalDay
	}
	return 0
}

func (x *AutoOpengameRuleCommon) GetThresholdValue() int64 {
	if x != nil {
		return x.ThresholdValue
	}
	return 0
}

func (x *AutoOpengameRuleCommon) GetNumberOfServer() int64 {
	if x != nil {
		return x.NumberOfServer
	}
	return 0
}

func (x *AutoOpengameRuleCommon) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *AutoOpengameRuleCommon) GetStartOpenMulti() string {
	if x != nil {
		return x.StartOpenMulti
	}
	return ""
}

func (x *AutoOpengameRuleCommon) GetEndOpenMulti() string {
	if x != nil {
		return x.EndOpenMulti
	}
	return ""
}

func (x *AutoOpengameRuleCommon) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

type ListAutoOpengameRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize   int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectIds string `protobuf:"bytes,3,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
}

func (x *ListAutoOpengameRuleReq) Reset() {
	*x = ListAutoOpengameRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAutoOpengameRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAutoOpengameRuleReq) ProtoMessage() {}

func (x *ListAutoOpengameRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAutoOpengameRuleReq.ProtoReflect.Descriptor instead.
func (*ListAutoOpengameRuleReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{180}
}

func (x *ListAutoOpengameRuleReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListAutoOpengameRuleReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAutoOpengameRuleReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

type ListAutoOpengameRuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListAutoOpengameRuleData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListAutoOpengameRuleResp) Reset() {
	*x = ListAutoOpengameRuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAutoOpengameRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAutoOpengameRuleResp) ProtoMessage() {}

func (x *ListAutoOpengameRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAutoOpengameRuleResp.ProtoReflect.Descriptor instead.
func (*ListAutoOpengameRuleResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{181}
}

func (x *ListAutoOpengameRuleResp) GetRows() []*ListAutoOpengameRuleData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListAutoOpengameRuleResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListAutoOpengameRuleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId     int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	StartOpenTime  string `protobuf:"bytes,4,opt,name=startOpenTime,proto3" json:"startOpenTime,omitempty"`
	EndOpenTime    string `protobuf:"bytes,5,opt,name=endOpenTime,proto3" json:"endOpenTime,omitempty"`
	IntervalDay    int64  `protobuf:"varint,6,opt,name=intervalDay,proto3" json:"intervalDay,omitempty"`
	ThresholdValue int64  `protobuf:"varint,7,opt,name=thresholdValue,proto3" json:"thresholdValue,omitempty"`
	NumberOfServer int64  `protobuf:"varint,8,opt,name=numberOfServer,proto3" json:"numberOfServer,omitempty"`
	OpenTime       string `protobuf:"bytes,9,opt,name=openTime,proto3" json:"openTime,omitempty"`
	StartOpenMulti string `protobuf:"bytes,10,opt,name=startOpenMulti,proto3" json:"startOpenMulti,omitempty"`
	EndOpenMulti   string `protobuf:"bytes,11,opt,name=endOpenMulti,proto3" json:"endOpenMulti,omitempty"`
	State          int64  `protobuf:"varint,12,opt,name=state,proto3" json:"state,omitempty"`
	ProjectCn      string `protobuf:"bytes,13,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	PlatformEn     string `protobuf:"bytes,14,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
}

func (x *ListAutoOpengameRuleData) Reset() {
	*x = ListAutoOpengameRuleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAutoOpengameRuleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAutoOpengameRuleData) ProtoMessage() {}

func (x *ListAutoOpengameRuleData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAutoOpengameRuleData.ProtoReflect.Descriptor instead.
func (*ListAutoOpengameRuleData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{182}
}

func (x *ListAutoOpengameRuleData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListAutoOpengameRuleData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAutoOpengameRuleData) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListAutoOpengameRuleData) GetStartOpenTime() string {
	if x != nil {
		return x.StartOpenTime
	}
	return ""
}

func (x *ListAutoOpengameRuleData) GetEndOpenTime() string {
	if x != nil {
		return x.EndOpenTime
	}
	return ""
}

func (x *ListAutoOpengameRuleData) GetIntervalDay() int64 {
	if x != nil {
		return x.IntervalDay
	}
	return 0
}

func (x *ListAutoOpengameRuleData) GetThresholdValue() int64 {
	if x != nil {
		return x.ThresholdValue
	}
	return 0
}

func (x *ListAutoOpengameRuleData) GetNumberOfServer() int64 {
	if x != nil {
		return x.NumberOfServer
	}
	return 0
}

func (x *ListAutoOpengameRuleData) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *ListAutoOpengameRuleData) GetStartOpenMulti() string {
	if x != nil {
		return x.StartOpenMulti
	}
	return ""
}

func (x *ListAutoOpengameRuleData) GetEndOpenMulti() string {
	if x != nil {
		return x.EndOpenMulti
	}
	return ""
}

func (x *ListAutoOpengameRuleData) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ListAutoOpengameRuleData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListAutoOpengameRuleData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

//SwitchEntranceGameserver Start
type AddSwitchEntranceGameserverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *SwitchEntranceGameserverCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddSwitchEntranceGameserverReq) Reset() {
	*x = AddSwitchEntranceGameserverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSwitchEntranceGameserverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSwitchEntranceGameserverReq) ProtoMessage() {}

func (x *AddSwitchEntranceGameserverReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSwitchEntranceGameserverReq.ProtoReflect.Descriptor instead.
func (*AddSwitchEntranceGameserverReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{183}
}

func (x *AddSwitchEntranceGameserverReq) GetOne() *SwitchEntranceGameserverCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type SwitchEntranceGameserverCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SwitchEntranceGameserverCommonResp) Reset() {
	*x = SwitchEntranceGameserverCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchEntranceGameserverCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchEntranceGameserverCommonResp) ProtoMessage() {}

func (x *SwitchEntranceGameserverCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchEntranceGameserverCommonResp.ProtoReflect.Descriptor instead.
func (*SwitchEntranceGameserverCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{184}
}

func (x *SwitchEntranceGameserverCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateSwitchEntranceGameserverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *SwitchEntranceGameserverCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateSwitchEntranceGameserverReq) Reset() {
	*x = UpdateSwitchEntranceGameserverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSwitchEntranceGameserverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSwitchEntranceGameserverReq) ProtoMessage() {}

func (x *UpdateSwitchEntranceGameserverReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSwitchEntranceGameserverReq.ProtoReflect.Descriptor instead.
func (*UpdateSwitchEntranceGameserverReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{185}
}

func (x *UpdateSwitchEntranceGameserverReq) GetOne() *SwitchEntranceGameserverCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteSwitchEntranceGameserverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids       string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	Operation string `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *DeleteSwitchEntranceGameserverReq) Reset() {
	*x = DeleteSwitchEntranceGameserverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSwitchEntranceGameserverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSwitchEntranceGameserverReq) ProtoMessage() {}

func (x *DeleteSwitchEntranceGameserverReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSwitchEntranceGameserverReq.ProtoReflect.Descriptor instead.
func (*DeleteSwitchEntranceGameserverReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{186}
}

func (x *DeleteSwitchEntranceGameserverReq) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

func (x *DeleteSwitchEntranceGameserverReq) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

type GetSwitchEntranceGameserverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwitchEntranceGameserverId int64 `protobuf:"varint,1,opt,name=SwitchEntranceGameserverId,proto3" json:"SwitchEntranceGameserverId,omitempty"`
}

func (x *GetSwitchEntranceGameserverReq) Reset() {
	*x = GetSwitchEntranceGameserverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSwitchEntranceGameserverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwitchEntranceGameserverReq) ProtoMessage() {}

func (x *GetSwitchEntranceGameserverReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwitchEntranceGameserverReq.ProtoReflect.Descriptor instead.
func (*GetSwitchEntranceGameserverReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{187}
}

func (x *GetSwitchEntranceGameserverReq) GetSwitchEntranceGameserverId() int64 {
	if x != nil {
		return x.SwitchEntranceGameserverId
	}
	return 0
}

type SwitchEntranceGameserverCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId     int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	ConfigJsonPath string `protobuf:"bytes,4,opt,name=configJsonPath,proto3" json:"configJsonPath,omitempty"`
	State          int64  `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SwitchEntranceGameserverCommon) Reset() {
	*x = SwitchEntranceGameserverCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchEntranceGameserverCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchEntranceGameserverCommon) ProtoMessage() {}

func (x *SwitchEntranceGameserverCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchEntranceGameserverCommon.ProtoReflect.Descriptor instead.
func (*SwitchEntranceGameserverCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{188}
}

func (x *SwitchEntranceGameserverCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SwitchEntranceGameserverCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *SwitchEntranceGameserverCommon) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *SwitchEntranceGameserverCommon) GetConfigJsonPath() string {
	if x != nil {
		return x.ConfigJsonPath
	}
	return ""
}

func (x *SwitchEntranceGameserverCommon) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

type ListSwitchEntranceGameserverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize   int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectIds string `protobuf:"bytes,3,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
}

func (x *ListSwitchEntranceGameserverReq) Reset() {
	*x = ListSwitchEntranceGameserverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSwitchEntranceGameserverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSwitchEntranceGameserverReq) ProtoMessage() {}

func (x *ListSwitchEntranceGameserverReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSwitchEntranceGameserverReq.ProtoReflect.Descriptor instead.
func (*ListSwitchEntranceGameserverReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{189}
}

func (x *ListSwitchEntranceGameserverReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListSwitchEntranceGameserverReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSwitchEntranceGameserverReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

type ListSwitchEntranceGameserverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListSwitchEntranceGameserverData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListSwitchEntranceGameserverResp) Reset() {
	*x = ListSwitchEntranceGameserverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSwitchEntranceGameserverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSwitchEntranceGameserverResp) ProtoMessage() {}

func (x *ListSwitchEntranceGameserverResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSwitchEntranceGameserverResp.ProtoReflect.Descriptor instead.
func (*ListSwitchEntranceGameserverResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{190}
}

func (x *ListSwitchEntranceGameserverResp) GetRows() []*ListSwitchEntranceGameserverData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListSwitchEntranceGameserverResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListSwitchEntranceGameserverData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	PlatformId     int64  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	ConfigJsonPath string `protobuf:"bytes,4,opt,name=configJsonPath,proto3" json:"configJsonPath,omitempty"`
	State          int64  `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	ProjectCn      string `protobuf:"bytes,6,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	PlatformEn     string `protobuf:"bytes,7,opt,name=platformEn,proto3" json:"platformEn,omitempty"`
}

func (x *ListSwitchEntranceGameserverData) Reset() {
	*x = ListSwitchEntranceGameserverData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSwitchEntranceGameserverData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSwitchEntranceGameserverData) ProtoMessage() {}

func (x *ListSwitchEntranceGameserverData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSwitchEntranceGameserverData.ProtoReflect.Descriptor instead.
func (*ListSwitchEntranceGameserverData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{191}
}

func (x *ListSwitchEntranceGameserverData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListSwitchEntranceGameserverData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListSwitchEntranceGameserverData) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListSwitchEntranceGameserverData) GetConfigJsonPath() string {
	if x != nil {
		return x.ConfigJsonPath
	}
	return ""
}

func (x *ListSwitchEntranceGameserverData) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ListSwitchEntranceGameserverData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListSwitchEntranceGameserverData) GetPlatformEn() string {
	if x != nil {
		return x.PlatformEn
	}
	return ""
}

//SwitchEntranceGameserver End
//AlarmThresholdManage Start
type AddAlarmThresholdManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *AlarmThresholdManageCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddAlarmThresholdManageReq) Reset() {
	*x = AddAlarmThresholdManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAlarmThresholdManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAlarmThresholdManageReq) ProtoMessage() {}

func (x *AddAlarmThresholdManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAlarmThresholdManageReq.ProtoReflect.Descriptor instead.
func (*AddAlarmThresholdManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{192}
}

func (x *AddAlarmThresholdManageReq) GetOne() *AlarmThresholdManageCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type AlarmThresholdManageCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *AlarmThresholdManageCommonResp) Reset() {
	*x = AlarmThresholdManageCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmThresholdManageCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmThresholdManageCommonResp) ProtoMessage() {}

func (x *AlarmThresholdManageCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmThresholdManageCommonResp.ProtoReflect.Descriptor instead.
func (*AlarmThresholdManageCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{193}
}

func (x *AlarmThresholdManageCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateAlarmThresholdManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *AlarmThresholdManageCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateAlarmThresholdManageReq) Reset() {
	*x = UpdateAlarmThresholdManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlarmThresholdManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlarmThresholdManageReq) ProtoMessage() {}

func (x *UpdateAlarmThresholdManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlarmThresholdManageReq.ProtoReflect.Descriptor instead.
func (*UpdateAlarmThresholdManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{194}
}

func (x *UpdateAlarmThresholdManageReq) GetOne() *AlarmThresholdManageCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteAlarmThresholdManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmThresholdManageId int64 `protobuf:"varint,1,opt,name=AlarmThresholdManageId,proto3" json:"AlarmThresholdManageId,omitempty"`
}

func (x *DeleteAlarmThresholdManageReq) Reset() {
	*x = DeleteAlarmThresholdManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlarmThresholdManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlarmThresholdManageReq) ProtoMessage() {}

func (x *DeleteAlarmThresholdManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlarmThresholdManageReq.ProtoReflect.Descriptor instead.
func (*DeleteAlarmThresholdManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{195}
}

func (x *DeleteAlarmThresholdManageReq) GetAlarmThresholdManageId() int64 {
	if x != nil {
		return x.AlarmThresholdManageId
	}
	return 0
}

type GetAlarmThresholdManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmThresholdManageId    int64  `protobuf:"varint,1,opt,name=AlarmThresholdManageId,proto3" json:"AlarmThresholdManageId,omitempty"`
	AlarmThresholdManageTypes string `protobuf:"bytes,2,opt,name=AlarmThresholdManageTypes,proto3" json:"AlarmThresholdManageTypes,omitempty"`
}

func (x *GetAlarmThresholdManageReq) Reset() {
	*x = GetAlarmThresholdManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlarmThresholdManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlarmThresholdManageReq) ProtoMessage() {}

func (x *GetAlarmThresholdManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlarmThresholdManageReq.ProtoReflect.Descriptor instead.
func (*GetAlarmThresholdManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{196}
}

func (x *GetAlarmThresholdManageReq) GetAlarmThresholdManageId() int64 {
	if x != nil {
		return x.AlarmThresholdManageId
	}
	return 0
}

func (x *GetAlarmThresholdManageReq) GetAlarmThresholdManageTypes() string {
	if x != nil {
		return x.AlarmThresholdManageTypes
	}
	return ""
}

type AlarmThresholdManageCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Config       string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	ProjectId    int64  `protobuf:"varint,4,opt,name=projectId,proto3" json:"projectId,omitempty"`
	GameServerId int64  `protobuf:"varint,5,opt,name=gameServerId,proto3" json:"gameServerId,omitempty"`
	AssetId      int64  `protobuf:"varint,6,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Level        int64  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	DelFlag      int64  `protobuf:"varint,8,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	Remark       string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	Types        string `protobuf:"bytes,10,opt,name=types,proto3" json:"types,omitempty"`
}

func (x *AlarmThresholdManageCommon) Reset() {
	*x = AlarmThresholdManageCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmThresholdManageCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmThresholdManageCommon) ProtoMessage() {}

func (x *AlarmThresholdManageCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmThresholdManageCommon.ProtoReflect.Descriptor instead.
func (*AlarmThresholdManageCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{197}
}

func (x *AlarmThresholdManageCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlarmThresholdManageCommon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlarmThresholdManageCommon) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *AlarmThresholdManageCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AlarmThresholdManageCommon) GetGameServerId() int64 {
	if x != nil {
		return x.GameServerId
	}
	return 0
}

func (x *AlarmThresholdManageCommon) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AlarmThresholdManageCommon) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AlarmThresholdManageCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *AlarmThresholdManageCommon) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AlarmThresholdManageCommon) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

type ListAlarmThresholdManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current         int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize        int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectIds      string `protobuf:"bytes,3,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	Ips             string `protobuf:"bytes,4,opt,name=ips,proto3" json:"ips,omitempty"`
	GameServerAlias string `protobuf:"bytes,5,opt,name=gameServerAlias,proto3" json:"gameServerAlias,omitempty"`
	Types           string `protobuf:"bytes,6,opt,name=types,proto3" json:"types,omitempty"`
}

func (x *ListAlarmThresholdManageReq) Reset() {
	*x = ListAlarmThresholdManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlarmThresholdManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlarmThresholdManageReq) ProtoMessage() {}

func (x *ListAlarmThresholdManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlarmThresholdManageReq.ProtoReflect.Descriptor instead.
func (*ListAlarmThresholdManageReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{198}
}

func (x *ListAlarmThresholdManageReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListAlarmThresholdManageReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAlarmThresholdManageReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListAlarmThresholdManageReq) GetIps() string {
	if x != nil {
		return x.Ips
	}
	return ""
}

func (x *ListAlarmThresholdManageReq) GetGameServerAlias() string {
	if x != nil {
		return x.GameServerAlias
	}
	return ""
}

func (x *ListAlarmThresholdManageReq) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

type ListAlarmThresholdManageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListAlarmThresholdManageData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListAlarmThresholdManageResp) Reset() {
	*x = ListAlarmThresholdManageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlarmThresholdManageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlarmThresholdManageResp) ProtoMessage() {}

func (x *ListAlarmThresholdManageResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlarmThresholdManageResp.ProtoReflect.Descriptor instead.
func (*ListAlarmThresholdManageResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{199}
}

func (x *ListAlarmThresholdManageResp) GetRows() []*ListAlarmThresholdManageData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListAlarmThresholdManageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListAlarmThresholdManageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Config          string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	ProjectId       int64  `protobuf:"varint,4,opt,name=projectId,proto3" json:"projectId,omitempty"`
	GameServerId    int64  `protobuf:"varint,5,opt,name=gameServerId,proto3" json:"gameServerId,omitempty"`
	AssetId         int64  `protobuf:"varint,6,opt,name=assetId,proto3" json:"assetId,omitempty"`
	Level           int64  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	DelFlag         int64  `protobuf:"varint,8,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	Remark          string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	ProjectCn       string `protobuf:"bytes,10,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	Ips             string `protobuf:"bytes,11,opt,name=ips,proto3" json:"ips,omitempty"`
	GameServerAlias string `protobuf:"bytes,12,opt,name=gameServerAlias,proto3" json:"gameServerAlias,omitempty"`
	Types           string `protobuf:"bytes,13,opt,name=types,proto3" json:"types,omitempty"`
}

func (x *ListAlarmThresholdManageData) Reset() {
	*x = ListAlarmThresholdManageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlarmThresholdManageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlarmThresholdManageData) ProtoMessage() {}

func (x *ListAlarmThresholdManageData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlarmThresholdManageData.ProtoReflect.Descriptor instead.
func (*ListAlarmThresholdManageData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{200}
}

func (x *ListAlarmThresholdManageData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListAlarmThresholdManageData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListAlarmThresholdManageData) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ListAlarmThresholdManageData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAlarmThresholdManageData) GetGameServerId() int64 {
	if x != nil {
		return x.GameServerId
	}
	return 0
}

func (x *ListAlarmThresholdManageData) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *ListAlarmThresholdManageData) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ListAlarmThresholdManageData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListAlarmThresholdManageData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListAlarmThresholdManageData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListAlarmThresholdManageData) GetIps() string {
	if x != nil {
		return x.Ips
	}
	return ""
}

func (x *ListAlarmThresholdManageData) GetGameServerAlias() string {
	if x != nil {
		return x.GameServerAlias
	}
	return ""
}

func (x *ListAlarmThresholdManageData) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

//TasksScheduleQueue Start
type AddTasksScheduleQueueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One  *TasksScheduleQueueCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
	Maps string                    `protobuf:"bytes,2,opt,name=maps,proto3" json:"maps,omitempty"`
}

func (x *AddTasksScheduleQueueReq) Reset() {
	*x = AddTasksScheduleQueueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTasksScheduleQueueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksScheduleQueueReq) ProtoMessage() {}

func (x *AddTasksScheduleQueueReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksScheduleQueueReq.ProtoReflect.Descriptor instead.
func (*AddTasksScheduleQueueReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{201}
}

func (x *AddTasksScheduleQueueReq) GetOne() *TasksScheduleQueueCommon {
	if x != nil {
		return x.One
	}
	return nil
}

func (x *AddTasksScheduleQueueReq) GetMaps() string {
	if x != nil {
		return x.Maps
	}
	return ""
}

type TasksScheduleQueueCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *TasksScheduleQueueCommonResp) Reset() {
	*x = TasksScheduleQueueCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TasksScheduleQueueCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksScheduleQueueCommonResp) ProtoMessage() {}

func (x *TasksScheduleQueueCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksScheduleQueueCommonResp.ProtoReflect.Descriptor instead.
func (*TasksScheduleQueueCommonResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{202}
}

func (x *TasksScheduleQueueCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateTasksScheduleQueueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *TasksScheduleQueueCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateTasksScheduleQueueReq) Reset() {
	*x = UpdateTasksScheduleQueueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTasksScheduleQueueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTasksScheduleQueueReq) ProtoMessage() {}

func (x *UpdateTasksScheduleQueueReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTasksScheduleQueueReq.ProtoReflect.Descriptor instead.
func (*UpdateTasksScheduleQueueReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{203}
}

func (x *UpdateTasksScheduleQueueReq) GetOne() *TasksScheduleQueueCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteTasksScheduleQueueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TasksScheduleQueueId int64  `protobuf:"varint,1,opt,name=TasksScheduleQueueId,proto3" json:"TasksScheduleQueueId,omitempty"`
	Maps                 string `protobuf:"bytes,2,opt,name=maps,proto3" json:"maps,omitempty"`
}

func (x *DeleteTasksScheduleQueueReq) Reset() {
	*x = DeleteTasksScheduleQueueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTasksScheduleQueueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTasksScheduleQueueReq) ProtoMessage() {}

func (x *DeleteTasksScheduleQueueReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTasksScheduleQueueReq.ProtoReflect.Descriptor instead.
func (*DeleteTasksScheduleQueueReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{204}
}

func (x *DeleteTasksScheduleQueueReq) GetTasksScheduleQueueId() int64 {
	if x != nil {
		return x.TasksScheduleQueueId
	}
	return 0
}

func (x *DeleteTasksScheduleQueueReq) GetMaps() string {
	if x != nil {
		return x.Maps
	}
	return ""
}

type GetTasksScheduleQueueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TasksScheduleQueueId int64 `protobuf:"varint,1,opt,name=TasksScheduleQueueId,proto3" json:"TasksScheduleQueueId,omitempty"`
}

func (x *GetTasksScheduleQueueReq) Reset() {
	*x = GetTasksScheduleQueueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksScheduleQueueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksScheduleQueueReq) ProtoMessage() {}

func (x *GetTasksScheduleQueueReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksScheduleQueueReq.ProtoReflect.Descriptor instead.
func (*GetTasksScheduleQueueReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{205}
}

func (x *GetTasksScheduleQueueReq) GetTasksScheduleQueueId() int64 {
	if x != nil {
		return x.TasksScheduleQueueId
	}
	return 0
}

type TasksScheduleQueueCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScheduleTitle     string `protobuf:"bytes,2,opt,name=scheduleTitle,proto3" json:"scheduleTitle,omitempty"`
	ScheduleStartTime int64  `protobuf:"varint,3,opt,name=scheduleStartTime,proto3" json:"scheduleStartTime,omitempty"`
	ScheduleEndTime   int64  `protobuf:"varint,4,opt,name=scheduleEndTime,proto3" json:"scheduleEndTime,omitempty"`
	ScheduleStatus    string `protobuf:"bytes,5,opt,name=scheduleStatus,proto3" json:"scheduleStatus,omitempty"`
	ScheduleType      string `protobuf:"bytes,6,opt,name=scheduleType,proto3" json:"scheduleType,omitempty"`
	ScheduleRangeIds  string `protobuf:"bytes,7,opt,name=scheduleRangeIds,proto3" json:"scheduleRangeIds,omitempty"`
	SchedulePid       int64  `protobuf:"varint,8,opt,name=schedulePid,proto3" json:"schedulePid,omitempty"`
	ScheduleLogs      string `protobuf:"bytes,9,opt,name=scheduleLogs,proto3" json:"scheduleLogs,omitempty"`
	ScheduleRemark    string `protobuf:"bytes,10,opt,name=scheduleRemark,proto3" json:"scheduleRemark,omitempty"`
}

func (x *TasksScheduleQueueCommon) Reset() {
	*x = TasksScheduleQueueCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TasksScheduleQueueCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksScheduleQueueCommon) ProtoMessage() {}

func (x *TasksScheduleQueueCommon) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksScheduleQueueCommon.ProtoReflect.Descriptor instead.
func (*TasksScheduleQueueCommon) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{206}
}

func (x *TasksScheduleQueueCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TasksScheduleQueueCommon) GetScheduleTitle() string {
	if x != nil {
		return x.ScheduleTitle
	}
	return ""
}

func (x *TasksScheduleQueueCommon) GetScheduleStartTime() int64 {
	if x != nil {
		return x.ScheduleStartTime
	}
	return 0
}

func (x *TasksScheduleQueueCommon) GetScheduleEndTime() int64 {
	if x != nil {
		return x.ScheduleEndTime
	}
	return 0
}

func (x *TasksScheduleQueueCommon) GetScheduleStatus() string {
	if x != nil {
		return x.ScheduleStatus
	}
	return ""
}

func (x *TasksScheduleQueueCommon) GetScheduleType() string {
	if x != nil {
		return x.ScheduleType
	}
	return ""
}

func (x *TasksScheduleQueueCommon) GetScheduleRangeIds() string {
	if x != nil {
		return x.ScheduleRangeIds
	}
	return ""
}

func (x *TasksScheduleQueueCommon) GetSchedulePid() int64 {
	if x != nil {
		return x.SchedulePid
	}
	return 0
}

func (x *TasksScheduleQueueCommon) GetScheduleLogs() string {
	if x != nil {
		return x.ScheduleLogs
	}
	return ""
}

func (x *TasksScheduleQueueCommon) GetScheduleRemark() string {
	if x != nil {
		return x.ScheduleRemark
	}
	return ""
}

type ListTasksScheduleQueueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current        int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize       int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ScheduleStatus string `protobuf:"bytes,3,opt,name=scheduleStatus,proto3" json:"scheduleStatus,omitempty"`
	ScheduleType   string `protobuf:"bytes,4,opt,name=scheduleType,proto3" json:"scheduleType,omitempty"`
	ScheduleTitle  string `protobuf:"bytes,5,opt,name=scheduleTitle,proto3" json:"scheduleTitle,omitempty"`
	DateRange      string `protobuf:"bytes,6,opt,name=dateRange,proto3" json:"dateRange,omitempty"`
}

func (x *ListTasksScheduleQueueReq) Reset() {
	*x = ListTasksScheduleQueueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksScheduleQueueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksScheduleQueueReq) ProtoMessage() {}

func (x *ListTasksScheduleQueueReq) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksScheduleQueueReq.ProtoReflect.Descriptor instead.
func (*ListTasksScheduleQueueReq) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{207}
}

func (x *ListTasksScheduleQueueReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListTasksScheduleQueueReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTasksScheduleQueueReq) GetScheduleStatus() string {
	if x != nil {
		return x.ScheduleStatus
	}
	return ""
}

func (x *ListTasksScheduleQueueReq) GetScheduleType() string {
	if x != nil {
		return x.ScheduleType
	}
	return ""
}

func (x *ListTasksScheduleQueueReq) GetScheduleTitle() string {
	if x != nil {
		return x.ScheduleTitle
	}
	return ""
}

func (x *ListTasksScheduleQueueReq) GetDateRange() string {
	if x != nil {
		return x.DateRange
	}
	return ""
}

type ListTasksScheduleQueueResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListTasksScheduleQueueData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListTasksScheduleQueueResp) Reset() {
	*x = ListTasksScheduleQueueResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksScheduleQueueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksScheduleQueueResp) ProtoMessage() {}

func (x *ListTasksScheduleQueueResp) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksScheduleQueueResp.ProtoReflect.Descriptor instead.
func (*ListTasksScheduleQueueResp) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{208}
}

func (x *ListTasksScheduleQueueResp) GetRows() []*ListTasksScheduleQueueData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListTasksScheduleQueueResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListTasksScheduleQueueData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ScheduleTitle        string `protobuf:"bytes,2,opt,name=scheduleTitle,proto3" json:"scheduleTitle,omitempty"`
	ScheduleStartTime    int64  `protobuf:"varint,3,opt,name=scheduleStartTime,proto3" json:"scheduleStartTime,omitempty"`
	ScheduleEndTime      int64  `protobuf:"varint,4,opt,name=scheduleEndTime,proto3" json:"scheduleEndTime,omitempty"`
	ScheduleStatus       string `protobuf:"bytes,5,opt,name=scheduleStatus,proto3" json:"scheduleStatus,omitempty"`
	ScheduleType         string `protobuf:"bytes,6,opt,name=scheduleType,proto3" json:"scheduleType,omitempty"`
	ScheduleRangeIds     string `protobuf:"bytes,7,opt,name=scheduleRangeIds,proto3" json:"scheduleRangeIds,omitempty"`
	SchedulePid          int64  `protobuf:"varint,8,opt,name=schedulePid,proto3" json:"schedulePid,omitempty"`
	ScheduleLogs         string `protobuf:"bytes,9,opt,name=scheduleLogs,proto3" json:"scheduleLogs,omitempty"`
	ScheduleRemark       string `protobuf:"bytes,10,opt,name=scheduleRemark,proto3" json:"scheduleRemark,omitempty"`
	ScheduleTypeMaps     string `protobuf:"bytes,11,opt,name=scheduleTypeMaps,proto3" json:"scheduleTypeMaps,omitempty"`
	ScheduleCreateByName string `protobuf:"bytes,12,opt,name=scheduleCreateByName,proto3" json:"scheduleCreateByName,omitempty"`
}

func (x *ListTasksScheduleQueueData) Reset() {
	*x = ListTasksScheduleQueueData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yunwei_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTasksScheduleQueueData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksScheduleQueueData) ProtoMessage() {}

func (x *ListTasksScheduleQueueData) ProtoReflect() protoreflect.Message {
	mi := &file_yunwei_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksScheduleQueueData.ProtoReflect.Descriptor instead.
func (*ListTasksScheduleQueueData) Descriptor() ([]byte, []int) {
	return file_yunwei_proto_rawDescGZIP(), []int{209}
}

func (x *ListTasksScheduleQueueData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListTasksScheduleQueueData) GetScheduleTitle() string {
	if x != nil {
		return x.ScheduleTitle
	}
	return ""
}

func (x *ListTasksScheduleQueueData) GetScheduleStartTime() int64 {
	if x != nil {
		return x.ScheduleStartTime
	}
	return 0
}

func (x *ListTasksScheduleQueueData) GetScheduleEndTime() int64 {
	if x != nil {
		return x.ScheduleEndTime
	}
	return 0
}

func (x *ListTasksScheduleQueueData) GetScheduleStatus() string {
	if x != nil {
		return x.ScheduleStatus
	}
	return ""
}

func (x *ListTasksScheduleQueueData) GetScheduleType() string {
	if x != nil {
		return x.ScheduleType
	}
	return ""
}

func (x *ListTasksScheduleQueueData) GetScheduleRangeIds() string {
	if x != nil {
		return x.ScheduleRangeIds
	}
	return ""
}

func (x *ListTasksScheduleQueueData) GetSchedulePid() int64 {
	if x != nil {
		return x.SchedulePid
	}
	return 0
}

func (x *ListTasksScheduleQueueData) GetScheduleLogs() string {
	if x != nil {
		return x.ScheduleLogs
	}
	return ""
}

func (x *ListTasksScheduleQueueData) GetScheduleRemark() string {
	if x != nil {
		return x.ScheduleRemark
	}
	return ""
}

func (x *ListTasksScheduleQueueData) GetScheduleTypeMaps() string {
	if x != nil {
		return x.ScheduleTypeMaps
	}
	return ""
}

func (x *ListTasksScheduleQueueData) GetScheduleCreateByName() string {
	if x != nil {
		return x.ScheduleCreateByName
	}
	return ""
}

var File_yunwei_proto protoreflect.FileDescriptor

var file_yunwei_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x0b,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x40, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x2a, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x53, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0xf0, 0x02, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68,
	0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6e, 0x22, 0x53, 0x0a, 0x0d, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xec,
	0x0c, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x49, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x69, 0x65,
	0x77, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x43, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x69, 0x65, 0x77, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76,
	0x69, 0x65, 0x77, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x53, 0x73, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x53, 0x73, 0x68, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69,
	0x65, 0x77, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x16, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x49, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a,
	0x1b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12,
	0x40, 0x0a, 0x1b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6e, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43,
	0x6e, 0x12, 0x40, 0x0a, 0x1b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6e,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x45, 0x6e, 0x12, 0x4a, 0x0a, 0x20, 0x76, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x20, 0x76,
	0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x42, 0x0a, 0x1c, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x66, 0x66,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1c, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x43, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69,
	0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6e, 0x12,
	0x2c, 0x0a, 0x11, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x45, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69, 0x65, 0x77,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6e, 0x12, 0x36, 0x0a,
	0x16, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x76,
	0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69,
	0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x12,
	0x36, 0x0a, 0x16, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x16, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x76, 0x69, 0x65, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x76, 0x69, 0x65,
	0x77, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x76, 0x69, 0x65, 0x77, 0x41, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xce, 0x04,
	0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f,
	0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x68, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x73, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x73, 0x68, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x53, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x23,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x53, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x29, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x49, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x32, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x73, 0x52,
	0x03, 0x6f, 0x6e, 0x65, 0x22, 0x42, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x28,
	0x0a, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x3f, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf0,
	0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x66, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xfb, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x40, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x03, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x43, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x22, 0x33, 0x0a,
	0x11, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x22, 0xa8, 0x03, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x76,
	0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x76, 0x69, 0x65, 0x77, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x75, 0x74, 0x6f, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x69, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x76,
	0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x43, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x65,
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x69, 0x65, 0x77, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x76, 0x69, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x76, 0x69, 0x65, 0x77, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x9c, 0x02, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x86,
	0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xdc, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6e, 0x22, 0xe1, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x3d, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x12,
	0x46, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x93, 0x03, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x76,
	0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69,
	0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x45, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x12, 0x36, 0x0a, 0x16, 0x76, 0x69, 0x65,
	0x77, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x76, 0x69, 0x65, 0x77, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3a, 0x0a, 0x18, 0x76, 0x69, 0x65, 0x77, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x18, 0x76, 0x69, 0x65, 0x77, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xc5, 0x02,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x65,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x76,
	0x69, 0x65, 0x77, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x70, 0x22, 0xd2, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x45, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61,
	0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4a, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77,
	0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xad, 0x04, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x45, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x45, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x43, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x43, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x45, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a,
	0x0a, 0x10, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5b, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xbe, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64,
	0x22, 0x42, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x03, 0x6f, 0x6e, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x45, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x0f,
	0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x50, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x48, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5e, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc7, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x50, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x48, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a,
	0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e,
	0x65, 0x22, 0x2c, 0x0a, 0x16, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x4b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x27, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0xe8, 0x03, 0x0a, 0x12,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xa0, 0x03, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x50, 0x6c, 0x61, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x53, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x64, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xc0, 0x05, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x43, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x22,
	0x67, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x73, 0x49,
	0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x22, 0x40, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x65, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x73, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x19, 0x4d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64,
	0x73, 0x22, 0x70, 0x0a, 0x1a, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x52, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x82, 0x02, 0x0a, 0x1a, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x44, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x73, 0x65, 0x44, 0x69, 0x72, 0x22, 0x56, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x0d, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x29, 0x0a, 0x13, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x45, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x2f, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f,
	0x6e, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x18, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x3f, 0x0a, 0x19, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xf5, 0x02, 0x0a, 0x0f, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0x8d, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41,
	0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x5e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xb9, 0x03, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x22, 0x63, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x22, 0x3a, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x40, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x28, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x43, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x2e, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e,
	0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x8e, 0x03, 0x0a, 0x0e, 0x4f, 0x70, 0x65,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x88, 0x03, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69,
	0x74, 0x64, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x90, 0x04, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x64,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x1e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x65, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x1f, 0x4f, 0x70,
	0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e,
	0x67, 0x22, 0x4d, 0x0a, 0x1f, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x40, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x82, 0x02, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x76, 0x69, 0x65, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x22, 0x56, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xe1, 0x03, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20,
	0x0a, 0x0b, 0x56, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x56, 0x69, 0x65, 0x77, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x43, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x56, 0x69, 0x65,
	0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6e, 0x12, 0x2c,
	0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x56, 0x69, 0x65, 0x77, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x56, 0x69, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x20,
	0x0a, 0x0b, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70,
	0x12, 0x2a, 0x0a, 0x10, 0x56, 0x69, 0x65, 0x77, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x56, 0x69, 0x65, 0x77,
	0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x12,
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x43, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x12, 0x2e, 0x0a, 0x12,
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x56, 0x69, 0x65, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x56, 0x69, 0x65, 0x77, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xb3, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x58, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x58, 0x22, 0x60, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd2, 0x04, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f,
	0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x44, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x44, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x65, 0x77,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xa3, 0x02,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x92, 0x03, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x72, 0x72, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x72, 0x72,
	0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x24, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x73, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x41, 0x72, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x41, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x41, 0x72, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x65, 0x72, 0x72, 0x41, 0x72,
	0x72, 0x22, 0xcc, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x22, 0x56, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xdf, 0x06, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61,
	0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61,
	0x73, 0x6b, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x61, 0x73, 0x6b, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x43, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61,
	0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x22, 0x27, 0x0a, 0x13, 0x54, 0x61,
	0x73, 0x6b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x55, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x36, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x60, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x50, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x37, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xfb, 0x01, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x52, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x22, 0x5c, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x12, 0x4a, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x11, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x22, 0xaa, 0x04, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4a,
	0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x51, 0x4c, 0x43, 0x6d, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x51, 0x4c,
	0x43, 0x6d, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x51,
	0x4c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x53, 0x51, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x22, 0xad, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x53, 0x6f,
	0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d,
	0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x62, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xd7, 0x03, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x43, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x45, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x64,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xab, 0x01, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x53, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x5e, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x61, 0x69, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x61, 0x69, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9f, 0x03, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x22, 0x33, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x52, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f,
	0x67, 0x48, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x31, 0x0a, 0x17, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x03, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x2a, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x30, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f,
	0x6e, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x36, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65,
	0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x60, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf2, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x53, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a,
	0x1d, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x22, 0xa1, 0x02, 0x0a, 0x19, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x73, 0x68, 0x49, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x73, 0x68, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x73, 0x68,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x73, 0x68, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2f, 0x0a,
	0x19, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x3b,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x12, 0x4a, 0x0a, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x65,
	0x65, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x7a, 0x0a, 0x1e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f,
	0x75, 0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x75, 0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x60, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22,
	0x31, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x22, 0x32, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x7b, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x45, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x45, 0x6e, 0x22, 0x40, 0x0a, 0x24, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x29, 0x0a, 0x0b, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x0c, 0x48, 0x65,
	0x6c, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x48, 0x65,
	0x6c, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x4f, 0x66, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x58, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x4f, 0x66, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x39, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x6d, 0x4f, 0x66, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x4f, 0x66, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x45, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x45, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x22, 0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x81,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x45, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x50, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65,
	0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x03,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65,
	0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x03, 0x6f, 0x6e, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e,
	0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x53, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f,
	0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61,
	0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61,
	0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x9e, 0x03, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67,
	0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44,
	0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64,
	0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x6f, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4f,
	0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x6c, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3a, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xde, 0x03, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4f,
	0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x44, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x45, 0x6e, 0x22, 0x60, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x38, 0x0a, 0x22, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x63, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x03, 0x6f, 0x6e, 0x65, 0x22, 0x53, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x1a, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x1a, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x1e,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x77, 0x0a, 0x1f, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x73, 0x22, 0x7c, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xec, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73,
	0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x45, 0x6e,
	0x22, 0x58, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3a,
	0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x34, 0x0a, 0x1e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x5b, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x3a, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x57, 0x0a,
	0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x36,
	0x0a, 0x16, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x16, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a,
	0x19, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x19, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x92, 0x02, 0x0a, 0x1a,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x22, 0xc5, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xee,
	0x02, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x68, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x03, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x03, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x22, 0x32, 0x0a, 0x1c, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x57, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x03,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x65, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x22, 0x4e, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x22, 0x8e, 0x03,
	0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f,
	0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xe1,
	0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x70, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf0, 0x03, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xbb, 0x4a, 0x0a, 0x06, 0x59, 0x75, 0x6e, 0x57,
	0x65, 0x69, 0x12, 0x41, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x12, 0x19,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0b, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x53, 0x73,
	0x68, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x53, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x53, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b,
	0x0a, 0x14, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x10, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12,
	0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x13, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a,
	0x13, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5e, 0x0a, 0x14, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x5c, 0x0a, 0x11, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4d, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x64, 0x64, 0x12, 0x1c,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53,
	0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x16, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50,
	0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1d,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x65, 0x79,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x56, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x65, 0x79,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4e, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74,
	0x12, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x50, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x59, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a,
	0x12, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f,
	0x0a, 0x12, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x57, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x47,
	0x65, 0x74, 0x12, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a, 0x10, 0x4d, 0x61, 0x69, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x65, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x73, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72,
	0x6f, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x42, 0x79, 0x43,
	0x6c, 0x73, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x6b, 0x0a, 0x16, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a,
	0x0c, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x1d, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x56, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4e, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x12,
	0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x50, 0x0a, 0x0d, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x7b, 0x0a, 0x12, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68,
	0x0a, 0x15, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x27, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e,
	0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x47, 0x65, 0x74,
	0x12, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d,
	0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7a, 0x0a,
	0x1b, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f,
	0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x65,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x19, 0x4f, 0x70, 0x65,
	0x6e, 0x70, 0x6c, 0x61, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x44, 0x0a, 0x09, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x08, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x41, 0x64, 0x64, 0x12, 0x19, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4a, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0b,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0f, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x10,
	0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x43, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x1a, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x10, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x74, 0x4c, 0x6f,
	0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x6f,
	0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5c, 0x0a, 0x11, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x4c,
	0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a,
	0x10, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x12, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x11, 0x54, 0x61, 0x73,
	0x6b, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x22,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4a,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d, 0x57, 0x61, 0x69, 0x74, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x69, 0x74,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x57, 0x61, 0x69,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x61, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x62, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67,
	0x48, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f,
	0x67, 0x48, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x6f, 0x67, 0x48, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a,
	0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1e,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x21, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x68, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x12, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x16, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x70, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x12, 0x2a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x18, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x29, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x2a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x89, 0x01, 0x0a,
	0x20, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x31, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x89, 0x01, 0x0a, 0x20, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x32, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x19, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x48, 0x65, 0x6c, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x6d, 0x4f, 0x66, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x6d, 0x4f, 0x66, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x4f, 0x66,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a,
	0x13, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x12, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67,
	0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x79, 0x75, 0x6e,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70,
	0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e,
	0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67,
	0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6b, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63,
	0x0a, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x47, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e,
	0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x65, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67,
	0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61,
	0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7d, 0x0a, 0x1b, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x2c, 0x2e, 0x79, 0x75, 0x6e, 0x77,
	0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x83, 0x01, 0x0a, 0x1e, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e,
	0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x83, 0x01, 0x0a, 0x1e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x2f, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7b, 0x0a, 0x1b, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x7d, 0x0a, 0x1c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x2e, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x71, 0x0a, 0x17, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x12, 0x28, 0x2e, 0x79,
	0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x77, 0x0a, 0x1a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2b, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x77, 0x0a,
	0x1a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x17, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x74, 0x12, 0x28, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x71, 0x0a, 0x18, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x15, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x41, 0x64, 0x64, 0x12, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x18, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x2a, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a,
	0x15, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6b, 0x0a, 0x16, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x27, 0x2e, 0x79, 0x75, 0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x79, 0x75,
	0x6e, 0x77, 0x65, 0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x79, 0x75, 0x6e, 0x77, 0x65,
	0x69, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yunwei_proto_rawDescOnce sync.Once
	file_yunwei_proto_rawDescData = file_yunwei_proto_rawDesc
)

func file_yunwei_proto_rawDescGZIP() []byte {
	file_yunwei_proto_rawDescOnce.Do(func() {
		file_yunwei_proto_rawDescData = protoimpl.X.CompressGZIP(file_yunwei_proto_rawDescData)
	})
	return file_yunwei_proto_rawDescData
}

var file_yunwei_proto_msgTypes = make([]protoimpl.MessageInfo, 210)
var file_yunwei_proto_goTypes = []interface{}{
	(*AssetAddReq)(nil),                                // 0: yunweiclient.AssetAddReq
	(*AssetAddResp)(nil),                               // 1: yunweiclient.AssetAddResp
	(*AssetUpdateReq)(nil),                             // 2: yunweiclient.AssetUpdateReq
	(*AssetUpdateResp)(nil),                            // 3: yunweiclient.AssetUpdateResp
	(*AssetDeleteReq)(nil),                             // 4: yunweiclient.AssetDeleteReq
	(*AssetDeleteResp)(nil),                            // 5: yunweiclient.AssetDeleteResp
	(*AssetRecycleDeleteReq)(nil),                      // 6: yunweiclient.AssetRecycleDeleteReq
	(*AssetRecycleDeleteResp)(nil),                     // 7: yunweiclient.AssetRecycleDeleteResp
	(*AssetListReq)(nil),                               // 8: yunweiclient.AssetListReq
	(*AssetListResp)(nil),                              // 9: yunweiclient.AssetListResp
	(*ViewAssets)(nil),                                 // 10: yunweiclient.ViewAssets
	(*AssetDatas)(nil),                                 // 11: yunweiclient.AssetDatas
	(*GetWebSshReq)(nil),                               // 12: yunweiclient.GetWebSshReq
	(*GetWebSshResp)(nil),                              // 13: yunweiclient.GetWebSshResp
	(*BatchDistributeReq)(nil),                         // 14: yunweiclient.BatchDistributeReq
	(*BatchDistributeResp)(nil),                        // 15: yunweiclient.BatchDistributeResp
	(*AddFeatureServerReq)(nil),                        // 16: yunweiclient.AddFeatureServerReq
	(*FeatureServerCommonResp)(nil),                    // 17: yunweiclient.FeatureServerCommonResp
	(*UpdateFeatureServerReq)(nil),                     // 18: yunweiclient.UpdateFeatureServerReq
	(*DeleteFeatureServerReq)(nil),                     // 19: yunweiclient.DeleteFeatureServerReq
	(*FeatureServerDatas)(nil),                         // 20: yunweiclient.FeatureServerDatas
	(*GetFeatureServerReq)(nil),                        // 21: yunweiclient.GetFeatureServerReq
	(*ListFeatureServerReq)(nil),                       // 22: yunweiclient.ListFeatureServerReq
	(*ListFeatureServerResp)(nil),                      // 23: yunweiclient.ListFeatureServerResp
	(*ListFeatureServerData)(nil),                      // 24: yunweiclient.ListFeatureServerData
	(*AddPlatformReq)(nil),                             // 25: yunweiclient.AddPlatformReq
	(*PlatformCommonResp)(nil),                         // 26: yunweiclient.PlatformCommonResp
	(*UpdatePlatformReq)(nil),                          // 27: yunweiclient.UpdatePlatformReq
	(*DeletePlatformReq)(nil),                          // 28: yunweiclient.DeletePlatformReq
	(*DetailPlatformReq)(nil),                          // 29: yunweiclient.DetailPlatformReq
	(*GetPlatformReq)(nil),                             // 30: yunweiclient.GetPlatformReq
	(*DetailPlatformResp)(nil),                         // 31: yunweiclient.DetailPlatformResp
	(*PlatformCommon)(nil),                             // 32: yunweiclient.PlatformCommon
	(*ListPlatformReq)(nil),                            // 33: yunweiclient.ListPlatformReq
	(*ListPlatformResp)(nil),                           // 34: yunweiclient.ListPlatformResp
	(*ListPlatformData)(nil),                           // 35: yunweiclient.ListPlatformData
	(*ListClusterReq)(nil),                             // 36: yunweiclient.ListClusterReq
	(*ListClusterResp)(nil),                            // 37: yunweiclient.ListClusterResp
	(*ListClusterData)(nil),                            // 38: yunweiclient.ListClusterData
	(*ListAssetInfoData)(nil),                          // 39: yunweiclient.ListAssetInfoData
	(*ListPlatformInfoData)(nil),                       // 40: yunweiclient.ListPlatformInfoData
	(*ListLabelPlatformData)(nil),                      // 41: yunweiclient.ListLabelPlatformData
	(*GetClusterByPlatformReq)(nil),                    // 42: yunweiclient.GetClusterByPlatformReq
	(*GetClusterByPlatformResp)(nil),                   // 43: yunweiclient.GetClusterByPlatformResp
	(*GetClusterByPlatformData)(nil),                   // 44: yunweiclient.GetClusterByPlatformData
	(*AddKeyManageReq)(nil),                            // 45: yunweiclient.AddKeyManageReq
	(*KeyManageCommonResp)(nil),                        // 46: yunweiclient.KeyManageCommonResp
	(*UpdateKeyManageReq)(nil),                         // 47: yunweiclient.UpdateKeyManageReq
	(*DeleteKeyManageReq)(nil),                         // 48: yunweiclient.DeleteKeyManageReq
	(*GetKeyManageReq)(nil),                            // 49: yunweiclient.GetKeyManageReq
	(*KeyManageCommon)(nil),                            // 50: yunweiclient.KeyManageCommon
	(*ListKeyManageReq)(nil),                           // 51: yunweiclient.ListKeyManageReq
	(*ListKeyManageResp)(nil),                          // 52: yunweiclient.ListKeyManageResp
	(*ListKeyManageData)(nil),                          // 53: yunweiclient.ListKeyManageData
	(*AddMaintainPlanReq)(nil),                         // 54: yunweiclient.AddMaintainPlanReq
	(*MaintainPlanCommonResp)(nil),                     // 55: yunweiclient.MaintainPlanCommonResp
	(*UpdateMaintainPlanReq)(nil),                      // 56: yunweiclient.UpdateMaintainPlanReq
	(*DeleteMaintainPlanReq)(nil),                      // 57: yunweiclient.DeleteMaintainPlanReq
	(*GetMaintainPlanReq)(nil),                         // 58: yunweiclient.GetMaintainPlanReq
	(*MaintainPlanCommon)(nil),                         // 59: yunweiclient.MaintainPlanCommon
	(*ListMaintainPlanReq)(nil),                        // 60: yunweiclient.ListMaintainPlanReq
	(*SortFiledData)(nil),                              // 61: yunweiclient.SortFiledData
	(*ListMaintainPlanResp)(nil),                       // 62: yunweiclient.ListMaintainPlanResp
	(*ListMaintainPlanData)(nil),                       // 63: yunweiclient.ListMaintainPlanData
	(*GetMaintainPlanListTreeByClsIdAndProIdReq)(nil),  // 64: yunweiclient.GetMaintainPlanListTreeByClsIdAndProIdReq
	(*GetMaintainPlanListTreeByClsIdAndProIdResp)(nil), // 65: yunweiclient.GetMaintainPlanListTreeByClsIdAndProIdResp
	(*MaintainGetClusterInfoReq)(nil),                  // 66: yunweiclient.MaintainGetClusterInfoReq
	(*MaintainGetClusterInfoResp)(nil),                 // 67: yunweiclient.MaintainGetClusterInfoResp
	(*MaintainGetClusterInfoData)(nil),                 // 68: yunweiclient.MaintainGetClusterInfoData
	(*AddMergePlanReq)(nil),                            // 69: yunweiclient.AddMergePlanReq
	(*MergePlanCommonResp)(nil),                        // 70: yunweiclient.MergePlanCommonResp
	(*UpdateMergePlanReq)(nil),                         // 71: yunweiclient.UpdateMergePlanReq
	(*DeleteMergePlanReq)(nil),                         // 72: yunweiclient.DeleteMergePlanReq
	(*GetMergePlanReq)(nil),                            // 73: yunweiclient.GetMergePlanReq
	(*MergeCheckServerRangeReq)(nil),                   // 74: yunweiclient.MergeCheckServerRangeReq
	(*MergeCheckServerRangeResp)(nil),                  // 75: yunweiclient.MergeCheckServerRangeResp
	(*MergePlanCommon)(nil),                            // 76: yunweiclient.MergePlanCommon
	(*ListMergePlanReq)(nil),                           // 77: yunweiclient.ListMergePlanReq
	(*ListMergePlanResp)(nil),                          // 78: yunweiclient.ListMergePlanResp
	(*ListMergePlanData)(nil),                          // 79: yunweiclient.ListMergePlanData
	(*GetMergeListTreeByPlatIdAndProIdReq)(nil),        // 80: yunweiclient.GetMergeListTreeByPlatIdAndProIdReq
	(*GetMergeListTreeByPlatIdAndProIdResp)(nil),       // 81: yunweiclient.GetMergeListTreeByPlatIdAndProIdResp
	(*AddOpenPlanReq)(nil),                             // 82: yunweiclient.AddOpenPlanReq
	(*OpenPlanCommonResp)(nil),                         // 83: yunweiclient.OpenPlanCommonResp
	(*UpdateOpenPlanReq)(nil),                          // 84: yunweiclient.UpdateOpenPlanReq
	(*DeleteOpenPlanReq)(nil),                          // 85: yunweiclient.DeleteOpenPlanReq
	(*GetOpenPlanReq)(nil),                             // 86: yunweiclient.GetOpenPlanReq
	(*OpenPlanCommon)(nil),                             // 87: yunweiclient.OpenPlanCommon
	(*ListOpenPlanReq)(nil),                            // 88: yunweiclient.ListOpenPlanReq
	(*ListOpenPlanResp)(nil),                           // 89: yunweiclient.ListOpenPlanResp
	(*ListOpenPlanData)(nil),                           // 90: yunweiclient.ListOpenPlanData
	(*OpenPlanBatchModifyOpenTimeReq)(nil),             // 91: yunweiclient.OpenPlanBatchModifyOpenTimeReq
	(*OpenPlanBatchModifyOpenTimeResp)(nil),            // 92: yunweiclient.OpenPlanBatchModifyOpenTimeResp
	(*OpenPlanBatchModifyOpenTimeData)(nil),            // 93: yunweiclient.OpenPlanBatchModifyOpenTimeData
	(*BatchUpdateStatusReq)(nil),                       // 94: yunweiclient.BatchUpdateStatusReq
	(*BatchUpdateStatusResp)(nil),                      // 95: yunweiclient.BatchUpdateStatusResp
	(*ListHostsReq)(nil),                               // 96: yunweiclient.ListHostsReq
	(*ListHostsResp)(nil),                              // 97: yunweiclient.ListHostsResp
	(*ListHostsData)(nil),                              // 98: yunweiclient.ListHostsData
	(*ListGameServerReq)(nil),                          // 99: yunweiclient.ListGameServerReq
	(*ListGameServerResp)(nil),                         // 100: yunweiclient.ListGameServerResp
	(*ListGameServerData)(nil),                         // 101: yunweiclient.ListGameServerData
	(*AddTasksReq)(nil),                                // 102: yunweiclient.AddTasksReq
	(*TasksCommonResp)(nil),                            // 103: yunweiclient.TasksCommonResp
	(*UpdateTasksReq)(nil),                             // 104: yunweiclient.UpdateTasksReq
	(*DeleteTasksReq)(nil),                             // 105: yunweiclient.DeleteTasksReq
	(*GetTasksReq)(nil),                                // 106: yunweiclient.GetTasksReq
	(*StartTasksReq)(nil),                              // 107: yunweiclient.StartTasksReq
	(*StartTasksResp)(nil),                             // 108: yunweiclient.StartTasksResp
	(*StopTasksReq)(nil),                               // 109: yunweiclient.StopTasksReq
	(*StopTasksResp)(nil),                              // 110: yunweiclient.StopTasksResp
	(*GetTasksResp)(nil),                               // 111: yunweiclient.GetTasksResp
	(*ListTasksReq)(nil),                               // 112: yunweiclient.ListTasksReq
	(*ListTasksResp)(nil),                              // 113: yunweiclient.ListTasksResp
	(*ListTasksData)(nil),                              // 114: yunweiclient.ListTasksData
	(*TaskGetOperationReq)(nil),                        // 115: yunweiclient.TaskGetOperationReq
	(*TaskGetOperationResp)(nil),                       // 116: yunweiclient.TaskGetOperationResp
	(*TaskGetOperationData)(nil),                       // 117: yunweiclient.TaskGetOperationData
	(*GetHotLogHistoryReq)(nil),                        // 118: yunweiclient.GetHotLogHistoryReq
	(*ListHotLogHistoryReq)(nil),                       // 119: yunweiclient.ListHotLogHistoryReq
	(*AddHotLogHistoryReq)(nil),                        // 120: yunweiclient.AddHotLogHistoryReq
	(*AddHotLogHistoryResp)(nil),                       // 121: yunweiclient.AddHotLogHistoryResp
	(*ListHotLogHistoryResp)(nil),                      // 122: yunweiclient.ListHotLogHistoryResp
	(*ListHotLogHistoryData)(nil),                      // 123: yunweiclient.ListHotLogHistoryData
	(*TaskGetFormatJsonReq)(nil),                       // 124: yunweiclient.TaskGetFormatJsonReq
	(*TaskGetFormatJsonResp)(nil),                      // 125: yunweiclient.TaskGetFormatJsonResp
	(*OperationListM)(nil),                             // 126: yunweiclient.OperationListM
	(*TaskCommonJson)(nil),                             // 127: yunweiclient.TaskCommonJson
	(*ListWaitInstallReq)(nil),                         // 128: yunweiclient.ListWaitInstallReq
	(*ListWaitInstallResp)(nil),                        // 129: yunweiclient.ListWaitInstallResp
	(*ListWaitInstallData)(nil),                        // 130: yunweiclient.ListWaitInstallData
	(*ListWaitMergeReq)(nil),                           // 131: yunweiclient.ListWaitMergeReq
	(*ListWaitMergeResp)(nil),                          // 132: yunweiclient.ListWaitMergeResp
	(*ListWaitMergeData)(nil),                          // 133: yunweiclient.ListWaitMergeData
	(*ListInstallLogListReq)(nil),                      // 134: yunweiclient.ListInstallLogListReq
	(*ListInstallLogListResp)(nil),                     // 135: yunweiclient.ListInstallLogListResp
	(*ListInstallLogListData)(nil),                     // 136: yunweiclient.ListInstallLogListData
	(*ListTaskLogHistroyReq)(nil),                      // 137: yunweiclient.ListTaskLogHistroyReq
	(*ListTaskLogHistroyResp)(nil),                     // 138: yunweiclient.ListTaskLogHistroyResp
	(*DetailTaskLogHistroyReq)(nil),                    // 139: yunweiclient.DetailTaskLogHistroyReq
	(*DetailTaskLogHistroyResp)(nil),                   // 140: yunweiclient.DetailTaskLogHistroyResp
	(*AddConfigFileReq)(nil),                           // 141: yunweiclient.AddConfigFileReq
	(*ConfigFileCommonResp)(nil),                       // 142: yunweiclient.ConfigFileCommonResp
	(*UpdateConfigFileReq)(nil),                        // 143: yunweiclient.UpdateConfigFileReq
	(*DeleteConfigFileReq)(nil),                        // 144: yunweiclient.DeleteConfigFileReq
	(*GetConfigFileReq)(nil),                           // 145: yunweiclient.GetConfigFileReq
	(*ConfigFileCommon)(nil),                           // 146: yunweiclient.ConfigFileCommon
	(*ListConfigFileReq)(nil),                          // 147: yunweiclient.ListConfigFileReq
	(*ListConfigFileResp)(nil),                         // 148: yunweiclient.ListConfigFileResp
	(*ListConfigFileData)(nil),                         // 149: yunweiclient.ListConfigFileData
	(*AddConfigFileDeliveryReq)(nil),                   // 150: yunweiclient.AddConfigFileDeliveryReq
	(*AddConfigFileDeliveryDataList)(nil),              // 151: yunweiclient.AddConfigFileDeliveryDataList
	(*AddConfigFileDeliveryData)(nil),                  // 152: yunweiclient.AddConfigFileDeliveryData
	(*AddConfigFileDeliveryResp)(nil),                  // 153: yunweiclient.AddConfigFileDeliveryResp
	(*ListConfigFileDeliveryReq)(nil),                  // 154: yunweiclient.ListConfigFileDeliveryReq
	(*ListConfigFileDeliveryResp)(nil),                 // 155: yunweiclient.ListConfigFileDeliveryResp
	(*ListConfigFileDeliveryDataTree)(nil),             // 156: yunweiclient.ListConfigFileDeliveryDataTree
	(*GetConfigFileDeliveryTreeReq)(nil),               // 157: yunweiclient.GetConfigFileDeliveryTreeReq
	(*GetConfigFileDeliveryTreeResp)(nil),              // 158: yunweiclient.GetConfigFileDeliveryTreeResp
	(*GetConfigFileDeliveryLogReq)(nil),                // 159: yunweiclient.GetConfigFileDeliveryLogReq
	(*GetConfigFileDeliveryLogResp)(nil),               // 160: yunweiclient.GetConfigFileDeliveryLogResp
	(*ConfigFileDeliveryGetFileContentReq)(nil),        // 161: yunweiclient.ConfigFileDeliveryGetFileContentReq
	(*ConfigFileDeliveryGetFileContentResp)(nil),       // 162: yunweiclient.ConfigFileDeliveryGetFileContentResp
	(*UpdateConfigFileDeliveryTemplateReq)(nil),        // 163: yunweiclient.UpdateConfigFileDeliveryTemplateReq
	(*UpdateConfigFileDeliveryTemplateResp)(nil),       // 164: yunweiclient.UpdateConfigFileDeliveryTemplateResp
	(*HelpListReq)(nil),                                // 165: yunweiclient.HelpListReq
	(*HelpListResp)(nil),                               // 166: yunweiclient.HelpListResp
	(*HelpListData)(nil),                               // 167: yunweiclient.HelpListData
	(*GetSumOfCurrentInfoListReq)(nil),                 // 168: yunweiclient.GetSumOfCurrentInfoListReq
	(*GetSumOfCurrentInfoListResp)(nil),                // 169: yunweiclient.GetSumOfCurrentInfoListResp
	(*GetSumOfCurrentInfoData)(nil),                    // 170: yunweiclient.GetSumOfCurrentInfoData
	(*GetTrendChartListReq)(nil),                       // 171: yunweiclient.GetTrendChartListReq
	(*GetTrendChartListResp)(nil),                      // 172: yunweiclient.GetTrendChartListResp
	(*GetTrendChartData)(nil),                          // 173: yunweiclient.GetTrendChartData
	(*AddAutoOpengameRuleReq)(nil),                     // 174: yunweiclient.AddAutoOpengameRuleReq
	(*AutoOpengameRuleCommonResp)(nil),                 // 175: yunweiclient.AutoOpengameRuleCommonResp
	(*UpdateAutoOpengameRuleReq)(nil),                  // 176: yunweiclient.UpdateAutoOpengameRuleReq
	(*DeleteAutoOpengameRuleReq)(nil),                  // 177: yunweiclient.DeleteAutoOpengameRuleReq
	(*GetAutoOpengameRuleReq)(nil),                     // 178: yunweiclient.GetAutoOpengameRuleReq
	(*AutoOpengameRuleCommon)(nil),                     // 179: yunweiclient.AutoOpengameRuleCommon
	(*ListAutoOpengameRuleReq)(nil),                    // 180: yunweiclient.ListAutoOpengameRuleReq
	(*ListAutoOpengameRuleResp)(nil),                   // 181: yunweiclient.ListAutoOpengameRuleResp
	(*ListAutoOpengameRuleData)(nil),                   // 182: yunweiclient.ListAutoOpengameRuleData
	(*AddSwitchEntranceGameserverReq)(nil),             // 183: yunweiclient.AddSwitchEntranceGameserverReq
	(*SwitchEntranceGameserverCommonResp)(nil),         // 184: yunweiclient.SwitchEntranceGameserverCommonResp
	(*UpdateSwitchEntranceGameserverReq)(nil),          // 185: yunweiclient.UpdateSwitchEntranceGameserverReq
	(*DeleteSwitchEntranceGameserverReq)(nil),          // 186: yunweiclient.DeleteSwitchEntranceGameserverReq
	(*GetSwitchEntranceGameserverReq)(nil),             // 187: yunweiclient.GetSwitchEntranceGameserverReq
	(*SwitchEntranceGameserverCommon)(nil),             // 188: yunweiclient.SwitchEntranceGameserverCommon
	(*ListSwitchEntranceGameserverReq)(nil),            // 189: yunweiclient.ListSwitchEntranceGameserverReq
	(*ListSwitchEntranceGameserverResp)(nil),           // 190: yunweiclient.ListSwitchEntranceGameserverResp
	(*ListSwitchEntranceGameserverData)(nil),           // 191: yunweiclient.ListSwitchEntranceGameserverData
	(*AddAlarmThresholdManageReq)(nil),                 // 192: yunweiclient.AddAlarmThresholdManageReq
	(*AlarmThresholdManageCommonResp)(nil),             // 193: yunweiclient.AlarmThresholdManageCommonResp
	(*UpdateAlarmThresholdManageReq)(nil),              // 194: yunweiclient.UpdateAlarmThresholdManageReq
	(*DeleteAlarmThresholdManageReq)(nil),              // 195: yunweiclient.DeleteAlarmThresholdManageReq
	(*GetAlarmThresholdManageReq)(nil),                 // 196: yunweiclient.GetAlarmThresholdManageReq
	(*AlarmThresholdManageCommon)(nil),                 // 197: yunweiclient.AlarmThresholdManageCommon
	(*ListAlarmThresholdManageReq)(nil),                // 198: yunweiclient.ListAlarmThresholdManageReq
	(*ListAlarmThresholdManageResp)(nil),               // 199: yunweiclient.ListAlarmThresholdManageResp
	(*ListAlarmThresholdManageData)(nil),               // 200: yunweiclient.ListAlarmThresholdManageData
	(*AddTasksScheduleQueueReq)(nil),                   // 201: yunweiclient.AddTasksScheduleQueueReq
	(*TasksScheduleQueueCommonResp)(nil),               // 202: yunweiclient.TasksScheduleQueueCommonResp
	(*UpdateTasksScheduleQueueReq)(nil),                // 203: yunweiclient.UpdateTasksScheduleQueueReq
	(*DeleteTasksScheduleQueueReq)(nil),                // 204: yunweiclient.DeleteTasksScheduleQueueReq
	(*GetTasksScheduleQueueReq)(nil),                   // 205: yunweiclient.GetTasksScheduleQueueReq
	(*TasksScheduleQueueCommon)(nil),                   // 206: yunweiclient.TasksScheduleQueueCommon
	(*ListTasksScheduleQueueReq)(nil),                  // 207: yunweiclient.ListTasksScheduleQueueReq
	(*ListTasksScheduleQueueResp)(nil),                 // 208: yunweiclient.ListTasksScheduleQueueResp
	(*ListTasksScheduleQueueData)(nil),                 // 209: yunweiclient.ListTasksScheduleQueueData
}
var file_yunwei_proto_depIdxs = []int32{
	11,  // 0: yunweiclient.AssetAddReq.assetdata:type_name -> yunweiclient.AssetDatas
	11,  // 1: yunweiclient.AssetUpdateReq.asset:type_name -> yunweiclient.AssetDatas
	10,  // 2: yunweiclient.AssetListResp.list:type_name -> yunweiclient.ViewAssets
	20,  // 3: yunweiclient.AddFeatureServerReq.one:type_name -> yunweiclient.FeatureServerDatas
	20,  // 4: yunweiclient.UpdateFeatureServerReq.one:type_name -> yunweiclient.FeatureServerDatas
	24,  // 5: yunweiclient.ListFeatureServerResp.rows:type_name -> yunweiclient.ListFeatureServerData
	32,  // 6: yunweiclient.AddPlatformReq.one:type_name -> yunweiclient.PlatformCommon
	32,  // 7: yunweiclient.UpdatePlatformReq.one:type_name -> yunweiclient.PlatformCommon
	35,  // 8: yunweiclient.ListPlatformResp.rows:type_name -> yunweiclient.ListPlatformData
	38,  // 9: yunweiclient.ListClusterResp.rows:type_name -> yunweiclient.ListClusterData
	39,  // 10: yunweiclient.ListClusterResp.assetRows:type_name -> yunweiclient.ListAssetInfoData
	40,  // 11: yunweiclient.ListClusterResp.platformRows:type_name -> yunweiclient.ListPlatformInfoData
	44,  // 12: yunweiclient.GetClusterByPlatformResp.data:type_name -> yunweiclient.GetClusterByPlatformData
	50,  // 13: yunweiclient.AddKeyManageReq.one:type_name -> yunweiclient.KeyManageCommon
	50,  // 14: yunweiclient.UpdateKeyManageReq.one:type_name -> yunweiclient.KeyManageCommon
	53,  // 15: yunweiclient.ListKeyManageResp.rows:type_name -> yunweiclient.ListKeyManageData
	59,  // 16: yunweiclient.AddMaintainPlanReq.one:type_name -> yunweiclient.MaintainPlanCommon
	59,  // 17: yunweiclient.UpdateMaintainPlanReq.one:type_name -> yunweiclient.MaintainPlanCommon
	61,  // 18: yunweiclient.ListMaintainPlanReq.SortFiledList:type_name -> yunweiclient.SortFiledData
	63,  // 19: yunweiclient.ListMaintainPlanResp.rows:type_name -> yunweiclient.ListMaintainPlanData
	68,  // 20: yunweiclient.MaintainGetClusterInfoResp.ClusterInfoData:type_name -> yunweiclient.MaintainGetClusterInfoData
	76,  // 21: yunweiclient.AddMergePlanReq.mergePlanData:type_name -> yunweiclient.MergePlanCommon
	76,  // 22: yunweiclient.UpdateMergePlanReq.one:type_name -> yunweiclient.MergePlanCommon
	76,  // 23: yunweiclient.MergeCheckServerRangeReq.one:type_name -> yunweiclient.MergePlanCommon
	61,  // 24: yunweiclient.ListMergePlanReq.SortFiledList:type_name -> yunweiclient.SortFiledData
	79,  // 25: yunweiclient.ListMergePlanResp.rows:type_name -> yunweiclient.ListMergePlanData
	87,  // 26: yunweiclient.AddOpenPlanReq.openPlatData:type_name -> yunweiclient.OpenPlanCommon
	87,  // 27: yunweiclient.UpdateOpenPlanReq.one:type_name -> yunweiclient.OpenPlanCommon
	61,  // 28: yunweiclient.ListOpenPlanReq.SortFiledList:type_name -> yunweiclient.SortFiledData
	90,  // 29: yunweiclient.ListOpenPlanResp.rows:type_name -> yunweiclient.ListOpenPlanData
	93,  // 30: yunweiclient.OpenPlanBatchModifyOpenTimeReq.data:type_name -> yunweiclient.OpenPlanBatchModifyOpenTimeData
	98,  // 31: yunweiclient.ListHostsResp.rows:type_name -> yunweiclient.ListHostsData
	101, // 32: yunweiclient.ListGameServerResp.rows:type_name -> yunweiclient.ListGameServerData
	114, // 33: yunweiclient.GetTasksResp.rows:type_name -> yunweiclient.ListTasksData
	114, // 34: yunweiclient.ListTasksResp.rows:type_name -> yunweiclient.ListTasksData
	117, // 35: yunweiclient.TaskGetOperationResp.list:type_name -> yunweiclient.TaskGetOperationData
	123, // 36: yunweiclient.AddHotLogHistoryReq.data:type_name -> yunweiclient.ListHotLogHistoryData
	123, // 37: yunweiclient.ListHotLogHistoryResp.rows:type_name -> yunweiclient.ListHotLogHistoryData
	126, // 38: yunweiclient.TaskGetFormatJsonResp.OperationListM:type_name -> yunweiclient.OperationListM
	127, // 39: yunweiclient.OperationListM.OperationListForm:type_name -> yunweiclient.TaskCommonJson
	61,  // 40: yunweiclient.ListWaitInstallReq.SortFiledList:type_name -> yunweiclient.SortFiledData
	130, // 41: yunweiclient.ListWaitInstallResp.rows:type_name -> yunweiclient.ListWaitInstallData
	61,  // 42: yunweiclient.ListWaitMergeReq.SortFiledList:type_name -> yunweiclient.SortFiledData
	133, // 43: yunweiclient.ListWaitMergeResp.rows:type_name -> yunweiclient.ListWaitMergeData
	136, // 44: yunweiclient.ListInstallLogListResp.data:type_name -> yunweiclient.ListInstallLogListData
	146, // 45: yunweiclient.AddConfigFileReq.one:type_name -> yunweiclient.ConfigFileCommon
	146, // 46: yunweiclient.UpdateConfigFileReq.one:type_name -> yunweiclient.ConfigFileCommon
	149, // 47: yunweiclient.ListConfigFileResp.rows:type_name -> yunweiclient.ListConfigFileData
	151, // 48: yunweiclient.AddConfigFileDeliveryReq.configFileData:type_name -> yunweiclient.AddConfigFileDeliveryDataList
	152, // 49: yunweiclient.AddConfigFileDeliveryDataList.list:type_name -> yunweiclient.AddConfigFileDeliveryData
	149, // 50: yunweiclient.ListConfigFileDeliveryResp.rows:type_name -> yunweiclient.ListConfigFileData
	156, // 51: yunweiclient.ListConfigFileDeliveryResp.mergeRows:type_name -> yunweiclient.ListConfigFileDeliveryDataTree
	167, // 52: yunweiclient.HelpListResp.rows:type_name -> yunweiclient.HelpListData
	170, // 53: yunweiclient.GetSumOfCurrentInfoListResp.rows:type_name -> yunweiclient.GetSumOfCurrentInfoData
	173, // 54: yunweiclient.GetTrendChartListResp.rows:type_name -> yunweiclient.GetTrendChartData
	179, // 55: yunweiclient.AddAutoOpengameRuleReq.one:type_name -> yunweiclient.AutoOpengameRuleCommon
	179, // 56: yunweiclient.UpdateAutoOpengameRuleReq.one:type_name -> yunweiclient.AutoOpengameRuleCommon
	182, // 57: yunweiclient.ListAutoOpengameRuleResp.rows:type_name -> yunweiclient.ListAutoOpengameRuleData
	188, // 58: yunweiclient.AddSwitchEntranceGameserverReq.one:type_name -> yunweiclient.SwitchEntranceGameserverCommon
	188, // 59: yunweiclient.UpdateSwitchEntranceGameserverReq.one:type_name -> yunweiclient.SwitchEntranceGameserverCommon
	191, // 60: yunweiclient.ListSwitchEntranceGameserverResp.rows:type_name -> yunweiclient.ListSwitchEntranceGameserverData
	197, // 61: yunweiclient.AddAlarmThresholdManageReq.one:type_name -> yunweiclient.AlarmThresholdManageCommon
	197, // 62: yunweiclient.UpdateAlarmThresholdManageReq.one:type_name -> yunweiclient.AlarmThresholdManageCommon
	200, // 63: yunweiclient.ListAlarmThresholdManageResp.rows:type_name -> yunweiclient.ListAlarmThresholdManageData
	206, // 64: yunweiclient.AddTasksScheduleQueueReq.one:type_name -> yunweiclient.TasksScheduleQueueCommon
	206, // 65: yunweiclient.UpdateTasksScheduleQueueReq.one:type_name -> yunweiclient.TasksScheduleQueueCommon
	209, // 66: yunweiclient.ListTasksScheduleQueueResp.rows:type_name -> yunweiclient.ListTasksScheduleQueueData
	0,   // 67: yunweiclient.YunWei.AssetAdd:input_type -> yunweiclient.AssetAddReq
	8,   // 68: yunweiclient.YunWei.AssetList:input_type -> yunweiclient.AssetListReq
	2,   // 69: yunweiclient.YunWei.AssetUpdate:input_type -> yunweiclient.AssetUpdateReq
	4,   // 70: yunweiclient.YunWei.AssetDelete:input_type -> yunweiclient.AssetDeleteReq
	6,   // 71: yunweiclient.YunWei.AssetRecycleDelete:input_type -> yunweiclient.AssetRecycleDeleteReq
	12,  // 72: yunweiclient.YunWei.GetWebSshTree:input_type -> yunweiclient.GetWebSshReq
	14,  // 73: yunweiclient.YunWei.AssetBatchDistribute:input_type -> yunweiclient.BatchDistributeReq
	16,  // 74: yunweiclient.YunWei.FeatureServerAdd:input_type -> yunweiclient.AddFeatureServerReq
	18,  // 75: yunweiclient.YunWei.FeatureServerUpdate:input_type -> yunweiclient.UpdateFeatureServerReq
	19,  // 76: yunweiclient.YunWei.FeatureServerDelete:input_type -> yunweiclient.DeleteFeatureServerReq
	21,  // 77: yunweiclient.YunWei.FeatureServerInfoGet:input_type -> yunweiclient.GetFeatureServerReq
	22,  // 78: yunweiclient.YunWei.FeatureServerList:input_type -> yunweiclient.ListFeatureServerReq
	25,  // 79: yunweiclient.YunWei.PlatformAdd:input_type -> yunweiclient.AddPlatformReq
	27,  // 80: yunweiclient.YunWei.PlatformUpdate:input_type -> yunweiclient.UpdatePlatformReq
	28,  // 81: yunweiclient.YunWei.PlatformDelete:input_type -> yunweiclient.DeletePlatformReq
	30,  // 82: yunweiclient.YunWei.PlatformGet:input_type -> yunweiclient.GetPlatformReq
	29,  // 83: yunweiclient.YunWei.PlatformDetail:input_type -> yunweiclient.DetailPlatformReq
	33,  // 84: yunweiclient.YunWei.PlatformList:input_type -> yunweiclient.ListPlatformReq
	42,  // 85: yunweiclient.YunWei.PlatformGetClusterInfo:input_type -> yunweiclient.GetClusterByPlatformReq
	36,  // 86: yunweiclient.YunWei.ClusterList:input_type -> yunweiclient.ListClusterReq
	45,  // 87: yunweiclient.YunWei.KeyManageAdd:input_type -> yunweiclient.AddKeyManageReq
	47,  // 88: yunweiclient.YunWei.KeyManageUpdate:input_type -> yunweiclient.UpdateKeyManageReq
	48,  // 89: yunweiclient.YunWei.KeyManageDelete:input_type -> yunweiclient.DeleteKeyManageReq
	49,  // 90: yunweiclient.YunWei.KeyManageGet:input_type -> yunweiclient.GetKeyManageReq
	51,  // 91: yunweiclient.YunWei.KeyManageList:input_type -> yunweiclient.ListKeyManageReq
	54,  // 92: yunweiclient.YunWei.MaintainPlanAdd:input_type -> yunweiclient.AddMaintainPlanReq
	56,  // 93: yunweiclient.YunWei.MaintainPlanUpdate:input_type -> yunweiclient.UpdateMaintainPlanReq
	57,  // 94: yunweiclient.YunWei.MaintainPlanDelete:input_type -> yunweiclient.DeleteMaintainPlanReq
	58,  // 95: yunweiclient.YunWei.MaintainPlanGet:input_type -> yunweiclient.GetMaintainPlanReq
	60,  // 96: yunweiclient.YunWei.MaintainPlanList:input_type -> yunweiclient.ListMaintainPlanReq
	64,  // 97: yunweiclient.YunWei.MaintainPlanRangeList:input_type -> yunweiclient.GetMaintainPlanListTreeByClsIdAndProIdReq
	66,  // 98: yunweiclient.YunWei.MaintainGetClusterInfo:input_type -> yunweiclient.MaintainGetClusterInfoReq
	69,  // 99: yunweiclient.YunWei.MergePlanAdd:input_type -> yunweiclient.AddMergePlanReq
	71,  // 100: yunweiclient.YunWei.MergePlanUpdate:input_type -> yunweiclient.UpdateMergePlanReq
	72,  // 101: yunweiclient.YunWei.MergePlanDelete:input_type -> yunweiclient.DeleteMergePlanReq
	73,  // 102: yunweiclient.YunWei.MergePlanGet:input_type -> yunweiclient.GetMergePlanReq
	77,  // 103: yunweiclient.YunWei.MergePlanList:input_type -> yunweiclient.ListMergePlanReq
	80,  // 104: yunweiclient.YunWei.MergePlanRangeList:input_type -> yunweiclient.GetMergeListTreeByPlatIdAndProIdReq
	74,  // 105: yunweiclient.YunWei.MergeCheckServerRange:input_type -> yunweiclient.MergeCheckServerRangeReq
	82,  // 106: yunweiclient.YunWei.OpenPlanAdd:input_type -> yunweiclient.AddOpenPlanReq
	84,  // 107: yunweiclient.YunWei.OpenPlanUpdate:input_type -> yunweiclient.UpdateOpenPlanReq
	85,  // 108: yunweiclient.YunWei.OpenPlanDelete:input_type -> yunweiclient.DeleteOpenPlanReq
	86,  // 109: yunweiclient.YunWei.OpenPlanGet:input_type -> yunweiclient.GetOpenPlanReq
	88,  // 110: yunweiclient.YunWei.OpenPlanList:input_type -> yunweiclient.ListOpenPlanReq
	91,  // 111: yunweiclient.YunWei.OpenPlanBatchModifyOpenTime:input_type -> yunweiclient.OpenPlanBatchModifyOpenTimeReq
	94,  // 112: yunweiclient.YunWei.OpenplanBatchUpdateStatus:input_type -> yunweiclient.BatchUpdateStatusReq
	96,  // 113: yunweiclient.YunWei.HostsList:input_type -> yunweiclient.ListHostsReq
	99,  // 114: yunweiclient.YunWei.GameServerList:input_type -> yunweiclient.ListGameServerReq
	102, // 115: yunweiclient.YunWei.TasksAdd:input_type -> yunweiclient.AddTasksReq
	104, // 116: yunweiclient.YunWei.TasksUpdate:input_type -> yunweiclient.UpdateTasksReq
	105, // 117: yunweiclient.YunWei.TasksDelete:input_type -> yunweiclient.DeleteTasksReq
	106, // 118: yunweiclient.YunWei.TasksGet:input_type -> yunweiclient.GetTasksReq
	106, // 119: yunweiclient.YunWei.TasksGetOneById:input_type -> yunweiclient.GetTasksReq
	112, // 120: yunweiclient.YunWei.TasksList:input_type -> yunweiclient.ListTasksReq
	115, // 121: yunweiclient.YunWei.TaskGetOperation:input_type -> yunweiclient.TaskGetOperationReq
	107, // 122: yunweiclient.YunWei.TaskStart:input_type -> yunweiclient.StartTasksReq
	109, // 123: yunweiclient.YunWei.TaskStop:input_type -> yunweiclient.StopTasksReq
	120, // 124: yunweiclient.YunWei.HotLogHistoryAdd:input_type -> yunweiclient.AddHotLogHistoryReq
	119, // 125: yunweiclient.YunWei.HotLogHistoryList:input_type -> yunweiclient.ListHotLogHistoryReq
	118, // 126: yunweiclient.YunWei.HotLogHistoryGet:input_type -> yunweiclient.GetHotLogHistoryReq
	124, // 127: yunweiclient.YunWei.TaskGetFormatJson:input_type -> yunweiclient.TaskGetFormatJsonReq
	131, // 128: yunweiclient.YunWei.WaitMergeList:input_type -> yunweiclient.ListWaitMergeReq
	128, // 129: yunweiclient.YunWei.WaitInstallList:input_type -> yunweiclient.ListWaitInstallReq
	134, // 130: yunweiclient.YunWei.TaskGetInstallLogList:input_type -> yunweiclient.ListInstallLogListReq
	137, // 131: yunweiclient.YunWei.TaskLogHistroyList:input_type -> yunweiclient.ListTaskLogHistroyReq
	139, // 132: yunweiclient.YunWei.TaskLogHistroyDetail:input_type -> yunweiclient.DetailTaskLogHistroyReq
	141, // 133: yunweiclient.YunWei.ConfigFileAdd:input_type -> yunweiclient.AddConfigFileReq
	143, // 134: yunweiclient.YunWei.ConfigFileUpdate:input_type -> yunweiclient.UpdateConfigFileReq
	144, // 135: yunweiclient.YunWei.ConfigFileDelete:input_type -> yunweiclient.DeleteConfigFileReq
	145, // 136: yunweiclient.YunWei.ConfigFileGet:input_type -> yunweiclient.GetConfigFileReq
	147, // 137: yunweiclient.YunWei.ConfigFileList:input_type -> yunweiclient.ListConfigFileReq
	150, // 138: yunweiclient.YunWei.ConfigFileDeliveryAdd:input_type -> yunweiclient.AddConfigFileDeliveryReq
	154, // 139: yunweiclient.YunWei.ConfigFileDeliveryList:input_type -> yunweiclient.ListConfigFileDeliveryReq
	157, // 140: yunweiclient.YunWei.ConfigFileDeliveryGet:input_type -> yunweiclient.GetConfigFileDeliveryTreeReq
	159, // 141: yunweiclient.YunWei.ConfigFileDeliveryGetLog:input_type -> yunweiclient.GetConfigFileDeliveryLogReq
	161, // 142: yunweiclient.YunWei.ConfigFileDeliveryGetFileContent:input_type -> yunweiclient.ConfigFileDeliveryGetFileContentReq
	163, // 143: yunweiclient.YunWei.ConfigFileDeliveryUpdateTemplate:input_type -> yunweiclient.UpdateConfigFileDeliveryTemplateReq
	165, // 144: yunweiclient.YunWei.HelpList:input_type -> yunweiclient.HelpListReq
	168, // 145: yunweiclient.YunWei.GetSumOfCurrentInfo:input_type -> yunweiclient.GetSumOfCurrentInfoListReq
	171, // 146: yunweiclient.YunWei.GetTrendChart:input_type -> yunweiclient.GetTrendChartListReq
	174, // 147: yunweiclient.YunWei.AutoOpengameRuleAdd:input_type -> yunweiclient.AddAutoOpengameRuleReq
	176, // 148: yunweiclient.YunWei.AutoOpengameRuleUpdate:input_type -> yunweiclient.UpdateAutoOpengameRuleReq
	177, // 149: yunweiclient.YunWei.AutoOpengameRuleDelete:input_type -> yunweiclient.DeleteAutoOpengameRuleReq
	178, // 150: yunweiclient.YunWei.AutoOpengameRuleGet:input_type -> yunweiclient.GetAutoOpengameRuleReq
	180, // 151: yunweiclient.YunWei.AutoOpengameRuleList:input_type -> yunweiclient.ListAutoOpengameRuleReq
	183, // 152: yunweiclient.YunWei.SwitchEntranceGameserverAdd:input_type -> yunweiclient.AddSwitchEntranceGameserverReq
	185, // 153: yunweiclient.YunWei.SwitchEntranceGameserverUpdate:input_type -> yunweiclient.UpdateSwitchEntranceGameserverReq
	186, // 154: yunweiclient.YunWei.SwitchEntranceGameserverDelete:input_type -> yunweiclient.DeleteSwitchEntranceGameserverReq
	187, // 155: yunweiclient.YunWei.SwitchEntranceGameserverGet:input_type -> yunweiclient.GetSwitchEntranceGameserverReq
	189, // 156: yunweiclient.YunWei.SwitchEntranceGameserverList:input_type -> yunweiclient.ListSwitchEntranceGameserverReq
	192, // 157: yunweiclient.YunWei.AlarmThresholdManageAdd:input_type -> yunweiclient.AddAlarmThresholdManageReq
	194, // 158: yunweiclient.YunWei.AlarmThresholdManageUpdate:input_type -> yunweiclient.UpdateAlarmThresholdManageReq
	195, // 159: yunweiclient.YunWei.AlarmThresholdManageDelete:input_type -> yunweiclient.DeleteAlarmThresholdManageReq
	196, // 160: yunweiclient.YunWei.AlarmThresholdManageGet:input_type -> yunweiclient.GetAlarmThresholdManageReq
	198, // 161: yunweiclient.YunWei.AlarmThresholdManageList:input_type -> yunweiclient.ListAlarmThresholdManageReq
	201, // 162: yunweiclient.YunWei.TasksScheduleQueueAdd:input_type -> yunweiclient.AddTasksScheduleQueueReq
	203, // 163: yunweiclient.YunWei.TasksScheduleQueueUpdate:input_type -> yunweiclient.UpdateTasksScheduleQueueReq
	204, // 164: yunweiclient.YunWei.TasksScheduleQueueDelete:input_type -> yunweiclient.DeleteTasksScheduleQueueReq
	205, // 165: yunweiclient.YunWei.TasksScheduleQueueGet:input_type -> yunweiclient.GetTasksScheduleQueueReq
	207, // 166: yunweiclient.YunWei.TasksScheduleQueueList:input_type -> yunweiclient.ListTasksScheduleQueueReq
	1,   // 167: yunweiclient.YunWei.AssetAdd:output_type -> yunweiclient.AssetAddResp
	9,   // 168: yunweiclient.YunWei.AssetList:output_type -> yunweiclient.AssetListResp
	3,   // 169: yunweiclient.YunWei.AssetUpdate:output_type -> yunweiclient.AssetUpdateResp
	5,   // 170: yunweiclient.YunWei.AssetDelete:output_type -> yunweiclient.AssetDeleteResp
	7,   // 171: yunweiclient.YunWei.AssetRecycleDelete:output_type -> yunweiclient.AssetRecycleDeleteResp
	13,  // 172: yunweiclient.YunWei.GetWebSshTree:output_type -> yunweiclient.GetWebSshResp
	15,  // 173: yunweiclient.YunWei.AssetBatchDistribute:output_type -> yunweiclient.BatchDistributeResp
	17,  // 174: yunweiclient.YunWei.FeatureServerAdd:output_type -> yunweiclient.FeatureServerCommonResp
	17,  // 175: yunweiclient.YunWei.FeatureServerUpdate:output_type -> yunweiclient.FeatureServerCommonResp
	17,  // 176: yunweiclient.YunWei.FeatureServerDelete:output_type -> yunweiclient.FeatureServerCommonResp
	24,  // 177: yunweiclient.YunWei.FeatureServerInfoGet:output_type -> yunweiclient.ListFeatureServerData
	23,  // 178: yunweiclient.YunWei.FeatureServerList:output_type -> yunweiclient.ListFeatureServerResp
	26,  // 179: yunweiclient.YunWei.PlatformAdd:output_type -> yunweiclient.PlatformCommonResp
	26,  // 180: yunweiclient.YunWei.PlatformUpdate:output_type -> yunweiclient.PlatformCommonResp
	26,  // 181: yunweiclient.YunWei.PlatformDelete:output_type -> yunweiclient.PlatformCommonResp
	35,  // 182: yunweiclient.YunWei.PlatformGet:output_type -> yunweiclient.ListPlatformData
	31,  // 183: yunweiclient.YunWei.PlatformDetail:output_type -> yunweiclient.DetailPlatformResp
	34,  // 184: yunweiclient.YunWei.PlatformList:output_type -> yunweiclient.ListPlatformResp
	43,  // 185: yunweiclient.YunWei.PlatformGetClusterInfo:output_type -> yunweiclient.GetClusterByPlatformResp
	37,  // 186: yunweiclient.YunWei.ClusterList:output_type -> yunweiclient.ListClusterResp
	46,  // 187: yunweiclient.YunWei.KeyManageAdd:output_type -> yunweiclient.KeyManageCommonResp
	46,  // 188: yunweiclient.YunWei.KeyManageUpdate:output_type -> yunweiclient.KeyManageCommonResp
	46,  // 189: yunweiclient.YunWei.KeyManageDelete:output_type -> yunweiclient.KeyManageCommonResp
	53,  // 190: yunweiclient.YunWei.KeyManageGet:output_type -> yunweiclient.ListKeyManageData
	52,  // 191: yunweiclient.YunWei.KeyManageList:output_type -> yunweiclient.ListKeyManageResp
	55,  // 192: yunweiclient.YunWei.MaintainPlanAdd:output_type -> yunweiclient.MaintainPlanCommonResp
	55,  // 193: yunweiclient.YunWei.MaintainPlanUpdate:output_type -> yunweiclient.MaintainPlanCommonResp
	55,  // 194: yunweiclient.YunWei.MaintainPlanDelete:output_type -> yunweiclient.MaintainPlanCommonResp
	63,  // 195: yunweiclient.YunWei.MaintainPlanGet:output_type -> yunweiclient.ListMaintainPlanData
	62,  // 196: yunweiclient.YunWei.MaintainPlanList:output_type -> yunweiclient.ListMaintainPlanResp
	65,  // 197: yunweiclient.YunWei.MaintainPlanRangeList:output_type -> yunweiclient.GetMaintainPlanListTreeByClsIdAndProIdResp
	67,  // 198: yunweiclient.YunWei.MaintainGetClusterInfo:output_type -> yunweiclient.MaintainGetClusterInfoResp
	70,  // 199: yunweiclient.YunWei.MergePlanAdd:output_type -> yunweiclient.MergePlanCommonResp
	70,  // 200: yunweiclient.YunWei.MergePlanUpdate:output_type -> yunweiclient.MergePlanCommonResp
	70,  // 201: yunweiclient.YunWei.MergePlanDelete:output_type -> yunweiclient.MergePlanCommonResp
	79,  // 202: yunweiclient.YunWei.MergePlanGet:output_type -> yunweiclient.ListMergePlanData
	78,  // 203: yunweiclient.YunWei.MergePlanList:output_type -> yunweiclient.ListMergePlanResp
	81,  // 204: yunweiclient.YunWei.MergePlanRangeList:output_type -> yunweiclient.GetMergeListTreeByPlatIdAndProIdResp
	75,  // 205: yunweiclient.YunWei.MergeCheckServerRange:output_type -> yunweiclient.MergeCheckServerRangeResp
	83,  // 206: yunweiclient.YunWei.OpenPlanAdd:output_type -> yunweiclient.OpenPlanCommonResp
	83,  // 207: yunweiclient.YunWei.OpenPlanUpdate:output_type -> yunweiclient.OpenPlanCommonResp
	83,  // 208: yunweiclient.YunWei.OpenPlanDelete:output_type -> yunweiclient.OpenPlanCommonResp
	90,  // 209: yunweiclient.YunWei.OpenPlanGet:output_type -> yunweiclient.ListOpenPlanData
	89,  // 210: yunweiclient.YunWei.OpenPlanList:output_type -> yunweiclient.ListOpenPlanResp
	92,  // 211: yunweiclient.YunWei.OpenPlanBatchModifyOpenTime:output_type -> yunweiclient.OpenPlanBatchModifyOpenTimeResp
	95,  // 212: yunweiclient.YunWei.OpenplanBatchUpdateStatus:output_type -> yunweiclient.BatchUpdateStatusResp
	97,  // 213: yunweiclient.YunWei.HostsList:output_type -> yunweiclient.ListHostsResp
	100, // 214: yunweiclient.YunWei.GameServerList:output_type -> yunweiclient.ListGameServerResp
	103, // 215: yunweiclient.YunWei.TasksAdd:output_type -> yunweiclient.TasksCommonResp
	103, // 216: yunweiclient.YunWei.TasksUpdate:output_type -> yunweiclient.TasksCommonResp
	103, // 217: yunweiclient.YunWei.TasksDelete:output_type -> yunweiclient.TasksCommonResp
	111, // 218: yunweiclient.YunWei.TasksGet:output_type -> yunweiclient.GetTasksResp
	114, // 219: yunweiclient.YunWei.TasksGetOneById:output_type -> yunweiclient.ListTasksData
	113, // 220: yunweiclient.YunWei.TasksList:output_type -> yunweiclient.ListTasksResp
	116, // 221: yunweiclient.YunWei.TaskGetOperation:output_type -> yunweiclient.TaskGetOperationResp
	108, // 222: yunweiclient.YunWei.TaskStart:output_type -> yunweiclient.StartTasksResp
	110, // 223: yunweiclient.YunWei.TaskStop:output_type -> yunweiclient.StopTasksResp
	121, // 224: yunweiclient.YunWei.HotLogHistoryAdd:output_type -> yunweiclient.AddHotLogHistoryResp
	122, // 225: yunweiclient.YunWei.HotLogHistoryList:output_type -> yunweiclient.ListHotLogHistoryResp
	123, // 226: yunweiclient.YunWei.HotLogHistoryGet:output_type -> yunweiclient.ListHotLogHistoryData
	125, // 227: yunweiclient.YunWei.TaskGetFormatJson:output_type -> yunweiclient.TaskGetFormatJsonResp
	132, // 228: yunweiclient.YunWei.WaitMergeList:output_type -> yunweiclient.ListWaitMergeResp
	129, // 229: yunweiclient.YunWei.WaitInstallList:output_type -> yunweiclient.ListWaitInstallResp
	135, // 230: yunweiclient.YunWei.TaskGetInstallLogList:output_type -> yunweiclient.ListInstallLogListResp
	138, // 231: yunweiclient.YunWei.TaskLogHistroyList:output_type -> yunweiclient.ListTaskLogHistroyResp
	140, // 232: yunweiclient.YunWei.TaskLogHistroyDetail:output_type -> yunweiclient.DetailTaskLogHistroyResp
	142, // 233: yunweiclient.YunWei.ConfigFileAdd:output_type -> yunweiclient.ConfigFileCommonResp
	142, // 234: yunweiclient.YunWei.ConfigFileUpdate:output_type -> yunweiclient.ConfigFileCommonResp
	142, // 235: yunweiclient.YunWei.ConfigFileDelete:output_type -> yunweiclient.ConfigFileCommonResp
	149, // 236: yunweiclient.YunWei.ConfigFileGet:output_type -> yunweiclient.ListConfigFileData
	148, // 237: yunweiclient.YunWei.ConfigFileList:output_type -> yunweiclient.ListConfigFileResp
	153, // 238: yunweiclient.YunWei.ConfigFileDeliveryAdd:output_type -> yunweiclient.AddConfigFileDeliveryResp
	155, // 239: yunweiclient.YunWei.ConfigFileDeliveryList:output_type -> yunweiclient.ListConfigFileDeliveryResp
	158, // 240: yunweiclient.YunWei.ConfigFileDeliveryGet:output_type -> yunweiclient.GetConfigFileDeliveryTreeResp
	160, // 241: yunweiclient.YunWei.ConfigFileDeliveryGetLog:output_type -> yunweiclient.GetConfigFileDeliveryLogResp
	162, // 242: yunweiclient.YunWei.ConfigFileDeliveryGetFileContent:output_type -> yunweiclient.ConfigFileDeliveryGetFileContentResp
	164, // 243: yunweiclient.YunWei.ConfigFileDeliveryUpdateTemplate:output_type -> yunweiclient.UpdateConfigFileDeliveryTemplateResp
	166, // 244: yunweiclient.YunWei.HelpList:output_type -> yunweiclient.HelpListResp
	169, // 245: yunweiclient.YunWei.GetSumOfCurrentInfo:output_type -> yunweiclient.GetSumOfCurrentInfoListResp
	172, // 246: yunweiclient.YunWei.GetTrendChart:output_type -> yunweiclient.GetTrendChartListResp
	175, // 247: yunweiclient.YunWei.AutoOpengameRuleAdd:output_type -> yunweiclient.AutoOpengameRuleCommonResp
	175, // 248: yunweiclient.YunWei.AutoOpengameRuleUpdate:output_type -> yunweiclient.AutoOpengameRuleCommonResp
	175, // 249: yunweiclient.YunWei.AutoOpengameRuleDelete:output_type -> yunweiclient.AutoOpengameRuleCommonResp
	182, // 250: yunweiclient.YunWei.AutoOpengameRuleGet:output_type -> yunweiclient.ListAutoOpengameRuleData
	181, // 251: yunweiclient.YunWei.AutoOpengameRuleList:output_type -> yunweiclient.ListAutoOpengameRuleResp
	184, // 252: yunweiclient.YunWei.SwitchEntranceGameserverAdd:output_type -> yunweiclient.SwitchEntranceGameserverCommonResp
	184, // 253: yunweiclient.YunWei.SwitchEntranceGameserverUpdate:output_type -> yunweiclient.SwitchEntranceGameserverCommonResp
	184, // 254: yunweiclient.YunWei.SwitchEntranceGameserverDelete:output_type -> yunweiclient.SwitchEntranceGameserverCommonResp
	191, // 255: yunweiclient.YunWei.SwitchEntranceGameserverGet:output_type -> yunweiclient.ListSwitchEntranceGameserverData
	190, // 256: yunweiclient.YunWei.SwitchEntranceGameserverList:output_type -> yunweiclient.ListSwitchEntranceGameserverResp
	193, // 257: yunweiclient.YunWei.AlarmThresholdManageAdd:output_type -> yunweiclient.AlarmThresholdManageCommonResp
	193, // 258: yunweiclient.YunWei.AlarmThresholdManageUpdate:output_type -> yunweiclient.AlarmThresholdManageCommonResp
	193, // 259: yunweiclient.YunWei.AlarmThresholdManageDelete:output_type -> yunweiclient.AlarmThresholdManageCommonResp
	200, // 260: yunweiclient.YunWei.AlarmThresholdManageGet:output_type -> yunweiclient.ListAlarmThresholdManageData
	199, // 261: yunweiclient.YunWei.AlarmThresholdManageList:output_type -> yunweiclient.ListAlarmThresholdManageResp
	202, // 262: yunweiclient.YunWei.TasksScheduleQueueAdd:output_type -> yunweiclient.TasksScheduleQueueCommonResp
	202, // 263: yunweiclient.YunWei.TasksScheduleQueueUpdate:output_type -> yunweiclient.TasksScheduleQueueCommonResp
	202, // 264: yunweiclient.YunWei.TasksScheduleQueueDelete:output_type -> yunweiclient.TasksScheduleQueueCommonResp
	209, // 265: yunweiclient.YunWei.TasksScheduleQueueGet:output_type -> yunweiclient.ListTasksScheduleQueueData
	208, // 266: yunweiclient.YunWei.TasksScheduleQueueList:output_type -> yunweiclient.ListTasksScheduleQueueResp
	167, // [167:267] is the sub-list for method output_type
	67,  // [67:167] is the sub-list for method input_type
	67,  // [67:67] is the sub-list for extension type_name
	67,  // [67:67] is the sub-list for extension extendee
	0,   // [0:67] is the sub-list for field type_name
}

func init() { file_yunwei_proto_init() }
func file_yunwei_proto_init() {
	if File_yunwei_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yunwei_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetRecycleDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetRecycleDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetDatas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebSshReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebSshResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDistributeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDistributeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFeatureServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureServerCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeatureServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeatureServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureServerDatas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeatureServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeatureServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeatureServerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPlatformResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClusterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLabelPlatformData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterByPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterByPlatformResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterByPlatformData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddKeyManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyManageCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKeyManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyManageCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKeyManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKeyManageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKeyManageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMaintainPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintainPlanCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMaintainPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMaintainPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaintainPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintainPlanCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMaintainPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortFiledData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMaintainPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMaintainPlanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaintainPlanListTreeByClsIdAndProIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaintainPlanListTreeByClsIdAndProIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintainGetClusterInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintainGetClusterInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaintainGetClusterInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMergePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergePlanCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMergePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMergePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMergePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeCheckServerRangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeCheckServerRangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergePlanCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMergePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMergePlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMergePlanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMergeListTreeByPlatIdAndProIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMergeListTreeByPlatIdAndProIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOpenPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPlanCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOpenPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOpenPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpenPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPlanCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOpenPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOpenPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOpenPlanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPlanBatchModifyOpenTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPlanBatchModifyOpenTimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenPlanBatchModifyOpenTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHostsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHostsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHostsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGameServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGameServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGameServerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TasksCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTasksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTasksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskGetOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskGetOperationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskGetOperationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotLogHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotLogHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHotLogHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddHotLogHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotLogHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotLogHistoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskGetFormatJsonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskGetFormatJsonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationListM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCommonJson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWaitInstallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWaitInstallResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWaitInstallData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWaitMergeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWaitMergeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWaitMergeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstallLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstallLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInstallLogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskLogHistroyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskLogHistroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailTaskLogHistroyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailTaskLogHistroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigFileCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigFileCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigFileData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigFileDeliveryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigFileDeliveryDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigFileDeliveryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigFileDeliveryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigFileDeliveryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigFileDeliveryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigFileDeliveryDataTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigFileDeliveryTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigFileDeliveryTreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigFileDeliveryLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigFileDeliveryLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigFileDeliveryGetFileContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigFileDeliveryGetFileContentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigFileDeliveryTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigFileDeliveryTemplateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSumOfCurrentInfoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSumOfCurrentInfoListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSumOfCurrentInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrendChartListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrendChartListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrendChartData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAutoOpengameRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoOpengameRuleCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAutoOpengameRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAutoOpengameRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutoOpengameRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoOpengameRuleCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAutoOpengameRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAutoOpengameRuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAutoOpengameRuleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSwitchEntranceGameserverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchEntranceGameserverCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSwitchEntranceGameserverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSwitchEntranceGameserverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSwitchEntranceGameserverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchEntranceGameserverCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSwitchEntranceGameserverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSwitchEntranceGameserverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSwitchEntranceGameserverData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAlarmThresholdManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmThresholdManageCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlarmThresholdManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlarmThresholdManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlarmThresholdManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmThresholdManageCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlarmThresholdManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlarmThresholdManageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlarmThresholdManageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTasksScheduleQueueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TasksScheduleQueueCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTasksScheduleQueueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTasksScheduleQueueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksScheduleQueueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TasksScheduleQueueCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksScheduleQueueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksScheduleQueueResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yunwei_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTasksScheduleQueueData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yunwei_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   210,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yunwei_proto_goTypes,
		DependencyIndexes: file_yunwei_proto_depIdxs,
		MessageInfos:      file_yunwei_proto_msgTypes,
	}.Build()
	File_yunwei_proto = out.File
	file_yunwei_proto_rawDesc = nil
	file_yunwei_proto_goTypes = nil
	file_yunwei_proto_depIdxs = nil
}
