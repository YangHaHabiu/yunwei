// Code generated by goctl. DO NOT EDIT!
// Source: intranet.proto

package server

import (
	"context"

	"ywadmin-v3/service/intranet/rpc/internal/logic"
	"ywadmin-v3/service/intranet/rpc/internal/svc"
	"ywadmin-v3/service/intranet/rpc/intranetclient"
)

type IntranetServer struct {
	svcCtx *svc.ServiceContext
	intranetclient.UnimplementedIntranetServer
}

func NewIntranetServer(svcCtx *svc.ServiceContext) *IntranetServer {
	return &IntranetServer{
		svcCtx: svcCtx,
	}
}

// InsideInstallPlan Rpc Start
func (s *IntranetServer) InsideInstallPlanAdd(ctx context.Context, in *intranetclient.AddInsideInstallPlanReq) (*intranetclient.InsideInstallPlanCommonResp, error) {
	l := logic.NewInsideInstallPlanAddLogic(ctx, s.svcCtx)
	return l.InsideInstallPlanAdd(in)
}

func (s *IntranetServer) InsideInstallPlanUpdate(ctx context.Context, in *intranetclient.UpdateInsideInstallPlanReq) (*intranetclient.InsideInstallPlanCommonResp, error) {
	l := logic.NewInsideInstallPlanUpdateLogic(ctx, s.svcCtx)
	return l.InsideInstallPlanUpdate(in)
}

func (s *IntranetServer) InsideInstallPlanDelete(ctx context.Context, in *intranetclient.DeleteInsideInstallPlanReq) (*intranetclient.InsideInstallPlanCommonResp, error) {
	l := logic.NewInsideInstallPlanDeleteLogic(ctx, s.svcCtx)
	return l.InsideInstallPlanDelete(in)
}

func (s *IntranetServer) InsideInstallPlanGet(ctx context.Context, in *intranetclient.GetInsideInstallPlanReq) (*intranetclient.ListInsideInstallPlanData, error) {
	l := logic.NewInsideInstallPlanGetLogic(ctx, s.svcCtx)
	return l.InsideInstallPlanGet(in)
}

func (s *IntranetServer) InsideInstallPlanList(ctx context.Context, in *intranetclient.ListInsideInstallPlanReq) (*intranetclient.ListInsideInstallPlanResp, error) {
	l := logic.NewInsideInstallPlanListLogic(ctx, s.svcCtx)
	return l.InsideInstallPlanList(in)
}

// InsideInstallPlan Rpc End
func (s *IntranetServer) InsideOperationAdd(ctx context.Context, in *intranetclient.AddInsideOperationReq) (*intranetclient.InsideOperationCommonResp, error) {
	l := logic.NewInsideOperationAddLogic(ctx, s.svcCtx)
	return l.InsideOperationAdd(in)
}

func (s *IntranetServer) InsideOperationUpdate(ctx context.Context, in *intranetclient.UpdateInsideOperationReq) (*intranetclient.InsideOperationCommonResp, error) {
	l := logic.NewInsideOperationUpdateLogic(ctx, s.svcCtx)
	return l.InsideOperationUpdate(in)
}

func (s *IntranetServer) InsideOperationDelete(ctx context.Context, in *intranetclient.DeleteInsideOperationReq) (*intranetclient.InsideOperationCommonResp, error) {
	l := logic.NewInsideOperationDeleteLogic(ctx, s.svcCtx)
	return l.InsideOperationDelete(in)
}

func (s *IntranetServer) InsideOperationGet(ctx context.Context, in *intranetclient.GetInsideOperationReq) (*intranetclient.ListInsideOperationData, error) {
	l := logic.NewInsideOperationGetLogic(ctx, s.svcCtx)
	return l.InsideOperationGet(in)
}

func (s *IntranetServer) InsideOperationList(ctx context.Context, in *intranetclient.ListInsideOperationReq) (*intranetclient.ListInsideOperationResp, error) {
	l := logic.NewInsideOperationListLogic(ctx, s.svcCtx)
	return l.InsideOperationList(in)
}

// InsideOperation Rpc End
func (s *IntranetServer) InsideProjectClusterAdd(ctx context.Context, in *intranetclient.AddInsideProjectClusterReq) (*intranetclient.InsideProjectClusterCommonResp, error) {
	l := logic.NewInsideProjectClusterAddLogic(ctx, s.svcCtx)
	return l.InsideProjectClusterAdd(in)
}

func (s *IntranetServer) InsideProjectClusterUpdate(ctx context.Context, in *intranetclient.UpdateInsideProjectClusterReq) (*intranetclient.InsideProjectClusterCommonResp, error) {
	l := logic.NewInsideProjectClusterUpdateLogic(ctx, s.svcCtx)
	return l.InsideProjectClusterUpdate(in)
}

func (s *IntranetServer) InsideProjectClusterDelete(ctx context.Context, in *intranetclient.DeleteInsideProjectClusterReq) (*intranetclient.InsideProjectClusterCommonResp, error) {
	l := logic.NewInsideProjectClusterDeleteLogic(ctx, s.svcCtx)
	return l.InsideProjectClusterDelete(in)
}

func (s *IntranetServer) InsideProjectClusterGet(ctx context.Context, in *intranetclient.GetInsideProjectClusterReq) (*intranetclient.ListInsideProjectClusterData, error) {
	l := logic.NewInsideProjectClusterGetLogic(ctx, s.svcCtx)
	return l.InsideProjectClusterGet(in)
}

func (s *IntranetServer) InsideProjectClusterList(ctx context.Context, in *intranetclient.ListInsideProjectClusterReq) (*intranetclient.ListInsideProjectClusterResp, error) {
	l := logic.NewInsideProjectClusterListLogic(ctx, s.svcCtx)
	return l.InsideProjectClusterList(in)
}

// InsideProjectCluster Rpc End
func (s *IntranetServer) InsideProxyHostAdd(ctx context.Context, in *intranetclient.AddInsideProxyHostReq) (*intranetclient.InsideProxyHostCommonResp, error) {
	l := logic.NewInsideProxyHostAddLogic(ctx, s.svcCtx)
	return l.InsideProxyHostAdd(in)
}

func (s *IntranetServer) InsideProxyHostUpdate(ctx context.Context, in *intranetclient.UpdateInsideProxyHostReq) (*intranetclient.InsideProxyHostCommonResp, error) {
	l := logic.NewInsideProxyHostUpdateLogic(ctx, s.svcCtx)
	return l.InsideProxyHostUpdate(in)
}

func (s *IntranetServer) InsideProxyHostDelete(ctx context.Context, in *intranetclient.DeleteInsideProxyHostReq) (*intranetclient.InsideProxyHostCommonResp, error) {
	l := logic.NewInsideProxyHostDeleteLogic(ctx, s.svcCtx)
	return l.InsideProxyHostDelete(in)
}

func (s *IntranetServer) InsideProxyHostGet(ctx context.Context, in *intranetclient.GetInsideProxyHostReq) (*intranetclient.ListInsideProxyHostData, error) {
	l := logic.NewInsideProxyHostGetLogic(ctx, s.svcCtx)
	return l.InsideProxyHostGet(in)
}

func (s *IntranetServer) InsideProxyHostList(ctx context.Context, in *intranetclient.ListInsideProxyHostReq) (*intranetclient.ListInsideProxyHostResp, error) {
	l := logic.NewInsideProxyHostListLogic(ctx, s.svcCtx)
	return l.InsideProxyHostList(in)
}

// InsideServer Rpc Start
func (s *IntranetServer) InsideServerAdd(ctx context.Context, in *intranetclient.AddInsideServerReq) (*intranetclient.InsideServerCommonResp, error) {
	l := logic.NewInsideServerAddLogic(ctx, s.svcCtx)
	return l.InsideServerAdd(in)
}

func (s *IntranetServer) InsideServerUpdate(ctx context.Context, in *intranetclient.UpdateInsideServerReq) (*intranetclient.InsideServerCommonResp, error) {
	l := logic.NewInsideServerUpdateLogic(ctx, s.svcCtx)
	return l.InsideServerUpdate(in)
}

func (s *IntranetServer) InsideServerDelete(ctx context.Context, in *intranetclient.DeleteInsideServerReq) (*intranetclient.InsideServerCommonResp, error) {
	l := logic.NewInsideServerDeleteLogic(ctx, s.svcCtx)
	return l.InsideServerDelete(in)
}

func (s *IntranetServer) InsideServerGet(ctx context.Context, in *intranetclient.GetInsideServerReq) (*intranetclient.ListInsideServerData, error) {
	l := logic.NewInsideServerGetLogic(ctx, s.svcCtx)
	return l.InsideServerGet(in)
}

func (s *IntranetServer) InsideServerList(ctx context.Context, in *intranetclient.ListInsideServerReq) (*intranetclient.ListInsideServerResp, error) {
	l := logic.NewInsideServerListLogic(ctx, s.svcCtx)
	return l.InsideServerList(in)
}

// InsideServer Rpc End
func (s *IntranetServer) InsideTasksAdd(ctx context.Context, in *intranetclient.AddInsideTasksReq) (*intranetclient.InsideTasksCommonResp, error) {
	l := logic.NewInsideTasksAddLogic(ctx, s.svcCtx)
	return l.InsideTasksAdd(in)
}

func (s *IntranetServer) InsideTasksUpdate(ctx context.Context, in *intranetclient.UpdateInsideTasksReq) (*intranetclient.InsideTasksCommonResp, error) {
	l := logic.NewInsideTasksUpdateLogic(ctx, s.svcCtx)
	return l.InsideTasksUpdate(in)
}

func (s *IntranetServer) InsideTasksDelete(ctx context.Context, in *intranetclient.DeleteInsideTasksReq) (*intranetclient.InsideTasksCommonResp, error) {
	l := logic.NewInsideTasksDeleteLogic(ctx, s.svcCtx)
	return l.InsideTasksDelete(in)
}

func (s *IntranetServer) InsideTasksGet(ctx context.Context, in *intranetclient.GetInsideTasksReq) (*intranetclient.ListInsideTasksData, error) {
	l := logic.NewInsideTasksGetLogic(ctx, s.svcCtx)
	return l.InsideTasksGet(in)
}

func (s *IntranetServer) InsideTasksList(ctx context.Context, in *intranetclient.ListInsideTasksReq) (*intranetclient.ListInsideTasksResp, error) {
	l := logic.NewInsideTasksListLogic(ctx, s.svcCtx)
	return l.InsideTasksList(in)
}

func (s *IntranetServer) InsideTasksOperation(ctx context.Context, in *intranetclient.InsideTasksOperationReq) (*intranetclient.InsideTasksOperationResp, error) {
	l := logic.NewInsideTasksOperationLogic(ctx, s.svcCtx)
	return l.InsideTasksOperation(in)
}

// InsideTasks Rpc End
func (s *IntranetServer) InsideTasksLogsAdd(ctx context.Context, in *intranetclient.AddInsideTasksLogsReq) (*intranetclient.InsideTasksLogsCommonResp, error) {
	l := logic.NewInsideTasksLogsAddLogic(ctx, s.svcCtx)
	return l.InsideTasksLogsAdd(in)
}

func (s *IntranetServer) InsideTasksLogsUpdate(ctx context.Context, in *intranetclient.UpdateInsideTasksLogsReq) (*intranetclient.InsideTasksLogsCommonResp, error) {
	l := logic.NewInsideTasksLogsUpdateLogic(ctx, s.svcCtx)
	return l.InsideTasksLogsUpdate(in)
}

func (s *IntranetServer) InsideTasksLogsDelete(ctx context.Context, in *intranetclient.DeleteInsideTasksLogsReq) (*intranetclient.InsideTasksLogsCommonResp, error) {
	l := logic.NewInsideTasksLogsDeleteLogic(ctx, s.svcCtx)
	return l.InsideTasksLogsDelete(in)
}

func (s *IntranetServer) InsideTasksLogsGet(ctx context.Context, in *intranetclient.GetInsideTasksLogsReq) (*intranetclient.ListInsideTasksLogsData, error) {
	l := logic.NewInsideTasksLogsGetLogic(ctx, s.svcCtx)
	return l.InsideTasksLogsGet(in)
}

func (s *IntranetServer) InsideTasksLogsList(ctx context.Context, in *intranetclient.ListInsideTasksLogsReq) (*intranetclient.ListInsideTasksLogsResp, error) {
	l := logic.NewInsideTasksLogsListLogic(ctx, s.svcCtx)
	return l.InsideTasksLogsList(in)
}

// InsideTasksLogs Rpc End
func (s *IntranetServer) InsideTasksPidAdd(ctx context.Context, in *intranetclient.AddInsideTasksPidReq) (*intranetclient.InsideTasksPidCommonResp, error) {
	l := logic.NewInsideTasksPidAddLogic(ctx, s.svcCtx)
	return l.InsideTasksPidAdd(in)
}

func (s *IntranetServer) InsideTasksPidUpdate(ctx context.Context, in *intranetclient.UpdateInsideTasksPidReq) (*intranetclient.InsideTasksPidCommonResp, error) {
	l := logic.NewInsideTasksPidUpdateLogic(ctx, s.svcCtx)
	return l.InsideTasksPidUpdate(in)
}

func (s *IntranetServer) InsideTasksPidDelete(ctx context.Context, in *intranetclient.DeleteInsideTasksPidReq) (*intranetclient.InsideTasksPidCommonResp, error) {
	l := logic.NewInsideTasksPidDeleteLogic(ctx, s.svcCtx)
	return l.InsideTasksPidDelete(in)
}

func (s *IntranetServer) InsideTasksPidGet(ctx context.Context, in *intranetclient.GetInsideTasksPidReq) (*intranetclient.ListInsideTasksPidData, error) {
	l := logic.NewInsideTasksPidGetLogic(ctx, s.svcCtx)
	return l.InsideTasksPidGet(in)
}

func (s *IntranetServer) InsideTasksPidList(ctx context.Context, in *intranetclient.ListInsideTasksPidReq) (*intranetclient.ListInsideTasksPidResp, error) {
	l := logic.NewInsideTasksPidListLogic(ctx, s.svcCtx)
	return l.InsideTasksPidList(in)
}

// InsideVersion Rpc Start
func (s *IntranetServer) InsideVersionAdd(ctx context.Context, in *intranetclient.AddInsideVersionReq) (*intranetclient.InsideVersionCommonResp, error) {
	l := logic.NewInsideVersionAddLogic(ctx, s.svcCtx)
	return l.InsideVersionAdd(in)
}

func (s *IntranetServer) InsideVersionUpdate(ctx context.Context, in *intranetclient.UpdateInsideVersionReq) (*intranetclient.InsideVersionCommonResp, error) {
	l := logic.NewInsideVersionUpdateLogic(ctx, s.svcCtx)
	return l.InsideVersionUpdate(in)
}

func (s *IntranetServer) InsideVersionDelete(ctx context.Context, in *intranetclient.DeleteInsideVersionReq) (*intranetclient.InsideVersionCommonResp, error) {
	l := logic.NewInsideVersionDeleteLogic(ctx, s.svcCtx)
	return l.InsideVersionDelete(in)
}

func (s *IntranetServer) InsideVersionGet(ctx context.Context, in *intranetclient.GetInsideVersionReq) (*intranetclient.ListInsideVersionData, error) {
	l := logic.NewInsideVersionGetLogic(ctx, s.svcCtx)
	return l.InsideVersionGet(in)
}

func (s *IntranetServer) InsideVersionList(ctx context.Context, in *intranetclient.ListInsideVersionReq) (*intranetclient.ListInsideVersionResp, error) {
	l := logic.NewInsideVersionListLogic(ctx, s.svcCtx)
	return l.InsideVersionList(in)
}

// InsideHostInfo Rpc Start
func (s *IntranetServer) InsideHostInfoAdd(ctx context.Context, in *intranetclient.AddInsideHostInfoReq) (*intranetclient.InsideHostInfoCommonResp, error) {
	l := logic.NewInsideHostInfoAddLogic(ctx, s.svcCtx)
	return l.InsideHostInfoAdd(in)
}

func (s *IntranetServer) InsideHostInfoUpdate(ctx context.Context, in *intranetclient.UpdateInsideHostInfoReq) (*intranetclient.InsideHostInfoCommonResp, error) {
	l := logic.NewInsideHostInfoUpdateLogic(ctx, s.svcCtx)
	return l.InsideHostInfoUpdate(in)
}

func (s *IntranetServer) InsideHostInfoDelete(ctx context.Context, in *intranetclient.DeleteInsideHostInfoReq) (*intranetclient.InsideHostInfoCommonResp, error) {
	l := logic.NewInsideHostInfoDeleteLogic(ctx, s.svcCtx)
	return l.InsideHostInfoDelete(in)
}

func (s *IntranetServer) InsideHostInfoGet(ctx context.Context, in *intranetclient.GetInsideHostInfoReq) (*intranetclient.ListInsideHostInfoData, error) {
	l := logic.NewInsideHostInfoGetLogic(ctx, s.svcCtx)
	return l.InsideHostInfoGet(in)
}

func (s *IntranetServer) InsideHostInfoList(ctx context.Context, in *intranetclient.ListInsideHostInfoReq) (*intranetclient.ListInsideHostInfoResp, error) {
	l := logic.NewInsideHostInfoListLogic(ctx, s.svcCtx)
	return l.InsideHostInfoList(in)
}
