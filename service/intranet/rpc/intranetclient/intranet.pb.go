// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.8.0
// source: intranet.proto

package intranetclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//InsideInstallPlan Start
type AddInsideInstallPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideInstallPlanCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideInstallPlanReq) Reset() {
	*x = AddInsideInstallPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideInstallPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideInstallPlanReq) ProtoMessage() {}

func (x *AddInsideInstallPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideInstallPlanReq.ProtoReflect.Descriptor instead.
func (*AddInsideInstallPlanReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{0}
}

func (x *AddInsideInstallPlanReq) GetOne() *InsideInstallPlanCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideInstallPlanCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideInstallPlanCommonResp) Reset() {
	*x = InsideInstallPlanCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideInstallPlanCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideInstallPlanCommonResp) ProtoMessage() {}

func (x *InsideInstallPlanCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideInstallPlanCommonResp.ProtoReflect.Descriptor instead.
func (*InsideInstallPlanCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{1}
}

func (x *InsideInstallPlanCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideInstallPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideInstallPlanCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideInstallPlanReq) Reset() {
	*x = UpdateInsideInstallPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideInstallPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideInstallPlanReq) ProtoMessage() {}

func (x *UpdateInsideInstallPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideInstallPlanReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideInstallPlanReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateInsideInstallPlanReq) GetOne() *InsideInstallPlanCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideInstallPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideInstallPlanId int64 `protobuf:"varint,1,opt,name=InsideInstallPlanId,proto3" json:"InsideInstallPlanId,omitempty"`
}

func (x *DeleteInsideInstallPlanReq) Reset() {
	*x = DeleteInsideInstallPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideInstallPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideInstallPlanReq) ProtoMessage() {}

func (x *DeleteInsideInstallPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideInstallPlanReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideInstallPlanReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteInsideInstallPlanReq) GetInsideInstallPlanId() int64 {
	if x != nil {
		return x.InsideInstallPlanId
	}
	return 0
}

type GetInsideInstallPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideInstallPlanId int64 `protobuf:"varint,1,opt,name=InsideInstallPlanId,proto3" json:"InsideInstallPlanId,omitempty"`
}

func (x *GetInsideInstallPlanReq) Reset() {
	*x = GetInsideInstallPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideInstallPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideInstallPlanReq) ProtoMessage() {}

func (x *GetInsideInstallPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideInstallPlanReq.ProtoReflect.Descriptor instead.
func (*GetInsideInstallPlanReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{4}
}

func (x *GetInsideInstallPlanReq) GetInsideInstallPlanId() int64 {
	if x != nil {
		return x.InsideInstallPlanId
	}
	return 0
}

type InsideInstallPlanCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId     int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId     int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	FeatureType   string `protobuf:"bytes,4,opt,name=featureType,proto3" json:"featureType,omitempty"`
	Sid           int64  `protobuf:"varint,5,opt,name=sid,proto3" json:"sid,omitempty"`
	ServerTitle   string `protobuf:"bytes,6,opt,name=serverTitle,proto3" json:"serverTitle,omitempty"`
	InstallStatus string `protobuf:"bytes,7,opt,name=installStatus,proto3" json:"installStatus,omitempty"`
	DelFlag       int64  `protobuf:"varint,10,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
}

func (x *InsideInstallPlanCommon) Reset() {
	*x = InsideInstallPlanCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideInstallPlanCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideInstallPlanCommon) ProtoMessage() {}

func (x *InsideInstallPlanCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideInstallPlanCommon.ProtoReflect.Descriptor instead.
func (*InsideInstallPlanCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{5}
}

func (x *InsideInstallPlanCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideInstallPlanCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InsideInstallPlanCommon) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *InsideInstallPlanCommon) GetFeatureType() string {
	if x != nil {
		return x.FeatureType
	}
	return ""
}

func (x *InsideInstallPlanCommon) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *InsideInstallPlanCommon) GetServerTitle() string {
	if x != nil {
		return x.ServerTitle
	}
	return ""
}

func (x *InsideInstallPlanCommon) GetInstallStatus() string {
	if x != nil {
		return x.InstallStatus
	}
	return ""
}

func (x *InsideInstallPlanCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

type ListInsideInstallPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListInsideInstallPlanReq) Reset() {
	*x = ListInsideInstallPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideInstallPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideInstallPlanReq) ProtoMessage() {}

func (x *ListInsideInstallPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideInstallPlanReq.ProtoReflect.Descriptor instead.
func (*ListInsideInstallPlanReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{6}
}

func (x *ListInsideInstallPlanReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideInstallPlanReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListInsideInstallPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideInstallPlanData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideInstallPlanResp) Reset() {
	*x = ListInsideInstallPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideInstallPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideInstallPlanResp) ProtoMessage() {}

func (x *ListInsideInstallPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideInstallPlanResp.ProtoReflect.Descriptor instead.
func (*ListInsideInstallPlanResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{7}
}

func (x *ListInsideInstallPlanResp) GetRows() []*ListInsideInstallPlanData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideInstallPlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideInstallPlanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId     int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId     int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	FeatureType   string `protobuf:"bytes,4,opt,name=featureType,proto3" json:"featureType,omitempty"`
	Sid           int64  `protobuf:"varint,5,opt,name=sid,proto3" json:"sid,omitempty"`
	ServerTitle   string `protobuf:"bytes,6,opt,name=serverTitle,proto3" json:"serverTitle,omitempty"`
	InstallStatus string `protobuf:"bytes,7,opt,name=installStatus,proto3" json:"installStatus,omitempty"`
	DelFlag       int64  `protobuf:"varint,10,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	ProjectCn     string `protobuf:"bytes,11,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	ClusterCn     string `protobuf:"bytes,12,opt,name=clusterCn,proto3" json:"clusterCn,omitempty"`
}

func (x *ListInsideInstallPlanData) Reset() {
	*x = ListInsideInstallPlanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideInstallPlanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideInstallPlanData) ProtoMessage() {}

func (x *ListInsideInstallPlanData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideInstallPlanData.ProtoReflect.Descriptor instead.
func (*ListInsideInstallPlanData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{8}
}

func (x *ListInsideInstallPlanData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideInstallPlanData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideInstallPlanData) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ListInsideInstallPlanData) GetFeatureType() string {
	if x != nil {
		return x.FeatureType
	}
	return ""
}

func (x *ListInsideInstallPlanData) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *ListInsideInstallPlanData) GetServerTitle() string {
	if x != nil {
		return x.ServerTitle
	}
	return ""
}

func (x *ListInsideInstallPlanData) GetInstallStatus() string {
	if x != nil {
		return x.InstallStatus
	}
	return ""
}

func (x *ListInsideInstallPlanData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListInsideInstallPlanData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListInsideInstallPlanData) GetClusterCn() string {
	if x != nil {
		return x.ClusterCn
	}
	return ""
}

//InsideOperation Start
type AddInsideOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideOperationCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideOperationReq) Reset() {
	*x = AddInsideOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideOperationReq) ProtoMessage() {}

func (x *AddInsideOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideOperationReq.ProtoReflect.Descriptor instead.
func (*AddInsideOperationReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{9}
}

func (x *AddInsideOperationReq) GetOne() *InsideOperationCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideOperationCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideOperationCommonResp) Reset() {
	*x = InsideOperationCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideOperationCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideOperationCommonResp) ProtoMessage() {}

func (x *InsideOperationCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideOperationCommonResp.ProtoReflect.Descriptor instead.
func (*InsideOperationCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{10}
}

func (x *InsideOperationCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideOperationCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideOperationReq) Reset() {
	*x = UpdateInsideOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideOperationReq) ProtoMessage() {}

func (x *UpdateInsideOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideOperationReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideOperationReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateInsideOperationReq) GetOne() *InsideOperationCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideOperationId int64 `protobuf:"varint,1,opt,name=InsideOperationId,proto3" json:"InsideOperationId,omitempty"`
}

func (x *DeleteInsideOperationReq) Reset() {
	*x = DeleteInsideOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideOperationReq) ProtoMessage() {}

func (x *DeleteInsideOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideOperationReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideOperationReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteInsideOperationReq) GetInsideOperationId() int64 {
	if x != nil {
		return x.InsideOperationId
	}
	return 0
}

type GetInsideOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideOperationId int64 `protobuf:"varint,1,opt,name=InsideOperationId,proto3" json:"InsideOperationId,omitempty"`
}

func (x *GetInsideOperationReq) Reset() {
	*x = GetInsideOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideOperationReq) ProtoMessage() {}

func (x *GetInsideOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideOperationReq.ProtoReflect.Descriptor instead.
func (*GetInsideOperationReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{13}
}

func (x *GetInsideOperationReq) GetInsideOperationId() int64 {
	if x != nil {
		return x.InsideOperationId
	}
	return 0
}

type InsideOperationCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	OperCn    string `protobuf:"bytes,3,opt,name=operCn,proto3" json:"operCn,omitempty"`
	OperType  string `protobuf:"bytes,4,opt,name=operType,proto3" json:"operType,omitempty"`
	Sort      int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	DelFlag   int64  `protobuf:"varint,6,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	OperEn    string `protobuf:"bytes,7,opt,name=operEn,proto3" json:"operEn,omitempty"`
}

func (x *InsideOperationCommon) Reset() {
	*x = InsideOperationCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideOperationCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideOperationCommon) ProtoMessage() {}

func (x *InsideOperationCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideOperationCommon.ProtoReflect.Descriptor instead.
func (*InsideOperationCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{14}
}

func (x *InsideOperationCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideOperationCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InsideOperationCommon) GetOperCn() string {
	if x != nil {
		return x.OperCn
	}
	return ""
}

func (x *InsideOperationCommon) GetOperType() string {
	if x != nil {
		return x.OperType
	}
	return ""
}

func (x *InsideOperationCommon) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *InsideOperationCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *InsideOperationCommon) GetOperEn() string {
	if x != nil {
		return x.OperEn
	}
	return ""
}

type ListInsideOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectId int64  `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	OperType  string `protobuf:"bytes,4,opt,name=operType,proto3" json:"operType,omitempty"`
}

func (x *ListInsideOperationReq) Reset() {
	*x = ListInsideOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideOperationReq) ProtoMessage() {}

func (x *ListInsideOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideOperationReq.ProtoReflect.Descriptor instead.
func (*ListInsideOperationReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{15}
}

func (x *ListInsideOperationReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideOperationReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListInsideOperationReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideOperationReq) GetOperType() string {
	if x != nil {
		return x.OperType
	}
	return ""
}

type ListInsideOperationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideOperationData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideOperationResp) Reset() {
	*x = ListInsideOperationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideOperationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideOperationResp) ProtoMessage() {}

func (x *ListInsideOperationResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideOperationResp.ProtoReflect.Descriptor instead.
func (*ListInsideOperationResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{16}
}

func (x *ListInsideOperationResp) GetRows() []*ListInsideOperationData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideOperationResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideOperationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	OperCn    string `protobuf:"bytes,3,opt,name=operCn,proto3" json:"operCn,omitempty"`
	OperType  string `protobuf:"bytes,4,opt,name=operType,proto3" json:"operType,omitempty"`
	Sort      int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	DelFlag   int64  `protobuf:"varint,6,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	OperEn    string `protobuf:"bytes,7,opt,name=operEn,proto3" json:"operEn,omitempty"`
	ProjectCn string `protobuf:"bytes,8,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
}

func (x *ListInsideOperationData) Reset() {
	*x = ListInsideOperationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideOperationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideOperationData) ProtoMessage() {}

func (x *ListInsideOperationData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideOperationData.ProtoReflect.Descriptor instead.
func (*ListInsideOperationData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{17}
}

func (x *ListInsideOperationData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideOperationData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideOperationData) GetOperCn() string {
	if x != nil {
		return x.OperCn
	}
	return ""
}

func (x *ListInsideOperationData) GetOperType() string {
	if x != nil {
		return x.OperType
	}
	return ""
}

func (x *ListInsideOperationData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ListInsideOperationData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListInsideOperationData) GetOperEn() string {
	if x != nil {
		return x.OperEn
	}
	return ""
}

func (x *ListInsideOperationData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

//InsideOperation End
//InsideProjectCluster Start
type AddInsideProjectClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideProjectClusterCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideProjectClusterReq) Reset() {
	*x = AddInsideProjectClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideProjectClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideProjectClusterReq) ProtoMessage() {}

func (x *AddInsideProjectClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideProjectClusterReq.ProtoReflect.Descriptor instead.
func (*AddInsideProjectClusterReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{18}
}

func (x *AddInsideProjectClusterReq) GetOne() *InsideProjectClusterCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideProjectClusterCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideProjectClusterCommonResp) Reset() {
	*x = InsideProjectClusterCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideProjectClusterCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideProjectClusterCommonResp) ProtoMessage() {}

func (x *InsideProjectClusterCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideProjectClusterCommonResp.ProtoReflect.Descriptor instead.
func (*InsideProjectClusterCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{19}
}

func (x *InsideProjectClusterCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideProjectClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideProjectClusterCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideProjectClusterReq) Reset() {
	*x = UpdateInsideProjectClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideProjectClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideProjectClusterReq) ProtoMessage() {}

func (x *UpdateInsideProjectClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideProjectClusterReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideProjectClusterReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateInsideProjectClusterReq) GetOne() *InsideProjectClusterCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideProjectClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideProjectClusterId int64 `protobuf:"varint,1,opt,name=InsideProjectClusterId,proto3" json:"InsideProjectClusterId,omitempty"`
}

func (x *DeleteInsideProjectClusterReq) Reset() {
	*x = DeleteInsideProjectClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideProjectClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideProjectClusterReq) ProtoMessage() {}

func (x *DeleteInsideProjectClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideProjectClusterReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideProjectClusterReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteInsideProjectClusterReq) GetInsideProjectClusterId() int64 {
	if x != nil {
		return x.InsideProjectClusterId
	}
	return 0
}

type GetInsideProjectClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideProjectClusterId int64 `protobuf:"varint,1,opt,name=InsideProjectClusterId,proto3" json:"InsideProjectClusterId,omitempty"`
}

func (x *GetInsideProjectClusterReq) Reset() {
	*x = GetInsideProjectClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideProjectClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideProjectClusterReq) ProtoMessage() {}

func (x *GetInsideProjectClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideProjectClusterReq.ProtoReflect.Descriptor instead.
func (*GetInsideProjectClusterReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{22}
}

func (x *GetInsideProjectClusterReq) GetInsideProjectClusterId() int64 {
	if x != nil {
		return x.InsideProjectClusterId
	}
	return 0
}

type InsideProjectClusterCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId int64 `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId int64 `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
}

func (x *InsideProjectClusterCommon) Reset() {
	*x = InsideProjectClusterCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideProjectClusterCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideProjectClusterCommon) ProtoMessage() {}

func (x *InsideProjectClusterCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideProjectClusterCommon.ProtoReflect.Descriptor instead.
func (*InsideProjectClusterCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{23}
}

func (x *InsideProjectClusterCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideProjectClusterCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InsideProjectClusterCommon) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

type ListInsideProjectClusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize  int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectId int64 `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId int64 `protobuf:"varint,4,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
}

func (x *ListInsideProjectClusterReq) Reset() {
	*x = ListInsideProjectClusterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideProjectClusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideProjectClusterReq) ProtoMessage() {}

func (x *ListInsideProjectClusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideProjectClusterReq.ProtoReflect.Descriptor instead.
func (*ListInsideProjectClusterReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{24}
}

func (x *ListInsideProjectClusterReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideProjectClusterReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListInsideProjectClusterReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideProjectClusterReq) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

type ListInsideProjectClusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideProjectClusterData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideProjectClusterResp) Reset() {
	*x = ListInsideProjectClusterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideProjectClusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideProjectClusterResp) ProtoMessage() {}

func (x *ListInsideProjectClusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideProjectClusterResp.ProtoReflect.Descriptor instead.
func (*ListInsideProjectClusterResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{25}
}

func (x *ListInsideProjectClusterResp) GetRows() []*ListInsideProjectClusterData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideProjectClusterResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideProjectClusterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ProjectCn string `protobuf:"bytes,4,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	ClusterCn string `protobuf:"bytes,5,opt,name=clusterCn,proto3" json:"clusterCn,omitempty"`
}

func (x *ListInsideProjectClusterData) Reset() {
	*x = ListInsideProjectClusterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideProjectClusterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideProjectClusterData) ProtoMessage() {}

func (x *ListInsideProjectClusterData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideProjectClusterData.ProtoReflect.Descriptor instead.
func (*ListInsideProjectClusterData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{26}
}

func (x *ListInsideProjectClusterData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideProjectClusterData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideProjectClusterData) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ListInsideProjectClusterData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListInsideProjectClusterData) GetClusterCn() string {
	if x != nil {
		return x.ClusterCn
	}
	return ""
}

//InsideProxyHost Start
type AddInsideProxyHostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideProxyHostCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideProxyHostReq) Reset() {
	*x = AddInsideProxyHostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideProxyHostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideProxyHostReq) ProtoMessage() {}

func (x *AddInsideProxyHostReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideProxyHostReq.ProtoReflect.Descriptor instead.
func (*AddInsideProxyHostReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{27}
}

func (x *AddInsideProxyHostReq) GetOne() *InsideProxyHostCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideProxyHostCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideProxyHostCommonResp) Reset() {
	*x = InsideProxyHostCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideProxyHostCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideProxyHostCommonResp) ProtoMessage() {}

func (x *InsideProxyHostCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideProxyHostCommonResp.ProtoReflect.Descriptor instead.
func (*InsideProxyHostCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{28}
}

func (x *InsideProxyHostCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideProxyHostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideProxyHostCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideProxyHostReq) Reset() {
	*x = UpdateInsideProxyHostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideProxyHostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideProxyHostReq) ProtoMessage() {}

func (x *UpdateInsideProxyHostReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideProxyHostReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideProxyHostReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateInsideProxyHostReq) GetOne() *InsideProxyHostCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideProxyHostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideProxyHostId int64 `protobuf:"varint,1,opt,name=InsideProxyHostId,proto3" json:"InsideProxyHostId,omitempty"`
}

func (x *DeleteInsideProxyHostReq) Reset() {
	*x = DeleteInsideProxyHostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideProxyHostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideProxyHostReq) ProtoMessage() {}

func (x *DeleteInsideProxyHostReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideProxyHostReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideProxyHostReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteInsideProxyHostReq) GetInsideProxyHostId() int64 {
	if x != nil {
		return x.InsideProxyHostId
	}
	return 0
}

type GetInsideProxyHostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideProxyHostId int64 `protobuf:"varint,1,opt,name=InsideProxyHostId,proto3" json:"InsideProxyHostId,omitempty"`
}

func (x *GetInsideProxyHostReq) Reset() {
	*x = GetInsideProxyHostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideProxyHostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideProxyHostReq) ProtoMessage() {}

func (x *GetInsideProxyHostReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideProxyHostReq.ProtoReflect.Descriptor instead.
func (*GetInsideProxyHostReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{31}
}

func (x *GetInsideProxyHostReq) GetInsideProxyHostId() int64 {
	if x != nil {
		return x.InsideProxyHostId
	}
	return 0
}

type InsideProxyHostCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId int64 `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	HostId    int64 `protobuf:"varint,4,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *InsideProxyHostCommon) Reset() {
	*x = InsideProxyHostCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideProxyHostCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideProxyHostCommon) ProtoMessage() {}

func (x *InsideProxyHostCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideProxyHostCommon.ProtoReflect.Descriptor instead.
func (*InsideProxyHostCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{32}
}

func (x *InsideProxyHostCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideProxyHostCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InsideProxyHostCommon) GetHostId() int64 {
	if x != nil {
		return x.HostId
	}
	return 0
}

type ListInsideProxyHostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListInsideProxyHostReq) Reset() {
	*x = ListInsideProxyHostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideProxyHostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideProxyHostReq) ProtoMessage() {}

func (x *ListInsideProxyHostReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideProxyHostReq.ProtoReflect.Descriptor instead.
func (*ListInsideProxyHostReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{33}
}

func (x *ListInsideProxyHostReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideProxyHostReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListInsideProxyHostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideProxyHostData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideProxyHostResp) Reset() {
	*x = ListInsideProxyHostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideProxyHostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideProxyHostResp) ProtoMessage() {}

func (x *ListInsideProxyHostResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideProxyHostResp.ProtoReflect.Descriptor instead.
func (*ListInsideProxyHostResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{34}
}

func (x *ListInsideProxyHostResp) GetRows() []*ListInsideProxyHostData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideProxyHostResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideProxyHostData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	HostIp         string `protobuf:"bytes,3,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	HostPort       int64  `protobuf:"varint,4,opt,name=hostPort,proto3" json:"hostPort,omitempty"`
	DbUser         string `protobuf:"bytes,5,opt,name=dbUser,proto3" json:"dbUser,omitempty"`
	DbPass         string `protobuf:"bytes,6,opt,name=dbPass,proto3" json:"dbPass,omitempty"`
	DbPort         int64  `protobuf:"varint,7,opt,name=dbPort,proto3" json:"dbPort,omitempty"`
	HostName       string `protobuf:"bytes,8,opt,name=hostName,proto3" json:"hostName,omitempty"`
	ProjectCn      string `protobuf:"bytes,9,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	HostScriptPath string `protobuf:"bytes,10,opt,name=hostScriptPath,proto3" json:"hostScriptPath,omitempty"`
	HostId         int64  `protobuf:"varint,11,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *ListInsideProxyHostData) Reset() {
	*x = ListInsideProxyHostData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideProxyHostData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideProxyHostData) ProtoMessage() {}

func (x *ListInsideProxyHostData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideProxyHostData.ProtoReflect.Descriptor instead.
func (*ListInsideProxyHostData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{35}
}

func (x *ListInsideProxyHostData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideProxyHostData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideProxyHostData) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *ListInsideProxyHostData) GetHostPort() int64 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *ListInsideProxyHostData) GetDbUser() string {
	if x != nil {
		return x.DbUser
	}
	return ""
}

func (x *ListInsideProxyHostData) GetDbPass() string {
	if x != nil {
		return x.DbPass
	}
	return ""
}

func (x *ListInsideProxyHostData) GetDbPort() int64 {
	if x != nil {
		return x.DbPort
	}
	return 0
}

func (x *ListInsideProxyHostData) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ListInsideProxyHostData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListInsideProxyHostData) GetHostScriptPath() string {
	if x != nil {
		return x.HostScriptPath
	}
	return ""
}

func (x *ListInsideProxyHostData) GetHostId() int64 {
	if x != nil {
		return x.HostId
	}
	return 0
}

//InsideServer Start
type AddInsideServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideServerCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideServerReq) Reset() {
	*x = AddInsideServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideServerReq) ProtoMessage() {}

func (x *AddInsideServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideServerReq.ProtoReflect.Descriptor instead.
func (*AddInsideServerReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{36}
}

func (x *AddInsideServerReq) GetOne() *InsideServerCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideServerCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideServerCommonResp) Reset() {
	*x = InsideServerCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideServerCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideServerCommonResp) ProtoMessage() {}

func (x *InsideServerCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideServerCommonResp.ProtoReflect.Descriptor instead.
func (*InsideServerCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{37}
}

func (x *InsideServerCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideServerCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideServerReq) Reset() {
	*x = UpdateInsideServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideServerReq) ProtoMessage() {}

func (x *UpdateInsideServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideServerReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideServerReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateInsideServerReq) GetOne() *InsideServerCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideServerId int64 `protobuf:"varint,1,opt,name=InsideServerId,proto3" json:"InsideServerId,omitempty"`
}

func (x *DeleteInsideServerReq) Reset() {
	*x = DeleteInsideServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideServerReq) ProtoMessage() {}

func (x *DeleteInsideServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideServerReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideServerReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteInsideServerReq) GetInsideServerId() int64 {
	if x != nil {
		return x.InsideServerId
	}
	return 0
}

type GetInsideServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideServerId int64 `protobuf:"varint,1,opt,name=InsideServerId,proto3" json:"InsideServerId,omitempty"`
}

func (x *GetInsideServerReq) Reset() {
	*x = GetInsideServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideServerReq) ProtoMessage() {}

func (x *GetInsideServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideServerReq.ProtoReflect.Descriptor instead.
func (*GetInsideServerReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{40}
}

func (x *GetInsideServerReq) GetInsideServerId() int64 {
	if x != nil {
		return x.InsideServerId
	}
	return 0
}

type InsideServerCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId    int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId    int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	FeatureType  string `protobuf:"bytes,4,opt,name=featureType,proto3" json:"featureType,omitempty"`
	Sort         int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	ServerTitle  string `protobuf:"bytes,6,opt,name=serverTitle,proto3" json:"serverTitle,omitempty"`
	ServerPath   string `protobuf:"bytes,7,opt,name=serverPath,proto3" json:"serverPath,omitempty"`
	ServerDescDb string `protobuf:"bytes,9,opt,name=serverDescDb,proto3" json:"serverDescDb,omitempty"`
	Domain       string `protobuf:"bytes,10,opt,name=domain,proto3" json:"domain,omitempty"`
	DelFlag      int64  `protobuf:"varint,11,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	BuildType    string `protobuf:"bytes,12,opt,name=buildType,proto3" json:"buildType,omitempty"`
}

func (x *InsideServerCommon) Reset() {
	*x = InsideServerCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideServerCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideServerCommon) ProtoMessage() {}

func (x *InsideServerCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideServerCommon.ProtoReflect.Descriptor instead.
func (*InsideServerCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{41}
}

func (x *InsideServerCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideServerCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InsideServerCommon) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *InsideServerCommon) GetFeatureType() string {
	if x != nil {
		return x.FeatureType
	}
	return ""
}

func (x *InsideServerCommon) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *InsideServerCommon) GetServerTitle() string {
	if x != nil {
		return x.ServerTitle
	}
	return ""
}

func (x *InsideServerCommon) GetServerPath() string {
	if x != nil {
		return x.ServerPath
	}
	return ""
}

func (x *InsideServerCommon) GetServerDescDb() string {
	if x != nil {
		return x.ServerDescDb
	}
	return ""
}

func (x *InsideServerCommon) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *InsideServerCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *InsideServerCommon) GetBuildType() string {
	if x != nil {
		return x.BuildType
	}
	return ""
}

type ListInsideServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current     int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize    int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectId   int64  `protobuf:"varint,5,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId   int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	FeatureType string `protobuf:"bytes,4,opt,name=featureType,proto3" json:"featureType,omitempty"`
	BuildType   string `protobuf:"bytes,6,opt,name=buildType,proto3" json:"buildType,omitempty"`
}

func (x *ListInsideServerReq) Reset() {
	*x = ListInsideServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideServerReq) ProtoMessage() {}

func (x *ListInsideServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideServerReq.ProtoReflect.Descriptor instead.
func (*ListInsideServerReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{42}
}

func (x *ListInsideServerReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideServerReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListInsideServerReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideServerReq) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ListInsideServerReq) GetFeatureType() string {
	if x != nil {
		return x.FeatureType
	}
	return ""
}

func (x *ListInsideServerReq) GetBuildType() string {
	if x != nil {
		return x.BuildType
	}
	return ""
}

type ListInsideServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideServerData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideServerResp) Reset() {
	*x = ListInsideServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideServerResp) ProtoMessage() {}

func (x *ListInsideServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideServerResp.ProtoReflect.Descriptor instead.
func (*ListInsideServerResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{43}
}

func (x *ListInsideServerResp) GetRows() []*ListInsideServerData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideServerResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideServerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId    int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId    int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	FeatureType  string `protobuf:"bytes,4,opt,name=featureType,proto3" json:"featureType,omitempty"`
	Sort         int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	ServerTitle  string `protobuf:"bytes,6,opt,name=serverTitle,proto3" json:"serverTitle,omitempty"`
	ServerPath   string `protobuf:"bytes,7,opt,name=serverPath,proto3" json:"serverPath,omitempty"`
	ServerDescDb string `protobuf:"bytes,9,opt,name=serverDescDb,proto3" json:"serverDescDb,omitempty"`
	Domain       string `protobuf:"bytes,10,opt,name=domain,proto3" json:"domain,omitempty"`
	DelFlag      int64  `protobuf:"varint,11,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	BuildType    string `protobuf:"bytes,12,opt,name=buildType,proto3" json:"buildType,omitempty"`
	ProjectCn    string `protobuf:"bytes,14,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	ClusterCn    string `protobuf:"bytes,13,opt,name=clusterCn,proto3" json:"clusterCn,omitempty"`
}

func (x *ListInsideServerData) Reset() {
	*x = ListInsideServerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideServerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideServerData) ProtoMessage() {}

func (x *ListInsideServerData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideServerData.ProtoReflect.Descriptor instead.
func (*ListInsideServerData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{44}
}

func (x *ListInsideServerData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideServerData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideServerData) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ListInsideServerData) GetFeatureType() string {
	if x != nil {
		return x.FeatureType
	}
	return ""
}

func (x *ListInsideServerData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ListInsideServerData) GetServerTitle() string {
	if x != nil {
		return x.ServerTitle
	}
	return ""
}

func (x *ListInsideServerData) GetServerPath() string {
	if x != nil {
		return x.ServerPath
	}
	return ""
}

func (x *ListInsideServerData) GetServerDescDb() string {
	if x != nil {
		return x.ServerDescDb
	}
	return ""
}

func (x *ListInsideServerData) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListInsideServerData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListInsideServerData) GetBuildType() string {
	if x != nil {
		return x.BuildType
	}
	return ""
}

func (x *ListInsideServerData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListInsideServerData) GetClusterCn() string {
	if x != nil {
		return x.ClusterCn
	}
	return ""
}

//InsideTasks Start
type AddInsideTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideTasksCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideTasksReq) Reset() {
	*x = AddInsideTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideTasksReq) ProtoMessage() {}

func (x *AddInsideTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideTasksReq.ProtoReflect.Descriptor instead.
func (*AddInsideTasksReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{45}
}

func (x *AddInsideTasksReq) GetOne() *InsideTasksCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideTasksCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideTasksCommonResp) Reset() {
	*x = InsideTasksCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideTasksCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideTasksCommonResp) ProtoMessage() {}

func (x *InsideTasksCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideTasksCommonResp.ProtoReflect.Descriptor instead.
func (*InsideTasksCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{46}
}

func (x *InsideTasksCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideTasksCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideTasksReq) Reset() {
	*x = UpdateInsideTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideTasksReq) ProtoMessage() {}

func (x *UpdateInsideTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideTasksReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideTasksReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateInsideTasksReq) GetOne() *InsideTasksCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideTasksId int64 `protobuf:"varint,1,opt,name=InsideTasksId,proto3" json:"InsideTasksId,omitempty"`
}

func (x *DeleteInsideTasksReq) Reset() {
	*x = DeleteInsideTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideTasksReq) ProtoMessage() {}

func (x *DeleteInsideTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideTasksReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideTasksReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteInsideTasksReq) GetInsideTasksId() int64 {
	if x != nil {
		return x.InsideTasksId
	}
	return 0
}

type GetInsideTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideTasksId int64 `protobuf:"varint,1,opt,name=InsideTasksId,proto3" json:"InsideTasksId,omitempty"`
}

func (x *GetInsideTasksReq) Reset() {
	*x = GetInsideTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideTasksReq) ProtoMessage() {}

func (x *GetInsideTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideTasksReq.ProtoReflect.Descriptor instead.
func (*GetInsideTasksReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{49}
}

func (x *GetInsideTasksReq) GetInsideTasksId() int64 {
	if x != nil {
		return x.InsideTasksId
	}
	return 0
}

type InsideTasksCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId   int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Cmd         string `protobuf:"bytes,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
	StartTime   int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime     int64  `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Status      string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy    int64  `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	DelFlag     int64  `protobuf:"varint,10,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	TasksType   string `protobuf:"bytes,11,opt,name=tasksType,proto3" json:"tasksType,omitempty"`
	ServerId    int64  `protobuf:"varint,12,opt,name=serverId,proto3" json:"serverId,omitempty"`
	VersionId   int64  `protobuf:"varint,13,opt,name=versionId,proto3" json:"versionId,omitempty"`
	Version     string `protobuf:"bytes,14,opt,name=Version,proto3" json:"Version,omitempty"`
	OperationId int64  `protobuf:"varint,15,opt,name=operationId,proto3" json:"operationId,omitempty"`
}

func (x *InsideTasksCommon) Reset() {
	*x = InsideTasksCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideTasksCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideTasksCommon) ProtoMessage() {}

func (x *InsideTasksCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideTasksCommon.ProtoReflect.Descriptor instead.
func (*InsideTasksCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{50}
}

func (x *InsideTasksCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideTasksCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InsideTasksCommon) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *InsideTasksCommon) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *InsideTasksCommon) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *InsideTasksCommon) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *InsideTasksCommon) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InsideTasksCommon) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *InsideTasksCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *InsideTasksCommon) GetTasksType() string {
	if x != nil {
		return x.TasksType
	}
	return ""
}

func (x *InsideTasksCommon) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *InsideTasksCommon) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *InsideTasksCommon) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InsideTasksCommon) GetOperationId() int64 {
	if x != nil {
		return x.OperationId
	}
	return 0
}

type ListInsideTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current      int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize     int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ProjectId    int64  `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId    int64  `protobuf:"varint,4,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	ServerId     int64  `protobuf:"varint,5,opt,name=serverId,proto3" json:"serverId,omitempty"`
	VersionId    int64  `protobuf:"varint,6,opt,name=versionId,proto3" json:"versionId,omitempty"`
	TasksType    string `protobuf:"bytes,7,opt,name=tasksType,proto3" json:"tasksType,omitempty"`
	ProjectIds   string `protobuf:"bytes,8,opt,name=projectIds,proto3" json:"projectIds,omitempty"`
	RecentSubmit string `protobuf:"bytes,9,opt,name=recentSubmit,proto3" json:"recentSubmit,omitempty"`
	TasksId      int64  `protobuf:"varint,10,opt,name=tasksId,proto3" json:"tasksId,omitempty"`
	Status       string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	StartTime    string `protobuf:"bytes,12,opt,name=startTime,proto3" json:"startTime,omitempty"`
}

func (x *ListInsideTasksReq) Reset() {
	*x = ListInsideTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksReq) ProtoMessage() {}

func (x *ListInsideTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksReq.ProtoReflect.Descriptor instead.
func (*ListInsideTasksReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{51}
}

func (x *ListInsideTasksReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListInsideTasksReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideTasksReq) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ListInsideTasksReq) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ListInsideTasksReq) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *ListInsideTasksReq) GetTasksType() string {
	if x != nil {
		return x.TasksType
	}
	return ""
}

func (x *ListInsideTasksReq) GetProjectIds() string {
	if x != nil {
		return x.ProjectIds
	}
	return ""
}

func (x *ListInsideTasksReq) GetRecentSubmit() string {
	if x != nil {
		return x.RecentSubmit
	}
	return ""
}

func (x *ListInsideTasksReq) GetTasksId() int64 {
	if x != nil {
		return x.TasksId
	}
	return 0
}

func (x *ListInsideTasksReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListInsideTasksReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type ListInsideTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideTasksData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideTasksResp) Reset() {
	*x = ListInsideTasksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksResp) ProtoMessage() {}

func (x *ListInsideTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksResp.ProtoReflect.Descriptor instead.
func (*ListInsideTasksResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{52}
}

func (x *ListInsideTasksResp) GetRows() []*ListInsideTasksData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideTasksResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideTasksData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId    int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId    int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Cmd          string `protobuf:"bytes,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
	StartTime    int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64  `protobuf:"varint,7,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Status       string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy     int64  `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	DelFlag      int64  `protobuf:"varint,10,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	TasksType    string `protobuf:"bytes,11,opt,name=tasksType,proto3" json:"tasksType,omitempty"`
	ServerId     int64  `protobuf:"varint,12,opt,name=serverId,proto3" json:"serverId,omitempty"`
	VersionId    int64  `protobuf:"varint,13,opt,name=versionId,proto3" json:"versionId,omitempty"`
	ProjectCn    string `protobuf:"bytes,14,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	ClusterCn    string `protobuf:"bytes,15,opt,name=clusterCn,proto3" json:"clusterCn,omitempty"`
	ServerTitle  string `protobuf:"bytes,16,opt,name=serverTitle,proto3" json:"serverTitle,omitempty"`
	ServerPath   string `protobuf:"bytes,17,opt,name=serverPath,proto3" json:"serverPath,omitempty"`
	ServerDescDb string `protobuf:"bytes,19,opt,name=serverDescDb,proto3" json:"serverDescDb,omitempty"`
	VersionName  string `protobuf:"bytes,20,opt,name=versionName,proto3" json:"versionName,omitempty"`
	VersionData  string `protobuf:"bytes,21,opt,name=versionData,proto3" json:"versionData,omitempty"`
	VersionConf  string `protobuf:"bytes,22,opt,name=versionConf,proto3" json:"versionConf,omitempty"`
	VersionType  string `protobuf:"bytes,23,opt,name=versionType,proto3" json:"versionType,omitempty"`
	OperCn       string `protobuf:"bytes,24,opt,name=operCn,proto3" json:"operCn,omitempty"`
	OperEn       string `protobuf:"bytes,25,opt,name=operEn,proto3" json:"operEn,omitempty"`
	OperType     string `protobuf:"bytes,26,opt,name=operType,proto3" json:"operType,omitempty"`
	NickName     string `protobuf:"bytes,27,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Version      string `protobuf:"bytes,28,opt,name=version,proto3" json:"version,omitempty"`
	ProjectEn    string `protobuf:"bytes,29,opt,name=projectEn,proto3" json:"projectEn,omitempty"`
	OperationId  int64  `protobuf:"varint,30,opt,name=operationId,proto3" json:"operationId,omitempty"`
}

func (x *ListInsideTasksData) Reset() {
	*x = ListInsideTasksData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksData) ProtoMessage() {}

func (x *ListInsideTasksData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksData.ProtoReflect.Descriptor instead.
func (*ListInsideTasksData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{53}
}

func (x *ListInsideTasksData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideTasksData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideTasksData) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ListInsideTasksData) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *ListInsideTasksData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListInsideTasksData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ListInsideTasksData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListInsideTasksData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ListInsideTasksData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListInsideTasksData) GetTasksType() string {
	if x != nil {
		return x.TasksType
	}
	return ""
}

func (x *ListInsideTasksData) GetServerId() int64 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ListInsideTasksData) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *ListInsideTasksData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListInsideTasksData) GetClusterCn() string {
	if x != nil {
		return x.ClusterCn
	}
	return ""
}

func (x *ListInsideTasksData) GetServerTitle() string {
	if x != nil {
		return x.ServerTitle
	}
	return ""
}

func (x *ListInsideTasksData) GetServerPath() string {
	if x != nil {
		return x.ServerPath
	}
	return ""
}

func (x *ListInsideTasksData) GetServerDescDb() string {
	if x != nil {
		return x.ServerDescDb
	}
	return ""
}

func (x *ListInsideTasksData) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *ListInsideTasksData) GetVersionData() string {
	if x != nil {
		return x.VersionData
	}
	return ""
}

func (x *ListInsideTasksData) GetVersionConf() string {
	if x != nil {
		return x.VersionConf
	}
	return ""
}

func (x *ListInsideTasksData) GetVersionType() string {
	if x != nil {
		return x.VersionType
	}
	return ""
}

func (x *ListInsideTasksData) GetOperCn() string {
	if x != nil {
		return x.OperCn
	}
	return ""
}

func (x *ListInsideTasksData) GetOperEn() string {
	if x != nil {
		return x.OperEn
	}
	return ""
}

func (x *ListInsideTasksData) GetOperType() string {
	if x != nil {
		return x.OperType
	}
	return ""
}

func (x *ListInsideTasksData) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ListInsideTasksData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListInsideTasksData) GetProjectEn() string {
	if x != nil {
		return x.ProjectEn
	}
	return ""
}

func (x *ListInsideTasksData) GetOperationId() int64 {
	if x != nil {
		return x.OperationId
	}
	return 0
}

type InsideTasksOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TasksId       int64  `protobuf:"varint,1,opt,name=tasksId,proto3" json:"tasksId,omitempty"`
	OperationType string `protobuf:"bytes,2,opt,name=operationType,proto3" json:"operationType,omitempty"`
}

func (x *InsideTasksOperationReq) Reset() {
	*x = InsideTasksOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideTasksOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideTasksOperationReq) ProtoMessage() {}

func (x *InsideTasksOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideTasksOperationReq.ProtoReflect.Descriptor instead.
func (*InsideTasksOperationReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{54}
}

func (x *InsideTasksOperationReq) GetTasksId() int64 {
	if x != nil {
		return x.TasksId
	}
	return 0
}

func (x *InsideTasksOperationReq) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

type InsideTasksOperationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideTasksOperationResp) Reset() {
	*x = InsideTasksOperationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideTasksOperationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideTasksOperationResp) ProtoMessage() {}

func (x *InsideTasksOperationResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideTasksOperationResp.ProtoReflect.Descriptor instead.
func (*InsideTasksOperationResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{55}
}

func (x *InsideTasksOperationResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

//InsideTasksLogs Start
type AddInsideTasksLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideTasksLogsCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideTasksLogsReq) Reset() {
	*x = AddInsideTasksLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideTasksLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideTasksLogsReq) ProtoMessage() {}

func (x *AddInsideTasksLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideTasksLogsReq.ProtoReflect.Descriptor instead.
func (*AddInsideTasksLogsReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{56}
}

func (x *AddInsideTasksLogsReq) GetOne() *InsideTasksLogsCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideTasksLogsCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideTasksLogsCommonResp) Reset() {
	*x = InsideTasksLogsCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideTasksLogsCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideTasksLogsCommonResp) ProtoMessage() {}

func (x *InsideTasksLogsCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideTasksLogsCommonResp.ProtoReflect.Descriptor instead.
func (*InsideTasksLogsCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{57}
}

func (x *InsideTasksLogsCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideTasksLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideTasksLogsCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideTasksLogsReq) Reset() {
	*x = UpdateInsideTasksLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideTasksLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideTasksLogsReq) ProtoMessage() {}

func (x *UpdateInsideTasksLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideTasksLogsReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideTasksLogsReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateInsideTasksLogsReq) GetOne() *InsideTasksLogsCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideTasksLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideTasksLogsId int64 `protobuf:"varint,1,opt,name=InsideTasksLogsId,proto3" json:"InsideTasksLogsId,omitempty"`
}

func (x *DeleteInsideTasksLogsReq) Reset() {
	*x = DeleteInsideTasksLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideTasksLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideTasksLogsReq) ProtoMessage() {}

func (x *DeleteInsideTasksLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideTasksLogsReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideTasksLogsReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteInsideTasksLogsReq) GetInsideTasksLogsId() int64 {
	if x != nil {
		return x.InsideTasksLogsId
	}
	return 0
}

type GetInsideTasksLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideTasksLogsId int64 `protobuf:"varint,1,opt,name=InsideTasksLogsId,proto3" json:"InsideTasksLogsId,omitempty"`
}

func (x *GetInsideTasksLogsReq) Reset() {
	*x = GetInsideTasksLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideTasksLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideTasksLogsReq) ProtoMessage() {}

func (x *GetInsideTasksLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideTasksLogsReq.ProtoReflect.Descriptor instead.
func (*GetInsideTasksLogsReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{60}
}

func (x *GetInsideTasksLogsReq) GetInsideTasksLogsId() int64 {
	if x != nil {
		return x.InsideTasksLogsId
	}
	return 0
}

type InsideTasksLogsCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TasksId int64  `protobuf:"varint,2,opt,name=tasksId,proto3" json:"tasksId,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *InsideTasksLogsCommon) Reset() {
	*x = InsideTasksLogsCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideTasksLogsCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideTasksLogsCommon) ProtoMessage() {}

func (x *InsideTasksLogsCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideTasksLogsCommon.ProtoReflect.Descriptor instead.
func (*InsideTasksLogsCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{61}
}

func (x *InsideTasksLogsCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideTasksLogsCommon) GetTasksId() int64 {
	if x != nil {
		return x.TasksId
	}
	return 0
}

func (x *InsideTasksLogsCommon) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ListInsideTasksLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListInsideTasksLogsReq) Reset() {
	*x = ListInsideTasksLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksLogsReq) ProtoMessage() {}

func (x *ListInsideTasksLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksLogsReq.ProtoReflect.Descriptor instead.
func (*ListInsideTasksLogsReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{62}
}

func (x *ListInsideTasksLogsReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideTasksLogsReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListInsideTasksLogsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideTasksLogsData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideTasksLogsResp) Reset() {
	*x = ListInsideTasksLogsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksLogsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksLogsResp) ProtoMessage() {}

func (x *ListInsideTasksLogsResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksLogsResp.ProtoReflect.Descriptor instead.
func (*ListInsideTasksLogsResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{63}
}

func (x *ListInsideTasksLogsResp) GetRows() []*ListInsideTasksLogsData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideTasksLogsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideTasksLogsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TasksId int64  `protobuf:"varint,2,opt,name=tasksId,proto3" json:"tasksId,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ListInsideTasksLogsData) Reset() {
	*x = ListInsideTasksLogsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksLogsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksLogsData) ProtoMessage() {}

func (x *ListInsideTasksLogsData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksLogsData.ProtoReflect.Descriptor instead.
func (*ListInsideTasksLogsData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{64}
}

func (x *ListInsideTasksLogsData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideTasksLogsData) GetTasksId() int64 {
	if x != nil {
		return x.TasksId
	}
	return 0
}

func (x *ListInsideTasksLogsData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

//InsideTasksLogs End
//InsideTasksPid Start
type AddInsideTasksPidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideTasksPidCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideTasksPidReq) Reset() {
	*x = AddInsideTasksPidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideTasksPidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideTasksPidReq) ProtoMessage() {}

func (x *AddInsideTasksPidReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideTasksPidReq.ProtoReflect.Descriptor instead.
func (*AddInsideTasksPidReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{65}
}

func (x *AddInsideTasksPidReq) GetOne() *InsideTasksPidCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideTasksPidCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideTasksPidCommonResp) Reset() {
	*x = InsideTasksPidCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideTasksPidCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideTasksPidCommonResp) ProtoMessage() {}

func (x *InsideTasksPidCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideTasksPidCommonResp.ProtoReflect.Descriptor instead.
func (*InsideTasksPidCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{66}
}

func (x *InsideTasksPidCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideTasksPidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideTasksPidCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideTasksPidReq) Reset() {
	*x = UpdateInsideTasksPidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideTasksPidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideTasksPidReq) ProtoMessage() {}

func (x *UpdateInsideTasksPidReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideTasksPidReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideTasksPidReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{67}
}

func (x *UpdateInsideTasksPidReq) GetOne() *InsideTasksPidCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideTasksPidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideTasksPidId int64 `protobuf:"varint,1,opt,name=InsideTasksPidId,proto3" json:"InsideTasksPidId,omitempty"`
}

func (x *DeleteInsideTasksPidReq) Reset() {
	*x = DeleteInsideTasksPidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideTasksPidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideTasksPidReq) ProtoMessage() {}

func (x *DeleteInsideTasksPidReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideTasksPidReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideTasksPidReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{68}
}

func (x *DeleteInsideTasksPidReq) GetInsideTasksPidId() int64 {
	if x != nil {
		return x.InsideTasksPidId
	}
	return 0
}

type GetInsideTasksPidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideTasksPidId int64 `protobuf:"varint,1,opt,name=InsideTasksPidId,proto3" json:"InsideTasksPidId,omitempty"`
}

func (x *GetInsideTasksPidReq) Reset() {
	*x = GetInsideTasksPidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideTasksPidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideTasksPidReq) ProtoMessage() {}

func (x *GetInsideTasksPidReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideTasksPidReq.ProtoReflect.Descriptor instead.
func (*GetInsideTasksPidReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{69}
}

func (x *GetInsideTasksPidReq) GetInsideTasksPidId() int64 {
	if x != nil {
		return x.InsideTasksPidId
	}
	return 0
}

type InsideTasksPidCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TasksId  int64 `protobuf:"varint,2,opt,name=tasksId,proto3" json:"tasksId,omitempty"`
	TasksPid int64 `protobuf:"varint,3,opt,name=tasksPid,proto3" json:"tasksPid,omitempty"`
}

func (x *InsideTasksPidCommon) Reset() {
	*x = InsideTasksPidCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideTasksPidCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideTasksPidCommon) ProtoMessage() {}

func (x *InsideTasksPidCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideTasksPidCommon.ProtoReflect.Descriptor instead.
func (*InsideTasksPidCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{70}
}

func (x *InsideTasksPidCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideTasksPidCommon) GetTasksId() int64 {
	if x != nil {
		return x.TasksId
	}
	return 0
}

func (x *InsideTasksPidCommon) GetTasksPid() int64 {
	if x != nil {
		return x.TasksPid
	}
	return 0
}

type ListInsideTasksPidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListInsideTasksPidReq) Reset() {
	*x = ListInsideTasksPidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksPidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksPidReq) ProtoMessage() {}

func (x *ListInsideTasksPidReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksPidReq.ProtoReflect.Descriptor instead.
func (*ListInsideTasksPidReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{71}
}

func (x *ListInsideTasksPidReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideTasksPidReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListInsideTasksPidResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideTasksPidData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideTasksPidResp) Reset() {
	*x = ListInsideTasksPidResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksPidResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksPidResp) ProtoMessage() {}

func (x *ListInsideTasksPidResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksPidResp.ProtoReflect.Descriptor instead.
func (*ListInsideTasksPidResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{72}
}

func (x *ListInsideTasksPidResp) GetRows() []*ListInsideTasksPidData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideTasksPidResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideTasksPidData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TasksId  int64 `protobuf:"varint,2,opt,name=tasksId,proto3" json:"tasksId,omitempty"`
	TasksPid int64 `protobuf:"varint,3,opt,name=tasksPid,proto3" json:"tasksPid,omitempty"`
}

func (x *ListInsideTasksPidData) Reset() {
	*x = ListInsideTasksPidData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideTasksPidData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideTasksPidData) ProtoMessage() {}

func (x *ListInsideTasksPidData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideTasksPidData.ProtoReflect.Descriptor instead.
func (*ListInsideTasksPidData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{73}
}

func (x *ListInsideTasksPidData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideTasksPidData) GetTasksId() int64 {
	if x != nil {
		return x.TasksId
	}
	return 0
}

func (x *ListInsideTasksPidData) GetTasksPid() int64 {
	if x != nil {
		return x.TasksPid
	}
	return 0
}

//InsideTasksPid End
//InsideVersion Start
type AddInsideVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideVersionCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideVersionReq) Reset() {
	*x = AddInsideVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideVersionReq) ProtoMessage() {}

func (x *AddInsideVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideVersionReq.ProtoReflect.Descriptor instead.
func (*AddInsideVersionReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{74}
}

func (x *AddInsideVersionReq) GetOne() *InsideVersionCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideVersionCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideVersionCommonResp) Reset() {
	*x = InsideVersionCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideVersionCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideVersionCommonResp) ProtoMessage() {}

func (x *InsideVersionCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideVersionCommonResp.ProtoReflect.Descriptor instead.
func (*InsideVersionCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{75}
}

func (x *InsideVersionCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideVersionCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideVersionReq) Reset() {
	*x = UpdateInsideVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideVersionReq) ProtoMessage() {}

func (x *UpdateInsideVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideVersionReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideVersionReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateInsideVersionReq) GetOne() *InsideVersionCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideVersionId int64 `protobuf:"varint,1,opt,name=InsideVersionId,proto3" json:"InsideVersionId,omitempty"`
}

func (x *DeleteInsideVersionReq) Reset() {
	*x = DeleteInsideVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideVersionReq) ProtoMessage() {}

func (x *DeleteInsideVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideVersionReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideVersionReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{77}
}

func (x *DeleteInsideVersionReq) GetInsideVersionId() int64 {
	if x != nil {
		return x.InsideVersionId
	}
	return 0
}

type GetInsideVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideVersionId int64 `protobuf:"varint,1,opt,name=InsideVersionId,proto3" json:"InsideVersionId,omitempty"`
}

func (x *GetInsideVersionReq) Reset() {
	*x = GetInsideVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideVersionReq) ProtoMessage() {}

func (x *GetInsideVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideVersionReq.ProtoReflect.Descriptor instead.
func (*GetInsideVersionReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{78}
}

func (x *GetInsideVersionReq) GetInsideVersionId() int64 {
	if x != nil {
		return x.InsideVersionId
	}
	return 0
}

type InsideVersionCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId   int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	VersionName string `protobuf:"bytes,4,opt,name=versionName,proto3" json:"versionName,omitempty"`
	VersionData string `protobuf:"bytes,5,opt,name=versionData,proto3" json:"versionData,omitempty"`
	VersionConf string `protobuf:"bytes,6,opt,name=versionConf,proto3" json:"versionConf,omitempty"`
	VersionType string `protobuf:"bytes,7,opt,name=versionType,proto3" json:"versionType,omitempty"`
	SourceDb    string `protobuf:"bytes,8,opt,name=sourceDb,proto3" json:"sourceDb,omitempty"`
	Sort        int64  `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
	DelFlag     int64  `protobuf:"varint,10,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	BuildType   string `protobuf:"bytes,11,opt,name=buildType,proto3" json:"buildType,omitempty"`
}

func (x *InsideVersionCommon) Reset() {
	*x = InsideVersionCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideVersionCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideVersionCommon) ProtoMessage() {}

func (x *InsideVersionCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideVersionCommon.ProtoReflect.Descriptor instead.
func (*InsideVersionCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{79}
}

func (x *InsideVersionCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideVersionCommon) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InsideVersionCommon) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *InsideVersionCommon) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *InsideVersionCommon) GetVersionData() string {
	if x != nil {
		return x.VersionData
	}
	return ""
}

func (x *InsideVersionCommon) GetVersionConf() string {
	if x != nil {
		return x.VersionConf
	}
	return ""
}

func (x *InsideVersionCommon) GetVersionType() string {
	if x != nil {
		return x.VersionType
	}
	return ""
}

func (x *InsideVersionCommon) GetSourceDb() string {
	if x != nil {
		return x.SourceDb
	}
	return ""
}

func (x *InsideVersionCommon) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *InsideVersionCommon) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *InsideVersionCommon) GetBuildType() string {
	if x != nil {
		return x.BuildType
	}
	return ""
}

type ListInsideVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	VersionId int64  `protobuf:"varint,6,opt,name=versionId,proto3" json:"versionId,omitempty"`
	ProjectId int64  `protobuf:"varint,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId int64  `protobuf:"varint,4,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	BuildType string `protobuf:"bytes,5,opt,name=buildType,proto3" json:"buildType,omitempty"`
}

func (x *ListInsideVersionReq) Reset() {
	*x = ListInsideVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideVersionReq) ProtoMessage() {}

func (x *ListInsideVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideVersionReq.ProtoReflect.Descriptor instead.
func (*ListInsideVersionReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{80}
}

func (x *ListInsideVersionReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideVersionReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListInsideVersionReq) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *ListInsideVersionReq) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideVersionReq) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ListInsideVersionReq) GetBuildType() string {
	if x != nil {
		return x.BuildType
	}
	return ""
}

type ListInsideVersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideVersionData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideVersionResp) Reset() {
	*x = ListInsideVersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideVersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideVersionResp) ProtoMessage() {}

func (x *ListInsideVersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideVersionResp.ProtoReflect.Descriptor instead.
func (*ListInsideVersionResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{81}
}

func (x *ListInsideVersionResp) GetRows() []*ListInsideVersionData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideVersionResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideVersionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   int64  `protobuf:"varint,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ClusterId   int64  `protobuf:"varint,3,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	VersionName string `protobuf:"bytes,4,opt,name=versionName,proto3" json:"versionName,omitempty"`
	VersionData string `protobuf:"bytes,5,opt,name=versionData,proto3" json:"versionData,omitempty"`
	VersionConf string `protobuf:"bytes,6,opt,name=versionConf,proto3" json:"versionConf,omitempty"`
	VersionType string `protobuf:"bytes,7,opt,name=versionType,proto3" json:"versionType,omitempty"`
	SourceDb    string `protobuf:"bytes,8,opt,name=sourceDb,proto3" json:"sourceDb,omitempty"`
	Sort        int64  `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
	DelFlag     int64  `protobuf:"varint,10,opt,name=delFlag,proto3" json:"delFlag,omitempty"`
	BuildType   string `protobuf:"bytes,11,opt,name=buildType,proto3" json:"buildType,omitempty"`
	ProjectCn   string `protobuf:"bytes,12,opt,name=projectCn,proto3" json:"projectCn,omitempty"`
	ClusterCn   string `protobuf:"bytes,13,opt,name=clusterCn,proto3" json:"clusterCn,omitempty"`
}

func (x *ListInsideVersionData) Reset() {
	*x = ListInsideVersionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideVersionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideVersionData) ProtoMessage() {}

func (x *ListInsideVersionData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideVersionData.ProtoReflect.Descriptor instead.
func (*ListInsideVersionData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{82}
}

func (x *ListInsideVersionData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideVersionData) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListInsideVersionData) GetClusterId() int64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ListInsideVersionData) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *ListInsideVersionData) GetVersionData() string {
	if x != nil {
		return x.VersionData
	}
	return ""
}

func (x *ListInsideVersionData) GetVersionConf() string {
	if x != nil {
		return x.VersionConf
	}
	return ""
}

func (x *ListInsideVersionData) GetVersionType() string {
	if x != nil {
		return x.VersionType
	}
	return ""
}

func (x *ListInsideVersionData) GetSourceDb() string {
	if x != nil {
		return x.SourceDb
	}
	return ""
}

func (x *ListInsideVersionData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ListInsideVersionData) GetDelFlag() int64 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *ListInsideVersionData) GetBuildType() string {
	if x != nil {
		return x.BuildType
	}
	return ""
}

func (x *ListInsideVersionData) GetProjectCn() string {
	if x != nil {
		return x.ProjectCn
	}
	return ""
}

func (x *ListInsideVersionData) GetClusterCn() string {
	if x != nil {
		return x.ClusterCn
	}
	return ""
}

//InsideVersion End
//InsideHostInfo Start
type AddInsideHostInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideHostInfoCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *AddInsideHostInfoReq) Reset() {
	*x = AddInsideHostInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInsideHostInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInsideHostInfoReq) ProtoMessage() {}

func (x *AddInsideHostInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInsideHostInfoReq.ProtoReflect.Descriptor instead.
func (*AddInsideHostInfoReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{83}
}

func (x *AddInsideHostInfoReq) GetOne() *InsideHostInfoCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type InsideHostInfoCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *InsideHostInfoCommonResp) Reset() {
	*x = InsideHostInfoCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideHostInfoCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideHostInfoCommonResp) ProtoMessage() {}

func (x *InsideHostInfoCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideHostInfoCommonResp.ProtoReflect.Descriptor instead.
func (*InsideHostInfoCommonResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{84}
}

func (x *InsideHostInfoCommonResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type UpdateInsideHostInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One *InsideHostInfoCommon `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
}

func (x *UpdateInsideHostInfoReq) Reset() {
	*x = UpdateInsideHostInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInsideHostInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInsideHostInfoReq) ProtoMessage() {}

func (x *UpdateInsideHostInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInsideHostInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateInsideHostInfoReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{85}
}

func (x *UpdateInsideHostInfoReq) GetOne() *InsideHostInfoCommon {
	if x != nil {
		return x.One
	}
	return nil
}

type DeleteInsideHostInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideHostInfoId int64 `protobuf:"varint,1,opt,name=InsideHostInfoId,proto3" json:"InsideHostInfoId,omitempty"`
}

func (x *DeleteInsideHostInfoReq) Reset() {
	*x = DeleteInsideHostInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInsideHostInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInsideHostInfoReq) ProtoMessage() {}

func (x *DeleteInsideHostInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInsideHostInfoReq.ProtoReflect.Descriptor instead.
func (*DeleteInsideHostInfoReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{86}
}

func (x *DeleteInsideHostInfoReq) GetInsideHostInfoId() int64 {
	if x != nil {
		return x.InsideHostInfoId
	}
	return 0
}

type GetInsideHostInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideHostInfoId int64 `protobuf:"varint,1,opt,name=InsideHostInfoId,proto3" json:"InsideHostInfoId,omitempty"`
}

func (x *GetInsideHostInfoReq) Reset() {
	*x = GetInsideHostInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInsideHostInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInsideHostInfoReq) ProtoMessage() {}

func (x *GetInsideHostInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInsideHostInfoReq.ProtoReflect.Descriptor instead.
func (*GetInsideHostInfoReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{87}
}

func (x *GetInsideHostInfoReq) GetInsideHostInfoId() int64 {
	if x != nil {
		return x.InsideHostInfoId
	}
	return 0
}

type InsideHostInfoCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HostName       string `protobuf:"bytes,2,opt,name=hostName,proto3" json:"hostName,omitempty"`
	HostIp         string `protobuf:"bytes,3,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	HostPort       int64  `protobuf:"varint,4,opt,name=hostPort,proto3" json:"hostPort,omitempty"`
	DbUser         string `protobuf:"bytes,5,opt,name=dbUser,proto3" json:"dbUser,omitempty"`
	DbPass         string `protobuf:"bytes,6,opt,name=dbPass,proto3" json:"dbPass,omitempty"`
	DbPort         int64  `protobuf:"varint,7,opt,name=dbPort,proto3" json:"dbPort,omitempty"`
	HostScriptPath string `protobuf:"bytes,8,opt,name=hostScriptPath,proto3" json:"hostScriptPath,omitempty"`
}

func (x *InsideHostInfoCommon) Reset() {
	*x = InsideHostInfoCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsideHostInfoCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsideHostInfoCommon) ProtoMessage() {}

func (x *InsideHostInfoCommon) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsideHostInfoCommon.ProtoReflect.Descriptor instead.
func (*InsideHostInfoCommon) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{88}
}

func (x *InsideHostInfoCommon) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsideHostInfoCommon) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *InsideHostInfoCommon) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *InsideHostInfoCommon) GetHostPort() int64 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *InsideHostInfoCommon) GetDbUser() string {
	if x != nil {
		return x.DbUser
	}
	return ""
}

func (x *InsideHostInfoCommon) GetDbPass() string {
	if x != nil {
		return x.DbPass
	}
	return ""
}

func (x *InsideHostInfoCommon) GetDbPort() int64 {
	if x != nil {
		return x.DbPort
	}
	return 0
}

func (x *InsideHostInfoCommon) GetHostScriptPath() string {
	if x != nil {
		return x.HostScriptPath
	}
	return ""
}

type ListInsideHostInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ListInsideHostInfoReq) Reset() {
	*x = ListInsideHostInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideHostInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideHostInfoReq) ProtoMessage() {}

func (x *ListInsideHostInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideHostInfoReq.ProtoReflect.Descriptor instead.
func (*ListInsideHostInfoReq) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{89}
}

func (x *ListInsideHostInfoReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListInsideHostInfoReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListInsideHostInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*ListInsideHostInfoData `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total int64                     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListInsideHostInfoResp) Reset() {
	*x = ListInsideHostInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideHostInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideHostInfoResp) ProtoMessage() {}

func (x *ListInsideHostInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideHostInfoResp.ProtoReflect.Descriptor instead.
func (*ListInsideHostInfoResp) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{90}
}

func (x *ListInsideHostInfoResp) GetRows() []*ListInsideHostInfoData {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListInsideHostInfoResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListInsideHostInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HostName       string `protobuf:"bytes,2,opt,name=hostName,proto3" json:"hostName,omitempty"`
	HostIp         string `protobuf:"bytes,3,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	HostPort       int64  `protobuf:"varint,4,opt,name=hostPort,proto3" json:"hostPort,omitempty"`
	DbUser         string `protobuf:"bytes,5,opt,name=dbUser,proto3" json:"dbUser,omitempty"`
	DbPass         string `protobuf:"bytes,6,opt,name=dbPass,proto3" json:"dbPass,omitempty"`
	DbPort         int64  `protobuf:"varint,7,opt,name=dbPort,proto3" json:"dbPort,omitempty"`
	HostScriptPath string `protobuf:"bytes,8,opt,name=hostScriptPath,proto3" json:"hostScriptPath,omitempty"`
}

func (x *ListInsideHostInfoData) Reset() {
	*x = ListInsideHostInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_intranet_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsideHostInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsideHostInfoData) ProtoMessage() {}

func (x *ListInsideHostInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_intranet_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsideHostInfoData.ProtoReflect.Descriptor instead.
func (*ListInsideHostInfoData) Descriptor() ([]byte, []int) {
	return file_intranet_proto_rawDescGZIP(), []int{91}
}

func (x *ListInsideHostInfoData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListInsideHostInfoData) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ListInsideHostInfoData) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *ListInsideHostInfoData) GetHostPort() int64 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *ListInsideHostInfoData) GetDbUser() string {
	if x != nil {
		return x.DbUser
	}
	return ""
}

func (x *ListInsideHostInfoData) GetDbPass() string {
	if x != nil {
		return x.DbPass
	}
	return ""
}

func (x *ListInsideHostInfoData) GetDbPort() int64 {
	if x != nil {
		return x.DbPort
	}
	return 0
}

func (x *ListInsideHostInfoData) GetHostScriptPath() string {
	if x != nil {
		return x.HostScriptPath
	}
	return ""
}

var File_intranet_proto protoreflect.FileDescriptor

var file_intranet_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0x54, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x03, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x31, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x57, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f,
	0x6e, 0x65, 0x22, 0x4e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x30, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a,
	0x13, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22,
	0xfb, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x50, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x70, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xb9, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6e, 0x22, 0x50, 0x0a,
	0x15, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22,
	0x2f, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x53, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x03,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x45, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x43, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x72, 0x43, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x45, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x45, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x6c, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xdf, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x72, 0x43, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x72, 0x43, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x65, 0x72, 0x45, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x65, 0x72, 0x45, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6e, 0x22, 0x5a, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x3c, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22,
	0x34, 0x0a, 0x1e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x5d, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x03, 0x6f, 0x6e, 0x65, 0x22, 0x57, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x16, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8f, 0x01,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x76, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x40, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa6, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6e,
	0x22, 0x50, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x03, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f,
	0x6e, 0x65, 0x22, 0x2f, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x53, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x37, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x15, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6c, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xbd, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x62, 0x50, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62,
	0x50, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x68, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x03,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f,
	0x6e, 0x65, 0x22, 0x2c, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x4d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x03, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22,
	0x3f, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x3c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcc,
	0x02, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x44, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x44, 0x62, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc7, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x66, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x38, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x8a, 0x03, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x44, 0x62, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x44, 0x62,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6e, 0x22, 0x48, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x33, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x4b, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x03, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65,
	0x22, 0x3c, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x22, 0x39,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x22, 0x8b, 0x03, 0x0a, 0x11, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf2, 0x02, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xbd, 0x06, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x44, 0x62, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x44, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x20,
	0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x43, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x43, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72,
	0x45, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x45, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x59, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a,
	0x18, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x50, 0x0a,
	0x15, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22,
	0x2f, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f,
	0x67, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x53, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x03,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x4c, 0x6f, 0x67, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x49, 0x64, 0x22,
	0x45, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x4c, 0x6f, 0x67, 0x73, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x6c, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x5d, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x4e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x50, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e, 0x65,
	0x22, 0x2e, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50,
	0x69, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x51, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x03, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03,
	0x6f, 0x6e, 0x65, 0x22, 0x45, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2a,
	0x0a, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x50, 0x69, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x49, 0x64, 0x22, 0x5c,
	0x0a, 0x14, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6a, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x35,
	0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x35,
	0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x03, 0x6f, 0x6e, 0x65, 0x22, 0x42, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x28, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x28, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd1, 0x02, 0x0a, 0x13, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc4,
	0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x68, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x8f, 0x03, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x20, 0x0a, 0x0b, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6e, 0x22, 0x4e, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x03, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x6e,
	0x65, 0x22, 0x2e, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x22, 0x51, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x03,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x03, 0x6f, 0x6e, 0x65, 0x22, 0x45, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x22,
	0xe6, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x50, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x62, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x4d, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3a, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0xe8, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x62, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x62, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x50, 0x61, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x64, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x68, 0x6f, 0x73, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x74, 0x68, 0x32, 0xed,
	0x29, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x12, 0x6c, 0x0a, 0x14, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e,
	0x41, 0x64, 0x64, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x17, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50,
	0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x72, 0x0a,
	0x17, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6a, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6c, 0x0a,
	0x15, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x12, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6c, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x64, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x75, 0x0a,
	0x17, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x7b, 0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x7b, 0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2e,
	0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x73,
	0x0a, 0x17, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x75, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x12, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64,
	0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x6c, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x6c, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48,
	0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64,
	0x0a, 0x12, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0f,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12,
	0x22, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x12, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x63, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e,
	0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x5d, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5a, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a,
	0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x60, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x58, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x47, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x0f, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x66, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x4c, 0x6f, 0x67, 0x73, 0x41, 0x64, 0x64, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x29, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x15, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x47, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x13,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x41, 0x64, 0x64, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x14, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x50, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x61, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69,
	0x64, 0x47, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x63, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x50, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x50, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x50, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x23, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x13, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x66, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x10, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x23, 0x2e,
	0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x60, 0x0a, 0x11, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x11, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x64, 0x64,
	0x12, 0x24, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x69, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x14, 0x49,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x64,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x69,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x69, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x63, 0x0a, 0x12, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x25, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x42, 0x12,
	0x5a, 0x10, 0x2e, 0x2f, 0x69, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x65, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_intranet_proto_rawDescOnce sync.Once
	file_intranet_proto_rawDescData = file_intranet_proto_rawDesc
)

func file_intranet_proto_rawDescGZIP() []byte {
	file_intranet_proto_rawDescOnce.Do(func() {
		file_intranet_proto_rawDescData = protoimpl.X.CompressGZIP(file_intranet_proto_rawDescData)
	})
	return file_intranet_proto_rawDescData
}

var file_intranet_proto_msgTypes = make([]protoimpl.MessageInfo, 92)
var file_intranet_proto_goTypes = []interface{}{
	(*AddInsideInstallPlanReq)(nil),        // 0: intranetclient.AddInsideInstallPlanReq
	(*InsideInstallPlanCommonResp)(nil),    // 1: intranetclient.InsideInstallPlanCommonResp
	(*UpdateInsideInstallPlanReq)(nil),     // 2: intranetclient.UpdateInsideInstallPlanReq
	(*DeleteInsideInstallPlanReq)(nil),     // 3: intranetclient.DeleteInsideInstallPlanReq
	(*GetInsideInstallPlanReq)(nil),        // 4: intranetclient.GetInsideInstallPlanReq
	(*InsideInstallPlanCommon)(nil),        // 5: intranetclient.InsideInstallPlanCommon
	(*ListInsideInstallPlanReq)(nil),       // 6: intranetclient.ListInsideInstallPlanReq
	(*ListInsideInstallPlanResp)(nil),      // 7: intranetclient.ListInsideInstallPlanResp
	(*ListInsideInstallPlanData)(nil),      // 8: intranetclient.ListInsideInstallPlanData
	(*AddInsideOperationReq)(nil),          // 9: intranetclient.AddInsideOperationReq
	(*InsideOperationCommonResp)(nil),      // 10: intranetclient.InsideOperationCommonResp
	(*UpdateInsideOperationReq)(nil),       // 11: intranetclient.UpdateInsideOperationReq
	(*DeleteInsideOperationReq)(nil),       // 12: intranetclient.DeleteInsideOperationReq
	(*GetInsideOperationReq)(nil),          // 13: intranetclient.GetInsideOperationReq
	(*InsideOperationCommon)(nil),          // 14: intranetclient.InsideOperationCommon
	(*ListInsideOperationReq)(nil),         // 15: intranetclient.ListInsideOperationReq
	(*ListInsideOperationResp)(nil),        // 16: intranetclient.ListInsideOperationResp
	(*ListInsideOperationData)(nil),        // 17: intranetclient.ListInsideOperationData
	(*AddInsideProjectClusterReq)(nil),     // 18: intranetclient.AddInsideProjectClusterReq
	(*InsideProjectClusterCommonResp)(nil), // 19: intranetclient.InsideProjectClusterCommonResp
	(*UpdateInsideProjectClusterReq)(nil),  // 20: intranetclient.UpdateInsideProjectClusterReq
	(*DeleteInsideProjectClusterReq)(nil),  // 21: intranetclient.DeleteInsideProjectClusterReq
	(*GetInsideProjectClusterReq)(nil),     // 22: intranetclient.GetInsideProjectClusterReq
	(*InsideProjectClusterCommon)(nil),     // 23: intranetclient.InsideProjectClusterCommon
	(*ListInsideProjectClusterReq)(nil),    // 24: intranetclient.ListInsideProjectClusterReq
	(*ListInsideProjectClusterResp)(nil),   // 25: intranetclient.ListInsideProjectClusterResp
	(*ListInsideProjectClusterData)(nil),   // 26: intranetclient.ListInsideProjectClusterData
	(*AddInsideProxyHostReq)(nil),          // 27: intranetclient.AddInsideProxyHostReq
	(*InsideProxyHostCommonResp)(nil),      // 28: intranetclient.InsideProxyHostCommonResp
	(*UpdateInsideProxyHostReq)(nil),       // 29: intranetclient.UpdateInsideProxyHostReq
	(*DeleteInsideProxyHostReq)(nil),       // 30: intranetclient.DeleteInsideProxyHostReq
	(*GetInsideProxyHostReq)(nil),          // 31: intranetclient.GetInsideProxyHostReq
	(*InsideProxyHostCommon)(nil),          // 32: intranetclient.InsideProxyHostCommon
	(*ListInsideProxyHostReq)(nil),         // 33: intranetclient.ListInsideProxyHostReq
	(*ListInsideProxyHostResp)(nil),        // 34: intranetclient.ListInsideProxyHostResp
	(*ListInsideProxyHostData)(nil),        // 35: intranetclient.ListInsideProxyHostData
	(*AddInsideServerReq)(nil),             // 36: intranetclient.AddInsideServerReq
	(*InsideServerCommonResp)(nil),         // 37: intranetclient.InsideServerCommonResp
	(*UpdateInsideServerReq)(nil),          // 38: intranetclient.UpdateInsideServerReq
	(*DeleteInsideServerReq)(nil),          // 39: intranetclient.DeleteInsideServerReq
	(*GetInsideServerReq)(nil),             // 40: intranetclient.GetInsideServerReq
	(*InsideServerCommon)(nil),             // 41: intranetclient.InsideServerCommon
	(*ListInsideServerReq)(nil),            // 42: intranetclient.ListInsideServerReq
	(*ListInsideServerResp)(nil),           // 43: intranetclient.ListInsideServerResp
	(*ListInsideServerData)(nil),           // 44: intranetclient.ListInsideServerData
	(*AddInsideTasksReq)(nil),              // 45: intranetclient.AddInsideTasksReq
	(*InsideTasksCommonResp)(nil),          // 46: intranetclient.InsideTasksCommonResp
	(*UpdateInsideTasksReq)(nil),           // 47: intranetclient.UpdateInsideTasksReq
	(*DeleteInsideTasksReq)(nil),           // 48: intranetclient.DeleteInsideTasksReq
	(*GetInsideTasksReq)(nil),              // 49: intranetclient.GetInsideTasksReq
	(*InsideTasksCommon)(nil),              // 50: intranetclient.InsideTasksCommon
	(*ListInsideTasksReq)(nil),             // 51: intranetclient.ListInsideTasksReq
	(*ListInsideTasksResp)(nil),            // 52: intranetclient.ListInsideTasksResp
	(*ListInsideTasksData)(nil),            // 53: intranetclient.ListInsideTasksData
	(*InsideTasksOperationReq)(nil),        // 54: intranetclient.InsideTasksOperationReq
	(*InsideTasksOperationResp)(nil),       // 55: intranetclient.InsideTasksOperationResp
	(*AddInsideTasksLogsReq)(nil),          // 56: intranetclient.AddInsideTasksLogsReq
	(*InsideTasksLogsCommonResp)(nil),      // 57: intranetclient.InsideTasksLogsCommonResp
	(*UpdateInsideTasksLogsReq)(nil),       // 58: intranetclient.UpdateInsideTasksLogsReq
	(*DeleteInsideTasksLogsReq)(nil),       // 59: intranetclient.DeleteInsideTasksLogsReq
	(*GetInsideTasksLogsReq)(nil),          // 60: intranetclient.GetInsideTasksLogsReq
	(*InsideTasksLogsCommon)(nil),          // 61: intranetclient.InsideTasksLogsCommon
	(*ListInsideTasksLogsReq)(nil),         // 62: intranetclient.ListInsideTasksLogsReq
	(*ListInsideTasksLogsResp)(nil),        // 63: intranetclient.ListInsideTasksLogsResp
	(*ListInsideTasksLogsData)(nil),        // 64: intranetclient.ListInsideTasksLogsData
	(*AddInsideTasksPidReq)(nil),           // 65: intranetclient.AddInsideTasksPidReq
	(*InsideTasksPidCommonResp)(nil),       // 66: intranetclient.InsideTasksPidCommonResp
	(*UpdateInsideTasksPidReq)(nil),        // 67: intranetclient.UpdateInsideTasksPidReq
	(*DeleteInsideTasksPidReq)(nil),        // 68: intranetclient.DeleteInsideTasksPidReq
	(*GetInsideTasksPidReq)(nil),           // 69: intranetclient.GetInsideTasksPidReq
	(*InsideTasksPidCommon)(nil),           // 70: intranetclient.InsideTasksPidCommon
	(*ListInsideTasksPidReq)(nil),          // 71: intranetclient.ListInsideTasksPidReq
	(*ListInsideTasksPidResp)(nil),         // 72: intranetclient.ListInsideTasksPidResp
	(*ListInsideTasksPidData)(nil),         // 73: intranetclient.ListInsideTasksPidData
	(*AddInsideVersionReq)(nil),            // 74: intranetclient.AddInsideVersionReq
	(*InsideVersionCommonResp)(nil),        // 75: intranetclient.InsideVersionCommonResp
	(*UpdateInsideVersionReq)(nil),         // 76: intranetclient.UpdateInsideVersionReq
	(*DeleteInsideVersionReq)(nil),         // 77: intranetclient.DeleteInsideVersionReq
	(*GetInsideVersionReq)(nil),            // 78: intranetclient.GetInsideVersionReq
	(*InsideVersionCommon)(nil),            // 79: intranetclient.InsideVersionCommon
	(*ListInsideVersionReq)(nil),           // 80: intranetclient.ListInsideVersionReq
	(*ListInsideVersionResp)(nil),          // 81: intranetclient.ListInsideVersionResp
	(*ListInsideVersionData)(nil),          // 82: intranetclient.ListInsideVersionData
	(*AddInsideHostInfoReq)(nil),           // 83: intranetclient.AddInsideHostInfoReq
	(*InsideHostInfoCommonResp)(nil),       // 84: intranetclient.InsideHostInfoCommonResp
	(*UpdateInsideHostInfoReq)(nil),        // 85: intranetclient.UpdateInsideHostInfoReq
	(*DeleteInsideHostInfoReq)(nil),        // 86: intranetclient.DeleteInsideHostInfoReq
	(*GetInsideHostInfoReq)(nil),           // 87: intranetclient.GetInsideHostInfoReq
	(*InsideHostInfoCommon)(nil),           // 88: intranetclient.InsideHostInfoCommon
	(*ListInsideHostInfoReq)(nil),          // 89: intranetclient.ListInsideHostInfoReq
	(*ListInsideHostInfoResp)(nil),         // 90: intranetclient.ListInsideHostInfoResp
	(*ListInsideHostInfoData)(nil),         // 91: intranetclient.ListInsideHostInfoData
}
var file_intranet_proto_depIdxs = []int32{
	5,  // 0: intranetclient.AddInsideInstallPlanReq.one:type_name -> intranetclient.InsideInstallPlanCommon
	5,  // 1: intranetclient.UpdateInsideInstallPlanReq.one:type_name -> intranetclient.InsideInstallPlanCommon
	8,  // 2: intranetclient.ListInsideInstallPlanResp.rows:type_name -> intranetclient.ListInsideInstallPlanData
	14, // 3: intranetclient.AddInsideOperationReq.one:type_name -> intranetclient.InsideOperationCommon
	14, // 4: intranetclient.UpdateInsideOperationReq.one:type_name -> intranetclient.InsideOperationCommon
	17, // 5: intranetclient.ListInsideOperationResp.rows:type_name -> intranetclient.ListInsideOperationData
	23, // 6: intranetclient.AddInsideProjectClusterReq.one:type_name -> intranetclient.InsideProjectClusterCommon
	23, // 7: intranetclient.UpdateInsideProjectClusterReq.one:type_name -> intranetclient.InsideProjectClusterCommon
	26, // 8: intranetclient.ListInsideProjectClusterResp.rows:type_name -> intranetclient.ListInsideProjectClusterData
	32, // 9: intranetclient.AddInsideProxyHostReq.one:type_name -> intranetclient.InsideProxyHostCommon
	32, // 10: intranetclient.UpdateInsideProxyHostReq.one:type_name -> intranetclient.InsideProxyHostCommon
	35, // 11: intranetclient.ListInsideProxyHostResp.rows:type_name -> intranetclient.ListInsideProxyHostData
	41, // 12: intranetclient.AddInsideServerReq.one:type_name -> intranetclient.InsideServerCommon
	41, // 13: intranetclient.UpdateInsideServerReq.one:type_name -> intranetclient.InsideServerCommon
	44, // 14: intranetclient.ListInsideServerResp.rows:type_name -> intranetclient.ListInsideServerData
	50, // 15: intranetclient.AddInsideTasksReq.one:type_name -> intranetclient.InsideTasksCommon
	50, // 16: intranetclient.UpdateInsideTasksReq.one:type_name -> intranetclient.InsideTasksCommon
	53, // 17: intranetclient.ListInsideTasksResp.rows:type_name -> intranetclient.ListInsideTasksData
	61, // 18: intranetclient.AddInsideTasksLogsReq.one:type_name -> intranetclient.InsideTasksLogsCommon
	61, // 19: intranetclient.UpdateInsideTasksLogsReq.one:type_name -> intranetclient.InsideTasksLogsCommon
	64, // 20: intranetclient.ListInsideTasksLogsResp.rows:type_name -> intranetclient.ListInsideTasksLogsData
	70, // 21: intranetclient.AddInsideTasksPidReq.one:type_name -> intranetclient.InsideTasksPidCommon
	70, // 22: intranetclient.UpdateInsideTasksPidReq.one:type_name -> intranetclient.InsideTasksPidCommon
	73, // 23: intranetclient.ListInsideTasksPidResp.rows:type_name -> intranetclient.ListInsideTasksPidData
	79, // 24: intranetclient.AddInsideVersionReq.one:type_name -> intranetclient.InsideVersionCommon
	79, // 25: intranetclient.UpdateInsideVersionReq.one:type_name -> intranetclient.InsideVersionCommon
	82, // 26: intranetclient.ListInsideVersionResp.rows:type_name -> intranetclient.ListInsideVersionData
	88, // 27: intranetclient.AddInsideHostInfoReq.one:type_name -> intranetclient.InsideHostInfoCommon
	88, // 28: intranetclient.UpdateInsideHostInfoReq.one:type_name -> intranetclient.InsideHostInfoCommon
	91, // 29: intranetclient.ListInsideHostInfoResp.rows:type_name -> intranetclient.ListInsideHostInfoData
	0,  // 30: intranetclient.Intranet.InsideInstallPlanAdd:input_type -> intranetclient.AddInsideInstallPlanReq
	2,  // 31: intranetclient.Intranet.InsideInstallPlanUpdate:input_type -> intranetclient.UpdateInsideInstallPlanReq
	3,  // 32: intranetclient.Intranet.InsideInstallPlanDelete:input_type -> intranetclient.DeleteInsideInstallPlanReq
	4,  // 33: intranetclient.Intranet.InsideInstallPlanGet:input_type -> intranetclient.GetInsideInstallPlanReq
	6,  // 34: intranetclient.Intranet.InsideInstallPlanList:input_type -> intranetclient.ListInsideInstallPlanReq
	9,  // 35: intranetclient.Intranet.InsideOperationAdd:input_type -> intranetclient.AddInsideOperationReq
	11, // 36: intranetclient.Intranet.InsideOperationUpdate:input_type -> intranetclient.UpdateInsideOperationReq
	12, // 37: intranetclient.Intranet.InsideOperationDelete:input_type -> intranetclient.DeleteInsideOperationReq
	13, // 38: intranetclient.Intranet.InsideOperationGet:input_type -> intranetclient.GetInsideOperationReq
	15, // 39: intranetclient.Intranet.InsideOperationList:input_type -> intranetclient.ListInsideOperationReq
	18, // 40: intranetclient.Intranet.InsideProjectClusterAdd:input_type -> intranetclient.AddInsideProjectClusterReq
	20, // 41: intranetclient.Intranet.InsideProjectClusterUpdate:input_type -> intranetclient.UpdateInsideProjectClusterReq
	21, // 42: intranetclient.Intranet.InsideProjectClusterDelete:input_type -> intranetclient.DeleteInsideProjectClusterReq
	22, // 43: intranetclient.Intranet.InsideProjectClusterGet:input_type -> intranetclient.GetInsideProjectClusterReq
	24, // 44: intranetclient.Intranet.InsideProjectClusterList:input_type -> intranetclient.ListInsideProjectClusterReq
	27, // 45: intranetclient.Intranet.InsideProxyHostAdd:input_type -> intranetclient.AddInsideProxyHostReq
	29, // 46: intranetclient.Intranet.InsideProxyHostUpdate:input_type -> intranetclient.UpdateInsideProxyHostReq
	30, // 47: intranetclient.Intranet.InsideProxyHostDelete:input_type -> intranetclient.DeleteInsideProxyHostReq
	31, // 48: intranetclient.Intranet.InsideProxyHostGet:input_type -> intranetclient.GetInsideProxyHostReq
	33, // 49: intranetclient.Intranet.InsideProxyHostList:input_type -> intranetclient.ListInsideProxyHostReq
	36, // 50: intranetclient.Intranet.InsideServerAdd:input_type -> intranetclient.AddInsideServerReq
	38, // 51: intranetclient.Intranet.InsideServerUpdate:input_type -> intranetclient.UpdateInsideServerReq
	39, // 52: intranetclient.Intranet.InsideServerDelete:input_type -> intranetclient.DeleteInsideServerReq
	40, // 53: intranetclient.Intranet.InsideServerGet:input_type -> intranetclient.GetInsideServerReq
	42, // 54: intranetclient.Intranet.InsideServerList:input_type -> intranetclient.ListInsideServerReq
	45, // 55: intranetclient.Intranet.InsideTasksAdd:input_type -> intranetclient.AddInsideTasksReq
	47, // 56: intranetclient.Intranet.InsideTasksUpdate:input_type -> intranetclient.UpdateInsideTasksReq
	48, // 57: intranetclient.Intranet.InsideTasksDelete:input_type -> intranetclient.DeleteInsideTasksReq
	49, // 58: intranetclient.Intranet.InsideTasksGet:input_type -> intranetclient.GetInsideTasksReq
	51, // 59: intranetclient.Intranet.InsideTasksList:input_type -> intranetclient.ListInsideTasksReq
	54, // 60: intranetclient.Intranet.InsideTasksOperation:input_type -> intranetclient.InsideTasksOperationReq
	56, // 61: intranetclient.Intranet.InsideTasksLogsAdd:input_type -> intranetclient.AddInsideTasksLogsReq
	58, // 62: intranetclient.Intranet.InsideTasksLogsUpdate:input_type -> intranetclient.UpdateInsideTasksLogsReq
	59, // 63: intranetclient.Intranet.InsideTasksLogsDelete:input_type -> intranetclient.DeleteInsideTasksLogsReq
	60, // 64: intranetclient.Intranet.InsideTasksLogsGet:input_type -> intranetclient.GetInsideTasksLogsReq
	62, // 65: intranetclient.Intranet.InsideTasksLogsList:input_type -> intranetclient.ListInsideTasksLogsReq
	65, // 66: intranetclient.Intranet.InsideTasksPidAdd:input_type -> intranetclient.AddInsideTasksPidReq
	67, // 67: intranetclient.Intranet.InsideTasksPidUpdate:input_type -> intranetclient.UpdateInsideTasksPidReq
	68, // 68: intranetclient.Intranet.InsideTasksPidDelete:input_type -> intranetclient.DeleteInsideTasksPidReq
	69, // 69: intranetclient.Intranet.InsideTasksPidGet:input_type -> intranetclient.GetInsideTasksPidReq
	71, // 70: intranetclient.Intranet.InsideTasksPidList:input_type -> intranetclient.ListInsideTasksPidReq
	74, // 71: intranetclient.Intranet.InsideVersionAdd:input_type -> intranetclient.AddInsideVersionReq
	76, // 72: intranetclient.Intranet.InsideVersionUpdate:input_type -> intranetclient.UpdateInsideVersionReq
	77, // 73: intranetclient.Intranet.InsideVersionDelete:input_type -> intranetclient.DeleteInsideVersionReq
	78, // 74: intranetclient.Intranet.InsideVersionGet:input_type -> intranetclient.GetInsideVersionReq
	80, // 75: intranetclient.Intranet.InsideVersionList:input_type -> intranetclient.ListInsideVersionReq
	83, // 76: intranetclient.Intranet.InsideHostInfoAdd:input_type -> intranetclient.AddInsideHostInfoReq
	85, // 77: intranetclient.Intranet.InsideHostInfoUpdate:input_type -> intranetclient.UpdateInsideHostInfoReq
	86, // 78: intranetclient.Intranet.InsideHostInfoDelete:input_type -> intranetclient.DeleteInsideHostInfoReq
	87, // 79: intranetclient.Intranet.InsideHostInfoGet:input_type -> intranetclient.GetInsideHostInfoReq
	89, // 80: intranetclient.Intranet.InsideHostInfoList:input_type -> intranetclient.ListInsideHostInfoReq
	1,  // 81: intranetclient.Intranet.InsideInstallPlanAdd:output_type -> intranetclient.InsideInstallPlanCommonResp
	1,  // 82: intranetclient.Intranet.InsideInstallPlanUpdate:output_type -> intranetclient.InsideInstallPlanCommonResp
	1,  // 83: intranetclient.Intranet.InsideInstallPlanDelete:output_type -> intranetclient.InsideInstallPlanCommonResp
	8,  // 84: intranetclient.Intranet.InsideInstallPlanGet:output_type -> intranetclient.ListInsideInstallPlanData
	7,  // 85: intranetclient.Intranet.InsideInstallPlanList:output_type -> intranetclient.ListInsideInstallPlanResp
	10, // 86: intranetclient.Intranet.InsideOperationAdd:output_type -> intranetclient.InsideOperationCommonResp
	10, // 87: intranetclient.Intranet.InsideOperationUpdate:output_type -> intranetclient.InsideOperationCommonResp
	10, // 88: intranetclient.Intranet.InsideOperationDelete:output_type -> intranetclient.InsideOperationCommonResp
	17, // 89: intranetclient.Intranet.InsideOperationGet:output_type -> intranetclient.ListInsideOperationData
	16, // 90: intranetclient.Intranet.InsideOperationList:output_type -> intranetclient.ListInsideOperationResp
	19, // 91: intranetclient.Intranet.InsideProjectClusterAdd:output_type -> intranetclient.InsideProjectClusterCommonResp
	19, // 92: intranetclient.Intranet.InsideProjectClusterUpdate:output_type -> intranetclient.InsideProjectClusterCommonResp
	19, // 93: intranetclient.Intranet.InsideProjectClusterDelete:output_type -> intranetclient.InsideProjectClusterCommonResp
	26, // 94: intranetclient.Intranet.InsideProjectClusterGet:output_type -> intranetclient.ListInsideProjectClusterData
	25, // 95: intranetclient.Intranet.InsideProjectClusterList:output_type -> intranetclient.ListInsideProjectClusterResp
	28, // 96: intranetclient.Intranet.InsideProxyHostAdd:output_type -> intranetclient.InsideProxyHostCommonResp
	28, // 97: intranetclient.Intranet.InsideProxyHostUpdate:output_type -> intranetclient.InsideProxyHostCommonResp
	28, // 98: intranetclient.Intranet.InsideProxyHostDelete:output_type -> intranetclient.InsideProxyHostCommonResp
	35, // 99: intranetclient.Intranet.InsideProxyHostGet:output_type -> intranetclient.ListInsideProxyHostData
	34, // 100: intranetclient.Intranet.InsideProxyHostList:output_type -> intranetclient.ListInsideProxyHostResp
	37, // 101: intranetclient.Intranet.InsideServerAdd:output_type -> intranetclient.InsideServerCommonResp
	37, // 102: intranetclient.Intranet.InsideServerUpdate:output_type -> intranetclient.InsideServerCommonResp
	37, // 103: intranetclient.Intranet.InsideServerDelete:output_type -> intranetclient.InsideServerCommonResp
	44, // 104: intranetclient.Intranet.InsideServerGet:output_type -> intranetclient.ListInsideServerData
	43, // 105: intranetclient.Intranet.InsideServerList:output_type -> intranetclient.ListInsideServerResp
	46, // 106: intranetclient.Intranet.InsideTasksAdd:output_type -> intranetclient.InsideTasksCommonResp
	46, // 107: intranetclient.Intranet.InsideTasksUpdate:output_type -> intranetclient.InsideTasksCommonResp
	46, // 108: intranetclient.Intranet.InsideTasksDelete:output_type -> intranetclient.InsideTasksCommonResp
	53, // 109: intranetclient.Intranet.InsideTasksGet:output_type -> intranetclient.ListInsideTasksData
	52, // 110: intranetclient.Intranet.InsideTasksList:output_type -> intranetclient.ListInsideTasksResp
	55, // 111: intranetclient.Intranet.InsideTasksOperation:output_type -> intranetclient.InsideTasksOperationResp
	57, // 112: intranetclient.Intranet.InsideTasksLogsAdd:output_type -> intranetclient.InsideTasksLogsCommonResp
	57, // 113: intranetclient.Intranet.InsideTasksLogsUpdate:output_type -> intranetclient.InsideTasksLogsCommonResp
	57, // 114: intranetclient.Intranet.InsideTasksLogsDelete:output_type -> intranetclient.InsideTasksLogsCommonResp
	64, // 115: intranetclient.Intranet.InsideTasksLogsGet:output_type -> intranetclient.ListInsideTasksLogsData
	63, // 116: intranetclient.Intranet.InsideTasksLogsList:output_type -> intranetclient.ListInsideTasksLogsResp
	66, // 117: intranetclient.Intranet.InsideTasksPidAdd:output_type -> intranetclient.InsideTasksPidCommonResp
	66, // 118: intranetclient.Intranet.InsideTasksPidUpdate:output_type -> intranetclient.InsideTasksPidCommonResp
	66, // 119: intranetclient.Intranet.InsideTasksPidDelete:output_type -> intranetclient.InsideTasksPidCommonResp
	73, // 120: intranetclient.Intranet.InsideTasksPidGet:output_type -> intranetclient.ListInsideTasksPidData
	72, // 121: intranetclient.Intranet.InsideTasksPidList:output_type -> intranetclient.ListInsideTasksPidResp
	75, // 122: intranetclient.Intranet.InsideVersionAdd:output_type -> intranetclient.InsideVersionCommonResp
	75, // 123: intranetclient.Intranet.InsideVersionUpdate:output_type -> intranetclient.InsideVersionCommonResp
	75, // 124: intranetclient.Intranet.InsideVersionDelete:output_type -> intranetclient.InsideVersionCommonResp
	82, // 125: intranetclient.Intranet.InsideVersionGet:output_type -> intranetclient.ListInsideVersionData
	81, // 126: intranetclient.Intranet.InsideVersionList:output_type -> intranetclient.ListInsideVersionResp
	84, // 127: intranetclient.Intranet.InsideHostInfoAdd:output_type -> intranetclient.InsideHostInfoCommonResp
	84, // 128: intranetclient.Intranet.InsideHostInfoUpdate:output_type -> intranetclient.InsideHostInfoCommonResp
	84, // 129: intranetclient.Intranet.InsideHostInfoDelete:output_type -> intranetclient.InsideHostInfoCommonResp
	91, // 130: intranetclient.Intranet.InsideHostInfoGet:output_type -> intranetclient.ListInsideHostInfoData
	90, // 131: intranetclient.Intranet.InsideHostInfoList:output_type -> intranetclient.ListInsideHostInfoResp
	81, // [81:132] is the sub-list for method output_type
	30, // [30:81] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_intranet_proto_init() }
func file_intranet_proto_init() {
	if File_intranet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_intranet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideInstallPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideInstallPlanCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideInstallPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideInstallPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideInstallPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideInstallPlanCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideInstallPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideInstallPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideInstallPlanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideOperationCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideOperationCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideOperationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideOperationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideProjectClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideProjectClusterCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideProjectClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideProjectClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideProjectClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideProjectClusterCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideProjectClusterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideProjectClusterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideProjectClusterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideProxyHostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideProxyHostCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideProxyHostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideProxyHostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideProxyHostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideProxyHostCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideProxyHostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideProxyHostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideProxyHostData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideServerCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideServerCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideServerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideTasksCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideTasksCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideTasksOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideTasksOperationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideTasksLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideTasksLogsCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideTasksLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideTasksLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideTasksLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideTasksLogsCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksLogsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksLogsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideTasksPidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideTasksPidCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideTasksPidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideTasksPidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideTasksPidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideTasksPidCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksPidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksPidResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideTasksPidData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideVersionCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideVersionCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideVersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideVersionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInsideHostInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideHostInfoCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInsideHostInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInsideHostInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInsideHostInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsideHostInfoCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideHostInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideHostInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_intranet_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsideHostInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_intranet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   92,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_intranet_proto_goTypes,
		DependencyIndexes: file_intranet_proto_depIdxs,
		MessageInfos:      file_intranet_proto_msgTypes,
	}.Build()
	File_intranet_proto = out.File
	file_intranet_proto_rawDesc = nil
	file_intranet_proto_goTypes = nil
	file_intranet_proto_depIdxs = nil
}
