// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.8.0
// source: intranet.proto

package intranetclient

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// IntranetClient is the client API for Intranet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type IntranetClient interface {
	//InsideInstallPlan Rpc Start
	InsideInstallPlanAdd(ctx context.Context, in *AddInsideInstallPlanReq, opts ...grpc.CallOption) (*InsideInstallPlanCommonResp, error)
	InsideInstallPlanUpdate(ctx context.Context, in *UpdateInsideInstallPlanReq, opts ...grpc.CallOption) (*InsideInstallPlanCommonResp, error)
	InsideInstallPlanDelete(ctx context.Context, in *DeleteInsideInstallPlanReq, opts ...grpc.CallOption) (*InsideInstallPlanCommonResp, error)
	InsideInstallPlanGet(ctx context.Context, in *GetInsideInstallPlanReq, opts ...grpc.CallOption) (*ListInsideInstallPlanData, error)
	InsideInstallPlanList(ctx context.Context, in *ListInsideInstallPlanReq, opts ...grpc.CallOption) (*ListInsideInstallPlanResp, error)
	//InsideInstallPlan Rpc End
	//InsideOperation Rpc Start
	InsideOperationAdd(ctx context.Context, in *AddInsideOperationReq, opts ...grpc.CallOption) (*InsideOperationCommonResp, error)
	InsideOperationUpdate(ctx context.Context, in *UpdateInsideOperationReq, opts ...grpc.CallOption) (*InsideOperationCommonResp, error)
	InsideOperationDelete(ctx context.Context, in *DeleteInsideOperationReq, opts ...grpc.CallOption) (*InsideOperationCommonResp, error)
	InsideOperationGet(ctx context.Context, in *GetInsideOperationReq, opts ...grpc.CallOption) (*ListInsideOperationData, error)
	InsideOperationList(ctx context.Context, in *ListInsideOperationReq, opts ...grpc.CallOption) (*ListInsideOperationResp, error)
	//InsideOperation Rpc End
	//InsideProjectCluster Rpc Start
	InsideProjectClusterAdd(ctx context.Context, in *AddInsideProjectClusterReq, opts ...grpc.CallOption) (*InsideProjectClusterCommonResp, error)
	InsideProjectClusterUpdate(ctx context.Context, in *UpdateInsideProjectClusterReq, opts ...grpc.CallOption) (*InsideProjectClusterCommonResp, error)
	InsideProjectClusterDelete(ctx context.Context, in *DeleteInsideProjectClusterReq, opts ...grpc.CallOption) (*InsideProjectClusterCommonResp, error)
	InsideProjectClusterGet(ctx context.Context, in *GetInsideProjectClusterReq, opts ...grpc.CallOption) (*ListInsideProjectClusterData, error)
	InsideProjectClusterList(ctx context.Context, in *ListInsideProjectClusterReq, opts ...grpc.CallOption) (*ListInsideProjectClusterResp, error)
	//InsideProjectCluster Rpc End
	//InsideProxyHost Rpc Start
	InsideProxyHostAdd(ctx context.Context, in *AddInsideProxyHostReq, opts ...grpc.CallOption) (*InsideProxyHostCommonResp, error)
	InsideProxyHostUpdate(ctx context.Context, in *UpdateInsideProxyHostReq, opts ...grpc.CallOption) (*InsideProxyHostCommonResp, error)
	InsideProxyHostDelete(ctx context.Context, in *DeleteInsideProxyHostReq, opts ...grpc.CallOption) (*InsideProxyHostCommonResp, error)
	InsideProxyHostGet(ctx context.Context, in *GetInsideProxyHostReq, opts ...grpc.CallOption) (*ListInsideProxyHostData, error)
	InsideProxyHostList(ctx context.Context, in *ListInsideProxyHostReq, opts ...grpc.CallOption) (*ListInsideProxyHostResp, error)
	//InsideServer Rpc Start
	InsideServerAdd(ctx context.Context, in *AddInsideServerReq, opts ...grpc.CallOption) (*InsideServerCommonResp, error)
	InsideServerUpdate(ctx context.Context, in *UpdateInsideServerReq, opts ...grpc.CallOption) (*InsideServerCommonResp, error)
	InsideServerDelete(ctx context.Context, in *DeleteInsideServerReq, opts ...grpc.CallOption) (*InsideServerCommonResp, error)
	InsideServerGet(ctx context.Context, in *GetInsideServerReq, opts ...grpc.CallOption) (*ListInsideServerData, error)
	InsideServerList(ctx context.Context, in *ListInsideServerReq, opts ...grpc.CallOption) (*ListInsideServerResp, error)
	//InsideServer Rpc End
	//InsideTasks Rpc Start
	InsideTasksAdd(ctx context.Context, in *AddInsideTasksReq, opts ...grpc.CallOption) (*InsideTasksCommonResp, error)
	InsideTasksUpdate(ctx context.Context, in *UpdateInsideTasksReq, opts ...grpc.CallOption) (*InsideTasksCommonResp, error)
	InsideTasksDelete(ctx context.Context, in *DeleteInsideTasksReq, opts ...grpc.CallOption) (*InsideTasksCommonResp, error)
	InsideTasksGet(ctx context.Context, in *GetInsideTasksReq, opts ...grpc.CallOption) (*ListInsideTasksData, error)
	InsideTasksList(ctx context.Context, in *ListInsideTasksReq, opts ...grpc.CallOption) (*ListInsideTasksResp, error)
	InsideTasksOperation(ctx context.Context, in *InsideTasksOperationReq, opts ...grpc.CallOption) (*InsideTasksOperationResp, error)
	//InsideTasks Rpc End
	//InsideTasksLogs Rpc Start
	InsideTasksLogsAdd(ctx context.Context, in *AddInsideTasksLogsReq, opts ...grpc.CallOption) (*InsideTasksLogsCommonResp, error)
	InsideTasksLogsUpdate(ctx context.Context, in *UpdateInsideTasksLogsReq, opts ...grpc.CallOption) (*InsideTasksLogsCommonResp, error)
	InsideTasksLogsDelete(ctx context.Context, in *DeleteInsideTasksLogsReq, opts ...grpc.CallOption) (*InsideTasksLogsCommonResp, error)
	InsideTasksLogsGet(ctx context.Context, in *GetInsideTasksLogsReq, opts ...grpc.CallOption) (*ListInsideTasksLogsData, error)
	InsideTasksLogsList(ctx context.Context, in *ListInsideTasksLogsReq, opts ...grpc.CallOption) (*ListInsideTasksLogsResp, error)
	//InsideTasksLogs Rpc End
	//InsideTasksPid Rpc Start
	InsideTasksPidAdd(ctx context.Context, in *AddInsideTasksPidReq, opts ...grpc.CallOption) (*InsideTasksPidCommonResp, error)
	InsideTasksPidUpdate(ctx context.Context, in *UpdateInsideTasksPidReq, opts ...grpc.CallOption) (*InsideTasksPidCommonResp, error)
	InsideTasksPidDelete(ctx context.Context, in *DeleteInsideTasksPidReq, opts ...grpc.CallOption) (*InsideTasksPidCommonResp, error)
	InsideTasksPidGet(ctx context.Context, in *GetInsideTasksPidReq, opts ...grpc.CallOption) (*ListInsideTasksPidData, error)
	InsideTasksPidList(ctx context.Context, in *ListInsideTasksPidReq, opts ...grpc.CallOption) (*ListInsideTasksPidResp, error)
	//InsideVersion Rpc Start
	InsideVersionAdd(ctx context.Context, in *AddInsideVersionReq, opts ...grpc.CallOption) (*InsideVersionCommonResp, error)
	InsideVersionUpdate(ctx context.Context, in *UpdateInsideVersionReq, opts ...grpc.CallOption) (*InsideVersionCommonResp, error)
	InsideVersionDelete(ctx context.Context, in *DeleteInsideVersionReq, opts ...grpc.CallOption) (*InsideVersionCommonResp, error)
	InsideVersionGet(ctx context.Context, in *GetInsideVersionReq, opts ...grpc.CallOption) (*ListInsideVersionData, error)
	InsideVersionList(ctx context.Context, in *ListInsideVersionReq, opts ...grpc.CallOption) (*ListInsideVersionResp, error)
	//InsideHostInfo Rpc Start
	InsideHostInfoAdd(ctx context.Context, in *AddInsideHostInfoReq, opts ...grpc.CallOption) (*InsideHostInfoCommonResp, error)
	InsideHostInfoUpdate(ctx context.Context, in *UpdateInsideHostInfoReq, opts ...grpc.CallOption) (*InsideHostInfoCommonResp, error)
	InsideHostInfoDelete(ctx context.Context, in *DeleteInsideHostInfoReq, opts ...grpc.CallOption) (*InsideHostInfoCommonResp, error)
	InsideHostInfoGet(ctx context.Context, in *GetInsideHostInfoReq, opts ...grpc.CallOption) (*ListInsideHostInfoData, error)
	InsideHostInfoList(ctx context.Context, in *ListInsideHostInfoReq, opts ...grpc.CallOption) (*ListInsideHostInfoResp, error)
}

type intranetClient struct {
	cc grpc.ClientConnInterface
}

func NewIntranetClient(cc grpc.ClientConnInterface) IntranetClient {
	return &intranetClient{cc}
}

func (c *intranetClient) InsideInstallPlanAdd(ctx context.Context, in *AddInsideInstallPlanReq, opts ...grpc.CallOption) (*InsideInstallPlanCommonResp, error) {
	out := new(InsideInstallPlanCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideInstallPlanAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideInstallPlanUpdate(ctx context.Context, in *UpdateInsideInstallPlanReq, opts ...grpc.CallOption) (*InsideInstallPlanCommonResp, error) {
	out := new(InsideInstallPlanCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideInstallPlanUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideInstallPlanDelete(ctx context.Context, in *DeleteInsideInstallPlanReq, opts ...grpc.CallOption) (*InsideInstallPlanCommonResp, error) {
	out := new(InsideInstallPlanCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideInstallPlanDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideInstallPlanGet(ctx context.Context, in *GetInsideInstallPlanReq, opts ...grpc.CallOption) (*ListInsideInstallPlanData, error) {
	out := new(ListInsideInstallPlanData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideInstallPlanGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideInstallPlanList(ctx context.Context, in *ListInsideInstallPlanReq, opts ...grpc.CallOption) (*ListInsideInstallPlanResp, error) {
	out := new(ListInsideInstallPlanResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideInstallPlanList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideOperationAdd(ctx context.Context, in *AddInsideOperationReq, opts ...grpc.CallOption) (*InsideOperationCommonResp, error) {
	out := new(InsideOperationCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideOperationAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideOperationUpdate(ctx context.Context, in *UpdateInsideOperationReq, opts ...grpc.CallOption) (*InsideOperationCommonResp, error) {
	out := new(InsideOperationCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideOperationUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideOperationDelete(ctx context.Context, in *DeleteInsideOperationReq, opts ...grpc.CallOption) (*InsideOperationCommonResp, error) {
	out := new(InsideOperationCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideOperationDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideOperationGet(ctx context.Context, in *GetInsideOperationReq, opts ...grpc.CallOption) (*ListInsideOperationData, error) {
	out := new(ListInsideOperationData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideOperationGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideOperationList(ctx context.Context, in *ListInsideOperationReq, opts ...grpc.CallOption) (*ListInsideOperationResp, error) {
	out := new(ListInsideOperationResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideOperationList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProjectClusterAdd(ctx context.Context, in *AddInsideProjectClusterReq, opts ...grpc.CallOption) (*InsideProjectClusterCommonResp, error) {
	out := new(InsideProjectClusterCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProjectClusterAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProjectClusterUpdate(ctx context.Context, in *UpdateInsideProjectClusterReq, opts ...grpc.CallOption) (*InsideProjectClusterCommonResp, error) {
	out := new(InsideProjectClusterCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProjectClusterUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProjectClusterDelete(ctx context.Context, in *DeleteInsideProjectClusterReq, opts ...grpc.CallOption) (*InsideProjectClusterCommonResp, error) {
	out := new(InsideProjectClusterCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProjectClusterDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProjectClusterGet(ctx context.Context, in *GetInsideProjectClusterReq, opts ...grpc.CallOption) (*ListInsideProjectClusterData, error) {
	out := new(ListInsideProjectClusterData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProjectClusterGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProjectClusterList(ctx context.Context, in *ListInsideProjectClusterReq, opts ...grpc.CallOption) (*ListInsideProjectClusterResp, error) {
	out := new(ListInsideProjectClusterResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProjectClusterList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProxyHostAdd(ctx context.Context, in *AddInsideProxyHostReq, opts ...grpc.CallOption) (*InsideProxyHostCommonResp, error) {
	out := new(InsideProxyHostCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProxyHostAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProxyHostUpdate(ctx context.Context, in *UpdateInsideProxyHostReq, opts ...grpc.CallOption) (*InsideProxyHostCommonResp, error) {
	out := new(InsideProxyHostCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProxyHostUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProxyHostDelete(ctx context.Context, in *DeleteInsideProxyHostReq, opts ...grpc.CallOption) (*InsideProxyHostCommonResp, error) {
	out := new(InsideProxyHostCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProxyHostDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProxyHostGet(ctx context.Context, in *GetInsideProxyHostReq, opts ...grpc.CallOption) (*ListInsideProxyHostData, error) {
	out := new(ListInsideProxyHostData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProxyHostGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideProxyHostList(ctx context.Context, in *ListInsideProxyHostReq, opts ...grpc.CallOption) (*ListInsideProxyHostResp, error) {
	out := new(ListInsideProxyHostResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideProxyHostList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideServerAdd(ctx context.Context, in *AddInsideServerReq, opts ...grpc.CallOption) (*InsideServerCommonResp, error) {
	out := new(InsideServerCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideServerAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideServerUpdate(ctx context.Context, in *UpdateInsideServerReq, opts ...grpc.CallOption) (*InsideServerCommonResp, error) {
	out := new(InsideServerCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideServerUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideServerDelete(ctx context.Context, in *DeleteInsideServerReq, opts ...grpc.CallOption) (*InsideServerCommonResp, error) {
	out := new(InsideServerCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideServerDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideServerGet(ctx context.Context, in *GetInsideServerReq, opts ...grpc.CallOption) (*ListInsideServerData, error) {
	out := new(ListInsideServerData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideServerGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideServerList(ctx context.Context, in *ListInsideServerReq, opts ...grpc.CallOption) (*ListInsideServerResp, error) {
	out := new(ListInsideServerResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideServerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksAdd(ctx context.Context, in *AddInsideTasksReq, opts ...grpc.CallOption) (*InsideTasksCommonResp, error) {
	out := new(InsideTasksCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksUpdate(ctx context.Context, in *UpdateInsideTasksReq, opts ...grpc.CallOption) (*InsideTasksCommonResp, error) {
	out := new(InsideTasksCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksDelete(ctx context.Context, in *DeleteInsideTasksReq, opts ...grpc.CallOption) (*InsideTasksCommonResp, error) {
	out := new(InsideTasksCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksGet(ctx context.Context, in *GetInsideTasksReq, opts ...grpc.CallOption) (*ListInsideTasksData, error) {
	out := new(ListInsideTasksData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksList(ctx context.Context, in *ListInsideTasksReq, opts ...grpc.CallOption) (*ListInsideTasksResp, error) {
	out := new(ListInsideTasksResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksOperation(ctx context.Context, in *InsideTasksOperationReq, opts ...grpc.CallOption) (*InsideTasksOperationResp, error) {
	out := new(InsideTasksOperationResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksLogsAdd(ctx context.Context, in *AddInsideTasksLogsReq, opts ...grpc.CallOption) (*InsideTasksLogsCommonResp, error) {
	out := new(InsideTasksLogsCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksLogsAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksLogsUpdate(ctx context.Context, in *UpdateInsideTasksLogsReq, opts ...grpc.CallOption) (*InsideTasksLogsCommonResp, error) {
	out := new(InsideTasksLogsCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksLogsUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksLogsDelete(ctx context.Context, in *DeleteInsideTasksLogsReq, opts ...grpc.CallOption) (*InsideTasksLogsCommonResp, error) {
	out := new(InsideTasksLogsCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksLogsDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksLogsGet(ctx context.Context, in *GetInsideTasksLogsReq, opts ...grpc.CallOption) (*ListInsideTasksLogsData, error) {
	out := new(ListInsideTasksLogsData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksLogsGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksLogsList(ctx context.Context, in *ListInsideTasksLogsReq, opts ...grpc.CallOption) (*ListInsideTasksLogsResp, error) {
	out := new(ListInsideTasksLogsResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksLogsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksPidAdd(ctx context.Context, in *AddInsideTasksPidReq, opts ...grpc.CallOption) (*InsideTasksPidCommonResp, error) {
	out := new(InsideTasksPidCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksPidAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksPidUpdate(ctx context.Context, in *UpdateInsideTasksPidReq, opts ...grpc.CallOption) (*InsideTasksPidCommonResp, error) {
	out := new(InsideTasksPidCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksPidUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksPidDelete(ctx context.Context, in *DeleteInsideTasksPidReq, opts ...grpc.CallOption) (*InsideTasksPidCommonResp, error) {
	out := new(InsideTasksPidCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksPidDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksPidGet(ctx context.Context, in *GetInsideTasksPidReq, opts ...grpc.CallOption) (*ListInsideTasksPidData, error) {
	out := new(ListInsideTasksPidData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksPidGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideTasksPidList(ctx context.Context, in *ListInsideTasksPidReq, opts ...grpc.CallOption) (*ListInsideTasksPidResp, error) {
	out := new(ListInsideTasksPidResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideTasksPidList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideVersionAdd(ctx context.Context, in *AddInsideVersionReq, opts ...grpc.CallOption) (*InsideVersionCommonResp, error) {
	out := new(InsideVersionCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideVersionAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideVersionUpdate(ctx context.Context, in *UpdateInsideVersionReq, opts ...grpc.CallOption) (*InsideVersionCommonResp, error) {
	out := new(InsideVersionCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideVersionUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideVersionDelete(ctx context.Context, in *DeleteInsideVersionReq, opts ...grpc.CallOption) (*InsideVersionCommonResp, error) {
	out := new(InsideVersionCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideVersionDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideVersionGet(ctx context.Context, in *GetInsideVersionReq, opts ...grpc.CallOption) (*ListInsideVersionData, error) {
	out := new(ListInsideVersionData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideVersionGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideVersionList(ctx context.Context, in *ListInsideVersionReq, opts ...grpc.CallOption) (*ListInsideVersionResp, error) {
	out := new(ListInsideVersionResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideVersionList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideHostInfoAdd(ctx context.Context, in *AddInsideHostInfoReq, opts ...grpc.CallOption) (*InsideHostInfoCommonResp, error) {
	out := new(InsideHostInfoCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideHostInfoAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideHostInfoUpdate(ctx context.Context, in *UpdateInsideHostInfoReq, opts ...grpc.CallOption) (*InsideHostInfoCommonResp, error) {
	out := new(InsideHostInfoCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideHostInfoUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideHostInfoDelete(ctx context.Context, in *DeleteInsideHostInfoReq, opts ...grpc.CallOption) (*InsideHostInfoCommonResp, error) {
	out := new(InsideHostInfoCommonResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideHostInfoDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideHostInfoGet(ctx context.Context, in *GetInsideHostInfoReq, opts ...grpc.CallOption) (*ListInsideHostInfoData, error) {
	out := new(ListInsideHostInfoData)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideHostInfoGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intranetClient) InsideHostInfoList(ctx context.Context, in *ListInsideHostInfoReq, opts ...grpc.CallOption) (*ListInsideHostInfoResp, error) {
	out := new(ListInsideHostInfoResp)
	err := c.cc.Invoke(ctx, "/intranetclient.Intranet/InsideHostInfoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IntranetServer is the server API for Intranet service.
// All implementations must embed UnimplementedIntranetServer
// for forward compatibility
type IntranetServer interface {
	//InsideInstallPlan Rpc Start
	InsideInstallPlanAdd(context.Context, *AddInsideInstallPlanReq) (*InsideInstallPlanCommonResp, error)
	InsideInstallPlanUpdate(context.Context, *UpdateInsideInstallPlanReq) (*InsideInstallPlanCommonResp, error)
	InsideInstallPlanDelete(context.Context, *DeleteInsideInstallPlanReq) (*InsideInstallPlanCommonResp, error)
	InsideInstallPlanGet(context.Context, *GetInsideInstallPlanReq) (*ListInsideInstallPlanData, error)
	InsideInstallPlanList(context.Context, *ListInsideInstallPlanReq) (*ListInsideInstallPlanResp, error)
	//InsideInstallPlan Rpc End
	//InsideOperation Rpc Start
	InsideOperationAdd(context.Context, *AddInsideOperationReq) (*InsideOperationCommonResp, error)
	InsideOperationUpdate(context.Context, *UpdateInsideOperationReq) (*InsideOperationCommonResp, error)
	InsideOperationDelete(context.Context, *DeleteInsideOperationReq) (*InsideOperationCommonResp, error)
	InsideOperationGet(context.Context, *GetInsideOperationReq) (*ListInsideOperationData, error)
	InsideOperationList(context.Context, *ListInsideOperationReq) (*ListInsideOperationResp, error)
	//InsideOperation Rpc End
	//InsideProjectCluster Rpc Start
	InsideProjectClusterAdd(context.Context, *AddInsideProjectClusterReq) (*InsideProjectClusterCommonResp, error)
	InsideProjectClusterUpdate(context.Context, *UpdateInsideProjectClusterReq) (*InsideProjectClusterCommonResp, error)
	InsideProjectClusterDelete(context.Context, *DeleteInsideProjectClusterReq) (*InsideProjectClusterCommonResp, error)
	InsideProjectClusterGet(context.Context, *GetInsideProjectClusterReq) (*ListInsideProjectClusterData, error)
	InsideProjectClusterList(context.Context, *ListInsideProjectClusterReq) (*ListInsideProjectClusterResp, error)
	//InsideProjectCluster Rpc End
	//InsideProxyHost Rpc Start
	InsideProxyHostAdd(context.Context, *AddInsideProxyHostReq) (*InsideProxyHostCommonResp, error)
	InsideProxyHostUpdate(context.Context, *UpdateInsideProxyHostReq) (*InsideProxyHostCommonResp, error)
	InsideProxyHostDelete(context.Context, *DeleteInsideProxyHostReq) (*InsideProxyHostCommonResp, error)
	InsideProxyHostGet(context.Context, *GetInsideProxyHostReq) (*ListInsideProxyHostData, error)
	InsideProxyHostList(context.Context, *ListInsideProxyHostReq) (*ListInsideProxyHostResp, error)
	//InsideServer Rpc Start
	InsideServerAdd(context.Context, *AddInsideServerReq) (*InsideServerCommonResp, error)
	InsideServerUpdate(context.Context, *UpdateInsideServerReq) (*InsideServerCommonResp, error)
	InsideServerDelete(context.Context, *DeleteInsideServerReq) (*InsideServerCommonResp, error)
	InsideServerGet(context.Context, *GetInsideServerReq) (*ListInsideServerData, error)
	InsideServerList(context.Context, *ListInsideServerReq) (*ListInsideServerResp, error)
	//InsideServer Rpc End
	//InsideTasks Rpc Start
	InsideTasksAdd(context.Context, *AddInsideTasksReq) (*InsideTasksCommonResp, error)
	InsideTasksUpdate(context.Context, *UpdateInsideTasksReq) (*InsideTasksCommonResp, error)
	InsideTasksDelete(context.Context, *DeleteInsideTasksReq) (*InsideTasksCommonResp, error)
	InsideTasksGet(context.Context, *GetInsideTasksReq) (*ListInsideTasksData, error)
	InsideTasksList(context.Context, *ListInsideTasksReq) (*ListInsideTasksResp, error)
	InsideTasksOperation(context.Context, *InsideTasksOperationReq) (*InsideTasksOperationResp, error)
	//InsideTasks Rpc End
	//InsideTasksLogs Rpc Start
	InsideTasksLogsAdd(context.Context, *AddInsideTasksLogsReq) (*InsideTasksLogsCommonResp, error)
	InsideTasksLogsUpdate(context.Context, *UpdateInsideTasksLogsReq) (*InsideTasksLogsCommonResp, error)
	InsideTasksLogsDelete(context.Context, *DeleteInsideTasksLogsReq) (*InsideTasksLogsCommonResp, error)
	InsideTasksLogsGet(context.Context, *GetInsideTasksLogsReq) (*ListInsideTasksLogsData, error)
	InsideTasksLogsList(context.Context, *ListInsideTasksLogsReq) (*ListInsideTasksLogsResp, error)
	//InsideTasksLogs Rpc End
	//InsideTasksPid Rpc Start
	InsideTasksPidAdd(context.Context, *AddInsideTasksPidReq) (*InsideTasksPidCommonResp, error)
	InsideTasksPidUpdate(context.Context, *UpdateInsideTasksPidReq) (*InsideTasksPidCommonResp, error)
	InsideTasksPidDelete(context.Context, *DeleteInsideTasksPidReq) (*InsideTasksPidCommonResp, error)
	InsideTasksPidGet(context.Context, *GetInsideTasksPidReq) (*ListInsideTasksPidData, error)
	InsideTasksPidList(context.Context, *ListInsideTasksPidReq) (*ListInsideTasksPidResp, error)
	//InsideVersion Rpc Start
	InsideVersionAdd(context.Context, *AddInsideVersionReq) (*InsideVersionCommonResp, error)
	InsideVersionUpdate(context.Context, *UpdateInsideVersionReq) (*InsideVersionCommonResp, error)
	InsideVersionDelete(context.Context, *DeleteInsideVersionReq) (*InsideVersionCommonResp, error)
	InsideVersionGet(context.Context, *GetInsideVersionReq) (*ListInsideVersionData, error)
	InsideVersionList(context.Context, *ListInsideVersionReq) (*ListInsideVersionResp, error)
	//InsideHostInfo Rpc Start
	InsideHostInfoAdd(context.Context, *AddInsideHostInfoReq) (*InsideHostInfoCommonResp, error)
	InsideHostInfoUpdate(context.Context, *UpdateInsideHostInfoReq) (*InsideHostInfoCommonResp, error)
	InsideHostInfoDelete(context.Context, *DeleteInsideHostInfoReq) (*InsideHostInfoCommonResp, error)
	InsideHostInfoGet(context.Context, *GetInsideHostInfoReq) (*ListInsideHostInfoData, error)
	InsideHostInfoList(context.Context, *ListInsideHostInfoReq) (*ListInsideHostInfoResp, error)
	mustEmbedUnimplementedIntranetServer()
}

// UnimplementedIntranetServer must be embedded to have forward compatible implementations.
type UnimplementedIntranetServer struct {
}

func (UnimplementedIntranetServer) InsideInstallPlanAdd(context.Context, *AddInsideInstallPlanReq) (*InsideInstallPlanCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideInstallPlanAdd not implemented")
}
func (UnimplementedIntranetServer) InsideInstallPlanUpdate(context.Context, *UpdateInsideInstallPlanReq) (*InsideInstallPlanCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideInstallPlanUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideInstallPlanDelete(context.Context, *DeleteInsideInstallPlanReq) (*InsideInstallPlanCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideInstallPlanDelete not implemented")
}
func (UnimplementedIntranetServer) InsideInstallPlanGet(context.Context, *GetInsideInstallPlanReq) (*ListInsideInstallPlanData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideInstallPlanGet not implemented")
}
func (UnimplementedIntranetServer) InsideInstallPlanList(context.Context, *ListInsideInstallPlanReq) (*ListInsideInstallPlanResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideInstallPlanList not implemented")
}
func (UnimplementedIntranetServer) InsideOperationAdd(context.Context, *AddInsideOperationReq) (*InsideOperationCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideOperationAdd not implemented")
}
func (UnimplementedIntranetServer) InsideOperationUpdate(context.Context, *UpdateInsideOperationReq) (*InsideOperationCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideOperationUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideOperationDelete(context.Context, *DeleteInsideOperationReq) (*InsideOperationCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideOperationDelete not implemented")
}
func (UnimplementedIntranetServer) InsideOperationGet(context.Context, *GetInsideOperationReq) (*ListInsideOperationData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideOperationGet not implemented")
}
func (UnimplementedIntranetServer) InsideOperationList(context.Context, *ListInsideOperationReq) (*ListInsideOperationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideOperationList not implemented")
}
func (UnimplementedIntranetServer) InsideProjectClusterAdd(context.Context, *AddInsideProjectClusterReq) (*InsideProjectClusterCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProjectClusterAdd not implemented")
}
func (UnimplementedIntranetServer) InsideProjectClusterUpdate(context.Context, *UpdateInsideProjectClusterReq) (*InsideProjectClusterCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProjectClusterUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideProjectClusterDelete(context.Context, *DeleteInsideProjectClusterReq) (*InsideProjectClusterCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProjectClusterDelete not implemented")
}
func (UnimplementedIntranetServer) InsideProjectClusterGet(context.Context, *GetInsideProjectClusterReq) (*ListInsideProjectClusterData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProjectClusterGet not implemented")
}
func (UnimplementedIntranetServer) InsideProjectClusterList(context.Context, *ListInsideProjectClusterReq) (*ListInsideProjectClusterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProjectClusterList not implemented")
}
func (UnimplementedIntranetServer) InsideProxyHostAdd(context.Context, *AddInsideProxyHostReq) (*InsideProxyHostCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProxyHostAdd not implemented")
}
func (UnimplementedIntranetServer) InsideProxyHostUpdate(context.Context, *UpdateInsideProxyHostReq) (*InsideProxyHostCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProxyHostUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideProxyHostDelete(context.Context, *DeleteInsideProxyHostReq) (*InsideProxyHostCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProxyHostDelete not implemented")
}
func (UnimplementedIntranetServer) InsideProxyHostGet(context.Context, *GetInsideProxyHostReq) (*ListInsideProxyHostData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProxyHostGet not implemented")
}
func (UnimplementedIntranetServer) InsideProxyHostList(context.Context, *ListInsideProxyHostReq) (*ListInsideProxyHostResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideProxyHostList not implemented")
}
func (UnimplementedIntranetServer) InsideServerAdd(context.Context, *AddInsideServerReq) (*InsideServerCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideServerAdd not implemented")
}
func (UnimplementedIntranetServer) InsideServerUpdate(context.Context, *UpdateInsideServerReq) (*InsideServerCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideServerUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideServerDelete(context.Context, *DeleteInsideServerReq) (*InsideServerCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideServerDelete not implemented")
}
func (UnimplementedIntranetServer) InsideServerGet(context.Context, *GetInsideServerReq) (*ListInsideServerData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideServerGet not implemented")
}
func (UnimplementedIntranetServer) InsideServerList(context.Context, *ListInsideServerReq) (*ListInsideServerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideServerList not implemented")
}
func (UnimplementedIntranetServer) InsideTasksAdd(context.Context, *AddInsideTasksReq) (*InsideTasksCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksAdd not implemented")
}
func (UnimplementedIntranetServer) InsideTasksUpdate(context.Context, *UpdateInsideTasksReq) (*InsideTasksCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideTasksDelete(context.Context, *DeleteInsideTasksReq) (*InsideTasksCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksDelete not implemented")
}
func (UnimplementedIntranetServer) InsideTasksGet(context.Context, *GetInsideTasksReq) (*ListInsideTasksData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksGet not implemented")
}
func (UnimplementedIntranetServer) InsideTasksList(context.Context, *ListInsideTasksReq) (*ListInsideTasksResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksList not implemented")
}
func (UnimplementedIntranetServer) InsideTasksOperation(context.Context, *InsideTasksOperationReq) (*InsideTasksOperationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksOperation not implemented")
}
func (UnimplementedIntranetServer) InsideTasksLogsAdd(context.Context, *AddInsideTasksLogsReq) (*InsideTasksLogsCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksLogsAdd not implemented")
}
func (UnimplementedIntranetServer) InsideTasksLogsUpdate(context.Context, *UpdateInsideTasksLogsReq) (*InsideTasksLogsCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksLogsUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideTasksLogsDelete(context.Context, *DeleteInsideTasksLogsReq) (*InsideTasksLogsCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksLogsDelete not implemented")
}
func (UnimplementedIntranetServer) InsideTasksLogsGet(context.Context, *GetInsideTasksLogsReq) (*ListInsideTasksLogsData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksLogsGet not implemented")
}
func (UnimplementedIntranetServer) InsideTasksLogsList(context.Context, *ListInsideTasksLogsReq) (*ListInsideTasksLogsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksLogsList not implemented")
}
func (UnimplementedIntranetServer) InsideTasksPidAdd(context.Context, *AddInsideTasksPidReq) (*InsideTasksPidCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksPidAdd not implemented")
}
func (UnimplementedIntranetServer) InsideTasksPidUpdate(context.Context, *UpdateInsideTasksPidReq) (*InsideTasksPidCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksPidUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideTasksPidDelete(context.Context, *DeleteInsideTasksPidReq) (*InsideTasksPidCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksPidDelete not implemented")
}
func (UnimplementedIntranetServer) InsideTasksPidGet(context.Context, *GetInsideTasksPidReq) (*ListInsideTasksPidData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksPidGet not implemented")
}
func (UnimplementedIntranetServer) InsideTasksPidList(context.Context, *ListInsideTasksPidReq) (*ListInsideTasksPidResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideTasksPidList not implemented")
}
func (UnimplementedIntranetServer) InsideVersionAdd(context.Context, *AddInsideVersionReq) (*InsideVersionCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideVersionAdd not implemented")
}
func (UnimplementedIntranetServer) InsideVersionUpdate(context.Context, *UpdateInsideVersionReq) (*InsideVersionCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideVersionUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideVersionDelete(context.Context, *DeleteInsideVersionReq) (*InsideVersionCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideVersionDelete not implemented")
}
func (UnimplementedIntranetServer) InsideVersionGet(context.Context, *GetInsideVersionReq) (*ListInsideVersionData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideVersionGet not implemented")
}
func (UnimplementedIntranetServer) InsideVersionList(context.Context, *ListInsideVersionReq) (*ListInsideVersionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideVersionList not implemented")
}
func (UnimplementedIntranetServer) InsideHostInfoAdd(context.Context, *AddInsideHostInfoReq) (*InsideHostInfoCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideHostInfoAdd not implemented")
}
func (UnimplementedIntranetServer) InsideHostInfoUpdate(context.Context, *UpdateInsideHostInfoReq) (*InsideHostInfoCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideHostInfoUpdate not implemented")
}
func (UnimplementedIntranetServer) InsideHostInfoDelete(context.Context, *DeleteInsideHostInfoReq) (*InsideHostInfoCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideHostInfoDelete not implemented")
}
func (UnimplementedIntranetServer) InsideHostInfoGet(context.Context, *GetInsideHostInfoReq) (*ListInsideHostInfoData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideHostInfoGet not implemented")
}
func (UnimplementedIntranetServer) InsideHostInfoList(context.Context, *ListInsideHostInfoReq) (*ListInsideHostInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsideHostInfoList not implemented")
}
func (UnimplementedIntranetServer) mustEmbedUnimplementedIntranetServer() {}

// UnsafeIntranetServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IntranetServer will
// result in compilation errors.
type UnsafeIntranetServer interface {
	mustEmbedUnimplementedIntranetServer()
}

func RegisterIntranetServer(s grpc.ServiceRegistrar, srv IntranetServer) {
	s.RegisterService(&Intranet_ServiceDesc, srv)
}

func _Intranet_InsideInstallPlanAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideInstallPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideInstallPlanAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideInstallPlanAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideInstallPlanAdd(ctx, req.(*AddInsideInstallPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideInstallPlanUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideInstallPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideInstallPlanUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideInstallPlanUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideInstallPlanUpdate(ctx, req.(*UpdateInsideInstallPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideInstallPlanDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideInstallPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideInstallPlanDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideInstallPlanDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideInstallPlanDelete(ctx, req.(*DeleteInsideInstallPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideInstallPlanGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideInstallPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideInstallPlanGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideInstallPlanGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideInstallPlanGet(ctx, req.(*GetInsideInstallPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideInstallPlanList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideInstallPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideInstallPlanList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideInstallPlanList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideInstallPlanList(ctx, req.(*ListInsideInstallPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideOperationAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideOperationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideOperationAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideOperationAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideOperationAdd(ctx, req.(*AddInsideOperationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideOperationUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideOperationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideOperationUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideOperationUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideOperationUpdate(ctx, req.(*UpdateInsideOperationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideOperationDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideOperationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideOperationDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideOperationDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideOperationDelete(ctx, req.(*DeleteInsideOperationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideOperationGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideOperationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideOperationGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideOperationGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideOperationGet(ctx, req.(*GetInsideOperationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideOperationList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideOperationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideOperationList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideOperationList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideOperationList(ctx, req.(*ListInsideOperationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProjectClusterAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideProjectClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProjectClusterAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProjectClusterAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProjectClusterAdd(ctx, req.(*AddInsideProjectClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProjectClusterUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideProjectClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProjectClusterUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProjectClusterUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProjectClusterUpdate(ctx, req.(*UpdateInsideProjectClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProjectClusterDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideProjectClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProjectClusterDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProjectClusterDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProjectClusterDelete(ctx, req.(*DeleteInsideProjectClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProjectClusterGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideProjectClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProjectClusterGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProjectClusterGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProjectClusterGet(ctx, req.(*GetInsideProjectClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProjectClusterList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideProjectClusterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProjectClusterList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProjectClusterList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProjectClusterList(ctx, req.(*ListInsideProjectClusterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProxyHostAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideProxyHostReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProxyHostAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProxyHostAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProxyHostAdd(ctx, req.(*AddInsideProxyHostReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProxyHostUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideProxyHostReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProxyHostUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProxyHostUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProxyHostUpdate(ctx, req.(*UpdateInsideProxyHostReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProxyHostDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideProxyHostReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProxyHostDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProxyHostDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProxyHostDelete(ctx, req.(*DeleteInsideProxyHostReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProxyHostGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideProxyHostReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProxyHostGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProxyHostGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProxyHostGet(ctx, req.(*GetInsideProxyHostReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideProxyHostList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideProxyHostReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideProxyHostList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideProxyHostList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideProxyHostList(ctx, req.(*ListInsideProxyHostReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideServerAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideServerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideServerAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideServerAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideServerAdd(ctx, req.(*AddInsideServerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideServerUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideServerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideServerUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideServerUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideServerUpdate(ctx, req.(*UpdateInsideServerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideServerDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideServerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideServerDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideServerDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideServerDelete(ctx, req.(*DeleteInsideServerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideServerGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideServerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideServerGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideServerGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideServerGet(ctx, req.(*GetInsideServerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideServerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideServerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideServerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideServerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideServerList(ctx, req.(*ListInsideServerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideTasksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksAdd(ctx, req.(*AddInsideTasksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideTasksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksUpdate(ctx, req.(*UpdateInsideTasksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideTasksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksDelete(ctx, req.(*DeleteInsideTasksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideTasksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksGet(ctx, req.(*GetInsideTasksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideTasksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksList(ctx, req.(*ListInsideTasksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsideTasksOperationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksOperation(ctx, req.(*InsideTasksOperationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksLogsAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideTasksLogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksLogsAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksLogsAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksLogsAdd(ctx, req.(*AddInsideTasksLogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksLogsUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideTasksLogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksLogsUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksLogsUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksLogsUpdate(ctx, req.(*UpdateInsideTasksLogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksLogsDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideTasksLogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksLogsDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksLogsDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksLogsDelete(ctx, req.(*DeleteInsideTasksLogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksLogsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideTasksLogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksLogsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksLogsGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksLogsGet(ctx, req.(*GetInsideTasksLogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksLogsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideTasksLogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksLogsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksLogsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksLogsList(ctx, req.(*ListInsideTasksLogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksPidAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideTasksPidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksPidAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksPidAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksPidAdd(ctx, req.(*AddInsideTasksPidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksPidUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideTasksPidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksPidUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksPidUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksPidUpdate(ctx, req.(*UpdateInsideTasksPidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksPidDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideTasksPidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksPidDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksPidDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksPidDelete(ctx, req.(*DeleteInsideTasksPidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksPidGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideTasksPidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksPidGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksPidGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksPidGet(ctx, req.(*GetInsideTasksPidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideTasksPidList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideTasksPidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideTasksPidList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideTasksPidList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideTasksPidList(ctx, req.(*ListInsideTasksPidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideVersionAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideVersionAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideVersionAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideVersionAdd(ctx, req.(*AddInsideVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideVersionUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideVersionUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideVersionUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideVersionUpdate(ctx, req.(*UpdateInsideVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideVersionDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideVersionDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideVersionDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideVersionDelete(ctx, req.(*DeleteInsideVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideVersionGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideVersionGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideVersionGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideVersionGet(ctx, req.(*GetInsideVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideVersionList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideVersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideVersionList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideVersionList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideVersionList(ctx, req.(*ListInsideVersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideHostInfoAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInsideHostInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideHostInfoAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideHostInfoAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideHostInfoAdd(ctx, req.(*AddInsideHostInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideHostInfoUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInsideHostInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideHostInfoUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideHostInfoUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideHostInfoUpdate(ctx, req.(*UpdateInsideHostInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideHostInfoDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInsideHostInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideHostInfoDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideHostInfoDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideHostInfoDelete(ctx, req.(*DeleteInsideHostInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideHostInfoGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsideHostInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideHostInfoGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideHostInfoGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideHostInfoGet(ctx, req.(*GetInsideHostInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Intranet_InsideHostInfoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsideHostInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntranetServer).InsideHostInfoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intranetclient.Intranet/InsideHostInfoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntranetServer).InsideHostInfoList(ctx, req.(*ListInsideHostInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Intranet_ServiceDesc is the grpc.ServiceDesc for Intranet service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Intranet_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "intranetclient.Intranet",
	HandlerType: (*IntranetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsideInstallPlanAdd",
			Handler:    _Intranet_InsideInstallPlanAdd_Handler,
		},
		{
			MethodName: "InsideInstallPlanUpdate",
			Handler:    _Intranet_InsideInstallPlanUpdate_Handler,
		},
		{
			MethodName: "InsideInstallPlanDelete",
			Handler:    _Intranet_InsideInstallPlanDelete_Handler,
		},
		{
			MethodName: "InsideInstallPlanGet",
			Handler:    _Intranet_InsideInstallPlanGet_Handler,
		},
		{
			MethodName: "InsideInstallPlanList",
			Handler:    _Intranet_InsideInstallPlanList_Handler,
		},
		{
			MethodName: "InsideOperationAdd",
			Handler:    _Intranet_InsideOperationAdd_Handler,
		},
		{
			MethodName: "InsideOperationUpdate",
			Handler:    _Intranet_InsideOperationUpdate_Handler,
		},
		{
			MethodName: "InsideOperationDelete",
			Handler:    _Intranet_InsideOperationDelete_Handler,
		},
		{
			MethodName: "InsideOperationGet",
			Handler:    _Intranet_InsideOperationGet_Handler,
		},
		{
			MethodName: "InsideOperationList",
			Handler:    _Intranet_InsideOperationList_Handler,
		},
		{
			MethodName: "InsideProjectClusterAdd",
			Handler:    _Intranet_InsideProjectClusterAdd_Handler,
		},
		{
			MethodName: "InsideProjectClusterUpdate",
			Handler:    _Intranet_InsideProjectClusterUpdate_Handler,
		},
		{
			MethodName: "InsideProjectClusterDelete",
			Handler:    _Intranet_InsideProjectClusterDelete_Handler,
		},
		{
			MethodName: "InsideProjectClusterGet",
			Handler:    _Intranet_InsideProjectClusterGet_Handler,
		},
		{
			MethodName: "InsideProjectClusterList",
			Handler:    _Intranet_InsideProjectClusterList_Handler,
		},
		{
			MethodName: "InsideProxyHostAdd",
			Handler:    _Intranet_InsideProxyHostAdd_Handler,
		},
		{
			MethodName: "InsideProxyHostUpdate",
			Handler:    _Intranet_InsideProxyHostUpdate_Handler,
		},
		{
			MethodName: "InsideProxyHostDelete",
			Handler:    _Intranet_InsideProxyHostDelete_Handler,
		},
		{
			MethodName: "InsideProxyHostGet",
			Handler:    _Intranet_InsideProxyHostGet_Handler,
		},
		{
			MethodName: "InsideProxyHostList",
			Handler:    _Intranet_InsideProxyHostList_Handler,
		},
		{
			MethodName: "InsideServerAdd",
			Handler:    _Intranet_InsideServerAdd_Handler,
		},
		{
			MethodName: "InsideServerUpdate",
			Handler:    _Intranet_InsideServerUpdate_Handler,
		},
		{
			MethodName: "InsideServerDelete",
			Handler:    _Intranet_InsideServerDelete_Handler,
		},
		{
			MethodName: "InsideServerGet",
			Handler:    _Intranet_InsideServerGet_Handler,
		},
		{
			MethodName: "InsideServerList",
			Handler:    _Intranet_InsideServerList_Handler,
		},
		{
			MethodName: "InsideTasksAdd",
			Handler:    _Intranet_InsideTasksAdd_Handler,
		},
		{
			MethodName: "InsideTasksUpdate",
			Handler:    _Intranet_InsideTasksUpdate_Handler,
		},
		{
			MethodName: "InsideTasksDelete",
			Handler:    _Intranet_InsideTasksDelete_Handler,
		},
		{
			MethodName: "InsideTasksGet",
			Handler:    _Intranet_InsideTasksGet_Handler,
		},
		{
			MethodName: "InsideTasksList",
			Handler:    _Intranet_InsideTasksList_Handler,
		},
		{
			MethodName: "InsideTasksOperation",
			Handler:    _Intranet_InsideTasksOperation_Handler,
		},
		{
			MethodName: "InsideTasksLogsAdd",
			Handler:    _Intranet_InsideTasksLogsAdd_Handler,
		},
		{
			MethodName: "InsideTasksLogsUpdate",
			Handler:    _Intranet_InsideTasksLogsUpdate_Handler,
		},
		{
			MethodName: "InsideTasksLogsDelete",
			Handler:    _Intranet_InsideTasksLogsDelete_Handler,
		},
		{
			MethodName: "InsideTasksLogsGet",
			Handler:    _Intranet_InsideTasksLogsGet_Handler,
		},
		{
			MethodName: "InsideTasksLogsList",
			Handler:    _Intranet_InsideTasksLogsList_Handler,
		},
		{
			MethodName: "InsideTasksPidAdd",
			Handler:    _Intranet_InsideTasksPidAdd_Handler,
		},
		{
			MethodName: "InsideTasksPidUpdate",
			Handler:    _Intranet_InsideTasksPidUpdate_Handler,
		},
		{
			MethodName: "InsideTasksPidDelete",
			Handler:    _Intranet_InsideTasksPidDelete_Handler,
		},
		{
			MethodName: "InsideTasksPidGet",
			Handler:    _Intranet_InsideTasksPidGet_Handler,
		},
		{
			MethodName: "InsideTasksPidList",
			Handler:    _Intranet_InsideTasksPidList_Handler,
		},
		{
			MethodName: "InsideVersionAdd",
			Handler:    _Intranet_InsideVersionAdd_Handler,
		},
		{
			MethodName: "InsideVersionUpdate",
			Handler:    _Intranet_InsideVersionUpdate_Handler,
		},
		{
			MethodName: "InsideVersionDelete",
			Handler:    _Intranet_InsideVersionDelete_Handler,
		},
		{
			MethodName: "InsideVersionGet",
			Handler:    _Intranet_InsideVersionGet_Handler,
		},
		{
			MethodName: "InsideVersionList",
			Handler:    _Intranet_InsideVersionList_Handler,
		},
		{
			MethodName: "InsideHostInfoAdd",
			Handler:    _Intranet_InsideHostInfoAdd_Handler,
		},
		{
			MethodName: "InsideHostInfoUpdate",
			Handler:    _Intranet_InsideHostInfoUpdate_Handler,
		},
		{
			MethodName: "InsideHostInfoDelete",
			Handler:    _Intranet_InsideHostInfoDelete_Handler,
		},
		{
			MethodName: "InsideHostInfoGet",
			Handler:    _Intranet_InsideHostInfoGet_Handler,
		},
		{
			MethodName: "InsideHostInfoList",
			Handler:    _Intranet_InsideHostInfoList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "intranet.proto",
}
